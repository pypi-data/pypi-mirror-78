Metadata-Version: 2.1
Name: pyco-sqlalchemy
Version: 1.1.2
Summary: Simple ORM BaseModel for Flask depends on SqlAlchemy
Home-page: https://github.com/dodoru/pyco-sqlalchemy
Author: Nico Ning
Author-email: dodoru@foxmail.com
License: MIT
Description: 
        # pyco-sqlalchemy
        
        Using `CoModel` to make SqlAlchemy's ORM even simpler for humans, develop with Flask/Django/OtherWebFrames. 
        
        note: 不管在使用任何 web 框架, 我都希望能有统一的 ORM 查询接口, 且易于在不同的数据库间迁移.  
        
        
        ## Tips:
        - use `charset=UTF8MB4 collate utf8_general_ci`
        
          - refer: [What's the difference between utf8_general_ci and utf8_unicode_ci?](https://stackoverflow.com/questions/766809/whats-the-difference-between-utf8-general-ci-and-utf8-unicode-ci)
          
        
        ## Samples
        
        - flask
        
        ```python
        from pyco_sqlalchemy._flask import BaseModel, db
        
        class User(db.Model, BaseModel):
            id = db.Column(db.Integer, primary_key=True, autoincrement=True)
            name = db.Column(db.String(32))
            email = db.Column(db.String(64), unique=True)
             
        
        form = dict(name="dev")
        u1 = User.insert(form, email="dev@pypi.com")
        u3 = User.upsert_one(form, email="dev@oncode.cc")
        assert u1.id == u3.id
        
        ```
        
Platform: any
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Topic :: Utilities
Classifier: Development Status :: 4 - Beta
Description-Content-Type: text/markdown
