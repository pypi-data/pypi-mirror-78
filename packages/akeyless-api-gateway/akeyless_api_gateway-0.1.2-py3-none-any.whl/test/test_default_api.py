# coding: utf-8

"""
    AKEYLESS Vault API

    RESTFull API for interacting with AKEYLESS Vault API  # noqa: E501

    OpenAPI spec version: 0.1.1
    Contact: refael@akeyless.io
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import akeyless_api_gateway
from akeyless_api_gateway.api.default_api import DefaultApi  # noqa: E501
from akeyless_api_gateway.rest import ApiException


class TestDefaultApi(unittest.TestCase):
    """DefaultApi unit test stubs"""

    def setUp(self):
        self.api = akeyless_api_gateway.api.default_api.DefaultApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_assoc_role_am(self):
        """Test case for assoc_role_am

        Create an association between role and auth method  # noqa: E501
        """
        pass

    def test_auth(self):
        """Test case for auth

        Authenticate to the service and returns a token to be used as a profile to execute the CLI without the need for re-authentication  # noqa: E501
        """
        pass

    def test_configure(self):
        """Test case for configure

        Configure client profile.  # noqa: E501
        """
        pass

    def test_create_auth_method(self):
        """Test case for create_auth_method

        Create a new Auth Method in the account  # noqa: E501
        """
        pass

    def test_create_auth_method_aws_iam(self):
        """Test case for create_auth_method_aws_iam

        Create a new Auth Method that will be able to authenticate using AWS IAM credentials  # noqa: E501
        """
        pass

    def test_create_auth_method_azure_ad(self):
        """Test case for create_auth_method_azure_ad

        Create a new Auth Method that will be able to authenticate using Azure Active Directory credentials  # noqa: E501
        """
        pass

    def test_create_auth_method_ldap(self):
        """Test case for create_auth_method_ldap

        Create a new Auth Method that will be able to authenticate using LDAP  # noqa: E501
        """
        pass

    def test_create_auth_method_oauth2(self):
        """Test case for create_auth_method_oauth2

        Create a new Auth Method that will be able to authenticate using OpenId/OAuth2  # noqa: E501
        """
        pass

    def test_create_auth_method_saml(self):
        """Test case for create_auth_method_saml

        Create a new Auth Method that will be able to authenticate using SAML  # noqa: E501
        """
        pass

    def test_create_dynamic_secret(self):
        """Test case for create_dynamic_secret

        Creates a new dynamic secret item  # noqa: E501
        """
        pass

    def test_create_key(self):
        """Test case for create_key

        Creates a new key  # noqa: E501
        """
        pass

    def test_create_pki_cert_issuer(self):
        """Test case for create_pki_cert_issuer

        Creates a new PKI certificate issuer  # noqa: E501
        """
        pass

    def test_create_role(self):
        """Test case for create_role

        Creates a new role  # noqa: E501
        """
        pass

    def test_create_secret(self):
        """Test case for create_secret

        Creates a new secret item  # noqa: E501
        """
        pass

    def test_create_ssh_cert_issuer(self):
        """Test case for create_ssh_cert_issuer

        Creates a new SSH certificate issuer  # noqa: E501
        """
        pass

    def test_decrypt(self):
        """Test case for decrypt

        Decrypts ciphertext into plaintext by using an AES key  # noqa: E501
        """
        pass

    def test_decrypt_file(self):
        """Test case for decrypt_file

        Decrypts a file by using an AES key  # noqa: E501
        """
        pass

    def test_decrypt_pkcs1(self):
        """Test case for decrypt_pkcs1

        Decrypts a plaintext using RSA and the padding scheme from PKCS#1 v1.5  # noqa: E501
        """
        pass

    def test_delete_assoc(self):
        """Test case for delete_assoc

        Delete an association between role and auth method  # noqa: E501
        """
        pass

    def test_delete_auth_method(self):
        """Test case for delete_auth_method

        Delete the Auth Method  # noqa: E501
        """
        pass

    def test_delete_item(self):
        """Test case for delete_item

        Delete an item or an item version  # noqa: E501
        """
        pass

    def test_delete_role(self):
        """Test case for delete_role

        Delete a role  # noqa: E501
        """
        pass

    def test_delete_role_rule(self):
        """Test case for delete_role_rule

        Delete a rule from a role  # noqa: E501
        """
        pass

    def test_describe_item(self):
        """Test case for describe_item

        Returns the item details  # noqa: E501
        """
        pass

    def test_encrypt(self):
        """Test case for encrypt

        Encrypts plaintext into ciphertext by using an AES key  # noqa: E501
        """
        pass

    def test_encrypt_file(self):
        """Test case for encrypt_file

        Encrypts a file by using an AES key  # noqa: E501
        """
        pass

    def test_encrypt_pkcs1(self):
        """Test case for encrypt_pkcs1

        Encrypts the given message with RSA and the padding scheme from PKCS#1 v1.5  # noqa: E501
        """
        pass

    def test_get_auth_method(self):
        """Test case for get_auth_method

        Returns an information about the Auth Method  # noqa: E501
        """
        pass

    def test_get_cloud_identity(self):
        """Test case for get_cloud_identity

        Get Cloud Identity Token (relevant only for access-type=azure_ad,aws_iam)  # noqa: E501
        """
        pass

    def test_get_dynamic_secret_value(self):
        """Test case for get_dynamic_secret_value

        Get dynamic secret value  # noqa: E501
        """
        pass

    def test_get_kube_exec_creds(self):
        """Test case for get_kube_exec_creds

        Get credentials for authentication with Kubernetes cluster based on a PKI Cert Issuer  # noqa: E501
        """
        pass

    def test_get_pki_certificate(self):
        """Test case for get_pki_certificate

        Generates PKI certificate  # noqa: E501
        """
        pass

    def test_get_role(self):
        """Test case for get_role

        Get role details  # noqa: E501
        """
        pass

    def test_get_rsa_public(self):
        """Test case for get_rsa_public

        Obtain the public key from a specific RSA private key  # noqa: E501
        """
        pass

    def test_get_secret_value(self):
        """Test case for get_secret_value

        Get static secret value  # noqa: E501
        """
        pass

    def test_get_ssh_certificate(self):
        """Test case for get_ssh_certificate

        Generates SSH certificate  # noqa: E501
        """
        pass

    def test_help(self):
        """Test case for help

        help text  # noqa: E501
        """
        pass

    def test_list_auth_methods(self):
        """Test case for list_auth_methods

        Returns a list of all the Auth Methods in the account  # noqa: E501
        """
        pass

    def test_list_items(self):
        """Test case for list_items

        Returns a list of all accessible items  # noqa: E501
        """
        pass

    def test_list_roles(self):
        """Test case for list_roles

        Returns a list of all roles in the account  # noqa: E501
        """
        pass

    def test_set_role_rule(self):
        """Test case for set_role_rule

        Set a rule to a role  # noqa: E501
        """
        pass

    def test_sign_pkcs1(self):
        """Test case for sign_pkcs1

        Calculates the signature of hashed using RSASSA-PKCS1-V1_5-SIGN from RSA PKCS#1 v1.5  # noqa: E501
        """
        pass

    def test_unconfigure(self):
        """Test case for unconfigure

        Remove Configuration of client profile.  # noqa: E501
        """
        pass

    def test_update(self):
        """Test case for update

        Update a new AKEYLESS CLI version  # noqa: E501
        """
        pass

    def test_update_item(self):
        """Test case for update_item

        Update item name and metadata  # noqa: E501
        """
        pass

    def test_update_role(self):
        """Test case for update_role

        Update role details  # noqa: E501
        """
        pass

    def test_update_secret_val(self):
        """Test case for update_secret_val

        Update static secret value  # noqa: E501
        """
        pass

    def test_upload_pkcs12(self):
        """Test case for upload_pkcs12

        Upload a PKCS#12 key and certificates  # noqa: E501
        """
        pass

    def test_upload_rsa(self):
        """Test case for upload_rsa

        Upload RSA key  # noqa: E501
        """
        pass

    def test_verify_pkcs1(self):
        """Test case for verify_pkcs1

        Verifies an RSA PKCS#1 v1.5 signature  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
