import base64
import io
import zlib
from typing import BinaryIO

from reportlab.pdfbase import pdfmetrics
from reportlab.pdfbase.pdfdoc import PDFInfo, PDFString, PDFName, PDFDate, PDFDictionary
from reportlab.pdfbase.ttfonts import TTFont
from PyPDF2 import PdfFileMerger, PdfFileReader


class CustomPDFInfo(PDFInfo):
    def __init__(self):
        super().__init__()
        self.custom = None

    def format(self, document):
        D = {}
        D["Title"] = PDFString(self.title)
        D["Author"] = PDFString(self.author)
        D["ModDate"] = D["CreationDate"] = PDFDate(ts=document._timeStamp, dateFormatter=self._dateFormatter)
        D["Producer"] = PDFString(self.producer)
        D["Creator"] = PDFString(self.creator)
        D["Subject"] = PDFString(self.subject)
        D["Keywords"] = PDFString(self.keywords)
        D["Trapped"] = PDFName(self.trapped)
        if self.custom is not None:
            D["Custom"] = PDFString(self.custom)
        PD = PDFDictionary(D)
        return PD.format(document)


def load_invisible_font():
    """Loads in an invisible font into pdfmetrics
    
    License: 
        Glyphless variation of vedaal's invisible font retrieved from
        http://www.angelfire.com/pr/pgpf/if.html, which says:
        'Invisible font' is unrestricted freeware. Enjoy, Improve, Distribute freely
    """
    font = b"\x00\x01\x00\x00\x00\r\x00\x80\x00\x03\x00PFFTMRu\xa1\xab\x00\x00\tT\x00\x00\x00\x1cGDEF\x000\x00\x04\x00\x00\t4\x00\x00\x00 OS/2\xbd}\x87\xd9\x00\x00\x01X\x00\x00\x00Vcmap\x00\r\x03\x96\x00\x00\x01\xb8\x00\x00\x01:gasp\xff\xff\x00\x03\x00\x00\t,\x00\x00\x00\x08glyf\x00\x00\x00\x00\x00\x00\x02\xfc\x00\x00\x00\x00head\xf7\xc8\x05Y\x00\x00\x00\xdc\x00\x00\x006hhea\n\x1d\x02Y\x00\x00\x01\x14\x00\x00\x00$hmtx\x08\x00\x00\x00\x00\x00\x01\xb0\x00\x00\x00\x08loca\x00\x00\x00\x00\x00\x00\x02\xf4\x00\x00\x00\x08maxp\x04b\x001\x00\x00\x018\x00\x00\x00 name\xc36\xdch\x00\x00\x02\xfc\x00\x00\x06\x08post\xff-\x00\x98\x00\x00\t\x04\x00\x00\x00(\x00\x01\x00\x00\x00\x01\x00\x00\xee\xf5=\xd6_\x0f<\xf5\x00\x0b\x08\x00\x00\x00\x00\x00\xccT\xe0.\x00\x00\x00\x00\xccT\xe0.\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\x00\x02\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\t\xd8\xfaW\x00C\x08\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x10\x00/\x00B\x00\x00\x04\x0c\x00\x00\x00\x00\x00\x00\x00\x01\x01\xf4\x01\x90\x00\x05\x00\x08\x05\x9a\x053\x00\x00\x01\x1b\x05\x9a\x053\x00\x00\x03\xd1\x00f\x02\x12\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa0\x00\x02\xafP\x00x\xfb\x00\x00\x00\x00\x00\x00\x00\x00HL  \x00@\xff\xff\x00\x00\x05\xd3\xfeQ\x013\x03r\x04\x0f`\x00\x01\x9f\xdf\xf7\x00\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x03\x00\x00\x00\x1c\x00\x01\x00\x00\x00\x00\x004\x00\x03\x00\x01\x00\x00\x00\x1c\x00\x04\x00\x18\x00\x00\x00\x02\x00\x02\x00\x00\x00\x00\xff\xff\x00\x00\xff\xff\x00\x01\x00\x00\x00\x00\x01\x06\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00(\x01\xe6\x00\x01\x00\x00\x00\x00\x00\x00\x004\x00j\x00\x01\x00\x00\x00\x00\x00\x01\x00\t\x00\xb3\x00\x01\x00\x00\x00\x00\x00\x02\x00\x07\x00\xcd\x00\x01\x00\x00\x00\x00\x00\x03\x00\x16\x01\x03\x00\x01\x00\x00\x00\x00\x00\x04\x00\t\x01.\x00\x01\x00\x00\x00\x00\x00\x05\x000\x01\x9a\x00\x01\x00\x00\x00\x00\x00\x06\x00\t\x01\xdf\x00\x01\x00\x00\x00\x00\x00\n\x00@\x02k\x00\x03\x00\x01\x04\x03\x00\x02\x00\x0c\x02\xac\x00\x03\x00\x01\x04\x05\x00\x02\x00\x10\x02\xba\x00\x03\x00\x01\x04\x06\x00\x02\x00\x0c\x02\xcc\x00\x03\x00\x01\x04\x07\x00\x02\x00\x10\x02\xda\x00\x03\x00\x01\x04\x08\x00\x02\x00\x10\x02\xec\x00\x03\x00\x01\x04\t\x00\x00\x00h\x00\x00\x00\x03\x00\x01\x04\t\x00\x01\x00\x12\x00\x9f\x00\x03\x00\x01\x04\t\x00\x02\x00\x0e\x00\xbd\x00\x03\x00\x01\x04\t\x00\x03\x00,\x00\xd5\x00\x03\x00\x01\x04\t\x00\x04\x00\x12\x01\x1a\x00\x03\x00\x01\x04\t\x00\x05\x00`\x018\x00\x03\x00\x01\x04\t\x00\x06\x00\x12\x01\xcb\x00\x03\x00\x01\x04\t\x00\n\x00\x80\x01\xe9\x00\x03\x00\x01\x04\n\x00\x02\x00\x0c\x02\xfe\x00\x03\x00\x01\x04\x0b\x00\x02\x00\x10\x03\x0c\x00\x03\x00\x01\x04\x0c\x00\x02\x00\x0c\x03\x1e\x00\x03\x00\x01\x04\x0e\x00\x02\x00\x0c\x03,\x00\x03\x00\x01\x04\x10\x00\x02\x00\x0e\x03:\x00\x03\x00\x01\x04\x13\x00\x02\x00\x12\x03J\x00\x03\x00\x01\x04\x14\x00\x02\x00\x0c\x03^\x00\x03\x00\x01\x04\x15\x00\x02\x00\x10\x03l\x00\x03\x00\x01\x04\x16\x00\x02\x00\x0c\x03~\x00\x03\x00\x01\x04\x19\x00\x02\x00\x0e\x03\x8c\x00\x03\x00\x01\x04\x1b\x00\x02\x00\x10\x03\x9c\x00\x03\x00\x01\x04\x1d\x00\x02\x00\x0c\x03\xae\x00\x03\x00\x01\x04\x1f\x00\x02\x00\x0c\x03\xbc\x00\x03\x00\x01\x04$\x00\x02\x00\x0e\x03\xca\x00\x03\x00\x01\x04-\x00\x02\x00\x0e\x03\xda\x00\x03\x00\x01\x08\n\x00\x02\x00\x0c\x03\xea\x00\x03\x00\x01\x08\x16\x00\x02\x00\x0c\x03\xf8\x00\x03\x00\x01\x0c\n\x00\x02\x00\x0c\x04\x06\x00\x03\x00\x01\x0c\x0c\x00\x02\x00\x0c\x04\x14\x00T\x00y\x00p\x00e\x00f\x00a\x00c\x00e\x00 \x00\xa9\x00 \x00(\x00y\x00o\x00u\x00r\x00 \x00c\x00o\x00m\x00p\x00a\x00n\x00y\x00)\x00.\x00 \x002\x000\x000\x005\x00.\x00 \x00A\x00l\x00l\x00 \x00R\x00i\x00g\x00h\x00t\x00s\x00 \x00R\x00e\x00s\x00e\x00r\x00v\x00e\x00d\x00\x00Typeface \xa9 (your company). 2005. All Rights Reserved\x00\x00i\x00n\x00v\x00i\x00s\x00i\x00b\x00l\x00e\x00\x00invisible\x00\x00R\x00e\x00g\x00u\x00l\x00a\x00r\x00\x00Regular\x00\x00i\x00n\x00v\x00i\x00s\x00i\x00b\x00l\x00e\x00:\x00V\x00e\x00r\x00s\x00i\x00o\x00n\x00 \x001\x00.\x000\x000\x00\x00invisible:Version 1.00\x00\x00i\x00n\x00v\x00i\x00s\x00i\x00b\x00l\x00e\x00\x00invisible\x00\x00V\x00e\x00r\x00s\x00i\x00o\x00n\x00 \x001\x00.\x000\x000\x00 \x00S\x00e\x00p\x00t\x00e\x00m\x00b\x00e\x00r\x00 \x001\x003\x00,\x00 \x002\x000\x000\x005\x00,\x00 \x00i\x00n\x00i\x00t\x00i\x00a\x00l\x00 \x00r\x00e\x00l\x00e\x00a\x00s\x00e\x00\x00Version 1.00 September 13, 2005, initial release\x00\x00i\x00n\x00v\x00i\x00s\x00i\x00b\x00l\x00e\x00\x00invisible\x00\x00T\x00h\x00i\x00s\x00 \x00f\x00o\x00n\x00t\x00 \x00w\x00a\x00s\x00 \x00c\x00r\x00e\x00a\x00t\x00e\x00d\x00 \x00u\x00s\x00i\x00n\x00g\x00 \x00F\x00o\x00n\x00t\x00 \x00C\x00r\x00e\x00a\x00t\x00o\x00r\x00 \x005\x00.\x000\x00 \x00f\x00r\x00o\x00m\x00 \x00H\x00i\x00g\x00h\x00-\x00L\x00o\x00g\x00i\x00c\x00.\x00c\x00o\x00m\x00\x00This font was created using Font Creator 5.0 from High-Logic.com\x00\x00N\x00o\x00r\x00m\x00a\x00l\x00\x00\x00o\x00b\x00y\x01\r\x00e\x00j\x00n\x00\xe9\x00\x00\x00n\x00o\x00r\x00m\x00a\x00l\x00\x00\x00S\x00t\x00a\x00n\x00d\x00a\x00r\x00d\x00\x00\x03\x9a\x03\xb1\x03\xbd\x03\xbf\x03\xbd\x03\xb9\x03\xba\x03\xac\x00\x00\x00N\x00o\x00r\x00m\x00a\x00l\x00\x00\x00N\x00o\x00r\x00m\x00a\x00a\x00l\x00i\x00\x00\x00N\x00o\x00r\x00m\x00a\x00l\x00\x00\x00N\x00o\x00r\x00m\x00\xe1\x00l\x00\x00\x00N\x00o\x00r\x00m\x00a\x00l\x00e\x00\x00\x00S\x00t\x00a\x00n\x00d\x00a\x00a\x00r\x00d\x00\x00\x00N\x00o\x00r\x00m\x00a\x00l\x00\x00\x00N\x00o\x00r\x00m\x00a\x00l\x00n\x00y\x00\x00\x00N\x00o\x00r\x00m\x00a\x00l\x00\x00\x04\x1e\x041\x04K\x04G\x04=\x04K\x049\x00\x00\x00N\x00o\x00r\x00m\x00\xe1\x00l\x00n\x00e\x00\x00\x00N\x00o\x00r\x00m\x00a\x00l\x00\x00\x00N\x00o\x00r\x00m\x00a\x00l\x00\x00\x00N\x00a\x00v\x00a\x00d\x00n\x00o\x00\x00\x00A\x00r\x00r\x00u\x00n\x00t\x00a\x00\x00\x00N\x00o\x00r\x00m\x00a\x00l\x00\x00\x00N\x00o\x00r\x00m\x00a\x00l\x00\x00\x00N\x00o\x00r\x00m\x00a\x00l\x00\x00\x00N\x00o\x00r\x00m\x00a\x00l\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\xff'\x00\x96\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x01\x00\x02\x00\x00\x00\x01\xff\xff\x00\x02\x00\x01\x00\x00\x00\x0e\x00\x00\x00\x18\x00\x00\x00\x00\x00\x02\x00\x01\x00\x01\x00\x02\x00\x01\x00\x04\x00\x00\x00\x02\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\xc6\xd4.\x99\x00\x00\x00\x00\xbfL\x92\xf0\x00\x00\x00\x00\xccT\xe0!"
    ttf = io.BytesIO(font)
    ttf.name = "(invisible.ttf)"
    pdfmetrics.registerFont(TTFont("invisible", ttf))


class MemoryWrapper:
    """
    Wrapper around StringIO that ensures 'bytes' data is decoded
    to 'latin1' (0x00 - 0xff) before writing out. This is necessary for
    the invisible font to be injected as bytes but written out as a string.
    """

    def __init__(self):
        self.data = io.StringIO()

    def write(self, data: bytes, *args, **kwargs):
        if bytes != str and isinstance(data, bytes):
            data = data.decode("latin1")
        self.data.write(data)
        self.data.seek(0)


class LayeredPDF:
    def __init__(self, mem: io.StringIO):
        self.mem = mem

    def save(self, f: BinaryIO):
        self.mem.data.seek(0)
        f.write(self.mem.data.getvalue())

    def __add__(self, other):
        if isinstance(other, LayeredPDF):

            merger = PdfFileMerger()

            self.mem.data.seek(0)
            other.mem.data.seek(0)

            with io.BytesIO() as pdf1, io.BytesIO() as pdf2:
                pdf1.write(self.mem.data.getvalue().encode("latin1"))
                pdf2.write(other.mem.data.getvalue().encode("latin1"))
                pdf1.seek(0)
                pdf2.seek(0)
                merger.append(PdfFileReader(pdf1))
                merger.append(PdfFileReader(pdf2))

            mem = io.BytesIO()
            merger.write(mem)
            mem.seek(0)
            data = mem.getvalue().decode("latin1")
            mem2 = MemoryWrapper()
            mem2.write(data)
            mem2.data.seek(0)

            return LayeredPDF(mem2)
        else:
            raise TypeError


class Ocr2PdfException(Exception):
    pass
