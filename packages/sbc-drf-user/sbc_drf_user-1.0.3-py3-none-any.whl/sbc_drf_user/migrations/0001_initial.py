# Generated by Django 3.0.5 on 2020-04-16 07:37

import uuid

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False,
                                        verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False,
                                                     help_text='Designates that this user has all permissions without explicitly assigning them.',
                                                     verbose_name='superuser status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('first_name',
                 models.CharField(blank=True, db_index=True, default='Nameless', max_length=50,
                                  verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, db_index=True, default='', max_length=50,
                                               verbose_name='Last Name')),
                ('email',
                 models.EmailField(max_length=254, unique=True, verbose_name='Email Address')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Staff')),
                ('email_verification_key',
                 models.UUIDField(blank=True, default=uuid.uuid4, editable=False)),
                ('password_reset_key',
                 models.UUIDField(blank=True, default=uuid.uuid4, editable=False)),
                ('is_password_reset', models.BooleanField(blank=True, default=True)),
                ('password_reset_requested_at', models.DateTimeField(default=None, null=True)),
                ('password_reset_at', models.DateTimeField(default=None, null=True)),
                ('groups', models.ManyToManyField(blank=True,
                                                  help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                                                  related_name='user_set',
                                                  related_query_name='user', to='auth.Group',
                                                  verbose_name='groups')),
                ('user_permissions',
                 models.ManyToManyField(blank=True, help_text='Specific permissions for this user.',
                                        related_name='user_set', related_query_name='user',
                                        to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
                'abstract': False,
                'swappable': 'AUTH_USER_MODEL',
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
    ]
