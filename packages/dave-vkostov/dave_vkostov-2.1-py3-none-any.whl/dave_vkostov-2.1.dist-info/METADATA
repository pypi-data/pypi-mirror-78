Metadata-Version: 2.1
Name: dave-vkostov
Version: 2.1
Summary: DISCOVERY AND VETTING of EXOPLANETS
Home-page: https://github.com/exoplanetvetting/DAVE
Author: V.Kostov
Author-email: veselin.b.kostov@nasa.gov
License: UNKNOWN
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: Unix
Description-Content-Type: text/markdown

# dave™
**D**iscovery **A**nd **V**etting of **E**xoplanets™

## Summary

This repository implements a pipeline to find and vet planets planets
using data from NASA K2 and TESS missions.

The pipeline performs the following steps:

1. Create a subset of targets for testing
2. Light Curve Genertion/CoTrend -- remove instrumental effects
	e.g. PDC light curves
	     Dan Foreman-Mackey's method
3. Detrend/Search for planets -- BLS
4. Fitting a planetary model
5. Produce vetting Metrics
6. Output useful data products


## Installation and Requirements
Please consider installing DAVE in a new environment (with Python 3.6/3.7, gnuplot installation may be a problem with 3.8) as you'll need to pip install the following packages before proceeding: astropy, metric_learn, sklearn ,pyfits, astroquery, conda install gnuplot (from command line:  conda install -c conda-forge gnuplot ), PyGnuplot, parmap, bls, clipboard, lpproj, numba and eleanor.
After having installed all the dependencies, please pip install dave-vkostov.
Now you only need one last thing: go to the dave directory, open the tessPipeline directory and open the vet_tess_.py script. Here you will see some (3 or 4) lines of code with the path of my machine. Replace them with your path to the dave dir.
Thanks for installing. 


## Example use for TESS
from python:

    from dave.tessPipeline import vet_tess_
    detrendType = "tess_2min"
    clip = vet_tess_.runOneDv(detrendType, 2, 307210830, 1, 3.690613, 1356.2038, 1863, 1.27)
    outfile = "tmp.txt"
    export_ = vet_tess_.runExport(clip,outfile_)

where input for runOneDv is: Sector, TIC ID, Planet Number, Period, BTJD, Transit Depth [ppm], Transit Duration [hours].

Currently supported "detrendType" are "tess_2min" and "eleanor", where "tess_2min" refers to the SPOC short-cadence data, and "eleanor" refers to eleanor-generated FFI lightcurves





