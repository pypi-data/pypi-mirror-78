// This file is automatically generated by sila2lib.proto_builder.proto_builder version 0.2.0
// :generation date: 2019-09-17 16:59:38
// 
// ---- PLEASE DO NOT MODIFY MANUALLY !! ---

syntax = "proto3";
import "SiLAFramework.proto";
package sila2.org.silastandard.core.lockcontroller.v1;

// Feature: Lock Controller
//   
//           This Feature allows a SiLA Client to lock a SiLA Server for exclusive use, preventing other SiLA Clients from
//           using the server while it is locked. To lock a SiLA Server a lock identifier has to be set, using the
//           'LockServer' command. This identifier has to be sent along with every (lock protected) request to the SiLA
//   Server in
//           order to use it's functionality.
//   
//           To send the lock identifier the SiLA Client Meta Data 'LockIdentifier' has to be used.
//           When locking a SiLA Server a timeout can be specified that defines the time after which the SiLA Server will
//           be automatically unlocked if no request with a valid lock identifier has been received meanwhile. After the
//   timeout has
//           expired or after explicit unlock no lock identifier has to be sent any more.
//   
service LockController {
    // Lock Server
    //   
    //               Locks a SiLA Server for exclusive use by setting a lock identifier that has to be sent along with
    //               any following (lock protected) request as long as the SiLA Server is locked.
    //   
    rpc LockServer(sila2.org.silastandard.core.lockcontroller.v1.LockServer_Parameters) returns (sila2.org.silastandard.core.lockcontroller.v1.LockServer_Responses) {}
    // Unlock Server
    //   
    //               Unlocks a locked SiLA Server. No lock identifier has to be sent for any following calls until
    //               the server is locked again.
    //   
    rpc UnlockServer(sila2.org.silastandard.core.lockcontroller.v1.UnlockServer_Parameters) returns (sila2.org.silastandard.core.lockcontroller.v1.UnlockServer_Responses) {}
    // IsLocked
    //   
    //               Returns true if the SiLA Server is currently locked or false else.
    //   
    //               This property MUST NOT be lock protected, so that any SiLA Client can query the current lock state
    //               of a SiLA Server.
    //   
    rpc Get_IsLocked(sila2.org.silastandard.core.lockcontroller.v1.Get_IsLocked_Parameters) returns (sila2.org.silastandard.core.lockcontroller.v1.Get_IsLocked_Responses) {}
    // Lock Identifier
    //   The lock identifier has to be sent with every (lock protected) call in order to use the functionality of a locked SiLA
    //   Server.
    rpc Get_FCPAffectedByMetadata_LockIdentifier(sila2.org.silastandard.core.lockcontroller.v1.Get_FCPAffectedByMetadata_LockIdentifier_Parameters) returns (sila2.org.silastandard.core.lockcontroller.v1.Get_FCPAffectedByMetadata_LockIdentifier_Responses) {}
}

// ----------------- Data Type definitions -----------------


// ------ Command Parameter and Response definitions -------
message LockServer_Parameters {
    sila2.org.silastandard.String LockIdentifier = 1;
    // Constrained type, not reflected in protocol buffers
    sila2.org.silastandard.Integer Timeout = 2;
}

message LockServer_Responses {
    
}

message UnlockServer_Parameters {
    sila2.org.silastandard.String LockIdentifier = 1;
}

message UnlockServer_Responses {
    
}
message Get_IsLocked_Parameters {
    // Empty message
}

message Get_IsLocked_Responses {
    sila2.org.silastandard.Boolean IsLocked = 1;
}

// ----------------- Metadata Definitions ------------------
message Get_FCPAffectedByMetadata_LockIdentifier_Parameters {}
message Get_FCPAffectedByMetadata_LockIdentifier_Responses {
    repeated sila2.org.silastandard.String AffectedCalls = 1;
}
message Metadata_LockIdentifier {
    sila2.org.silastandard.String LockIdentifier = 1;
}