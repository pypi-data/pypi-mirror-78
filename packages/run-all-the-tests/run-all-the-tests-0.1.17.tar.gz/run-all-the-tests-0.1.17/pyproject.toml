[tool.poetry]
name = "run-all-the-tests"
version = "0.1.17"
authors = ["Greg Kedge <gregwork@kedges.com>"]
description = "Make sure both 'python -m pytest' and 'pytest' run your tests."
readme = "README.md"
homepage = "https://github.com/gkedge/run-all-the-tests"
repository = "https://github.com/gkedge/run-all-the-tests"
license = "MIT"
keywords = ["testing", "pytest", "sys.path", "packaging", "dependency", "pyproject.toml"]
include = ["docs/**/*", "src/run_all_the_tests/py.typed"]

classifiers = [
        "Programming Language :: Python :: 3",
        "Topic :: Software Development :: Testing",
        "Topic :: Software Development :: Libraries",
	    "Topic :: Utilities",
        "Operating System :: OS Independent",
        "Natural Language :: English",
        "Intended Audience :: Developers",
]

[tool.pylint.basic]
good-names = "ii,jj,kk,ex,_"
#init-hook = 'from pylint.config import find_pylintrc; from pathlib import Path; import sys;\
#        project_dir = Path(find_pylintrc()).parent;\
#        sys.path.append(Path(project_dir, "src"));\
#        sys.path.append(Path(project_dir, "tests/test_subproject/src"));\
#        sys.path.append(Path(project_dir, "tests/test_subproject/test_subproject_subproject"))'

ignore = "build, dist"

[tool.pylint.messages_control]
disable = "bad-continuation, missing-module-docstring, missing-function-docstring, missing-class-docstring"

[tool.pylint.format]
max-line-length = "100"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/gkedge/run-all-the-tests/issues"

[tool.poetry.build]
generate-setup-file = false

[tool.poetry.dependencies]
python = "^3.6"

[tool.poetry.dev-dependencies]
black = "==20.8b1"
isort = "~5.*"
pylint = "~2.*"
pytest = "~5.*"
pytest-dependency = "^0.5.1"
wheel = "tox-wheel"

[tool.isort]
profile = "black"
line_length = 100
#honor-noqa = "true"
#remove-redundant-aliases = "true"
#combine_as_imports = "true"
skip_gitignore = "true"

[tool.black]
line-length = 100
target-version = ["py37|py38"]
include = '\.pyi?$'
exclude = '(\.idea|\.eggs|\.git|\.hg|\.mypy_cache|\.nox|\.tox|\.venv|\.svn|_build|buck-out|build|dist)'

[build-system]
requires = ["poetry>=1.1.0b2"]
build-backend = "poetry.masonry.api"
