# autogenerated module
from dataclasses import dataclass, field
from typing import List

from ..core.dataclasses_json import dataclass_json

from . import meta_v1
from . import util_intstr


@dataclass_json
@dataclass
class IPBlock:
    cidr: 'str'
    except_: 'List[str]' = field(metadata={"json": "except"}, default=None)


@dataclass_json
@dataclass
class NetworkPolicy:
    apiVersion: 'str' = None
    kind: 'str' = None
    metadata: 'meta_v1.ObjectMeta' = None
    spec: 'NetworkPolicySpec' = None


@dataclass_json
@dataclass
class NetworkPolicyEgressRule:
    ports: 'List[NetworkPolicyPort]' = None
    to: 'List[NetworkPolicyPeer]' = None


@dataclass_json
@dataclass
class NetworkPolicyIngressRule:
    from_: 'List[NetworkPolicyPeer]' = field(metadata={"json": "from"}, default=None)
    ports: 'List[NetworkPolicyPort]' = None


@dataclass_json
@dataclass
class NetworkPolicyList:
    items: 'List[NetworkPolicy]'
    apiVersion: 'str' = None
    kind: 'str' = None
    metadata: 'meta_v1.ListMeta' = None


@dataclass_json
@dataclass
class NetworkPolicyPeer:
    ipBlock: 'IPBlock' = None
    namespaceSelector: 'meta_v1.LabelSelector' = None
    podSelector: 'meta_v1.LabelSelector' = None


@dataclass_json
@dataclass
class NetworkPolicyPort:
    port: 'util_intstr.IntOrString' = None
    protocol: 'str' = None


@dataclass_json
@dataclass
class NetworkPolicySpec:
    podSelector: 'meta_v1.LabelSelector'
    egress: 'List[NetworkPolicyEgressRule]' = None
    ingress: 'List[NetworkPolicyIngressRule]' = None
    policyTypes: 'List[str]' = None


