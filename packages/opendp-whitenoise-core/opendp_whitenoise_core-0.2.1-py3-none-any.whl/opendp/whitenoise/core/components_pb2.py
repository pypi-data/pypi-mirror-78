# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: components.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from . import value_pb2 as value__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='components.proto',
  package='whitenoise',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=b'\n\x10\x63omponents.proto\x12\nwhitenoise\x1a\x0bvalue.proto\"\x8b\x15\n\tComponent\x12.\n\targuments\x18\x01 \x01(\x0b\x32\x1b.whitenoise.ArgumentNodeIds\x12\x0c\n\x04omit\x18\x02 \x01(\x08\x12\x12\n\nsubmission\x18\x03 \x01(\r\x12\x1e\n\x03\x61\x62s\x18\x64 \x01(\x0b\x32\x0f.whitenoise.AbsH\x00\x12\x1e\n\x03\x61\x64\x64\x18\x65 \x01(\x0b\x32\x0f.whitenoise.AddH\x00\x12 \n\x04\x63\x61st\x18h \x01(\x0b\x32\x10.whitenoise.CastH\x00\x12\"\n\x05\x63lamp\x18i \x01(\x0b\x32\x11.whitenoise.ClampH\x00\x12.\n\x0b\x63olumn_bind\x18\x94\x01 \x01(\x0b\x32\x16.whitenoise.ColumnBindH\x00\x12\"\n\x05\x63ount\x18j \x01(\x0b\x32\x11.whitenoise.CountH\x00\x12,\n\ncovariance\x18k \x01(\x0b\x32\x16.whitenoise.CovarianceH\x00\x12(\n\x08\x64igitize\x18w \x01(\x0b\x32\x14.whitenoise.DigitizeH\x00\x12$\n\x06\x64ivide\x18x \x01(\x0b\x32\x12.whitenoise.DivideH\x00\x12\'\n\x08\x64p_count\x18l \x01(\x0b\x32\x13.whitenoise.DPCountH\x00\x12\x31\n\rdp_covariance\x18m \x01(\x0b\x32\x18.whitenoise.DPCovarianceH\x00\x12/\n\x0c\x64p_histogram\x18n \x01(\x0b\x32\x17.whitenoise.DPHistogramH\x00\x12+\n\ndp_maximum\x18o \x01(\x0b\x32\x15.whitenoise.DPMaximumH\x00\x12%\n\x07\x64p_mean\x18p \x01(\x0b\x32\x12.whitenoise.DPMeanH\x00\x12)\n\tdp_median\x18q \x01(\x0b\x32\x14.whitenoise.DPMedianH\x00\x12+\n\ndp_minimum\x18r \x01(\x0b\x32\x15.whitenoise.DPMinimumH\x00\x12-\n\x0b\x64p_quantile\x18t \x01(\x0b\x32\x16.whitenoise.DPQuantileH\x00\x12\x30\n\rdp_raw_moment\x18s \x01(\x0b\x32\x17.whitenoise.DPRawMomentH\x00\x12#\n\x06\x64p_sum\x18u \x01(\x0b\x32\x11.whitenoise.DPSumH\x00\x12-\n\x0b\x64p_variance\x18v \x01(\x0b\x32\x16.whitenoise.DPVarianceH\x00\x12\"\n\x05\x65qual\x18y \x01(\x0b\x32\x11.whitenoise.EqualH\x00\x12\x41\n\x15\x65xponential_mechanism\x18z \x01(\x0b\x32 .whitenoise.ExponentialMechanismH\x00\x12$\n\x06\x66ilter\x18{ \x01(\x0b\x32\x12.whitenoise.FilterH\x00\x12;\n\x12gaussian_mechanism\x18| \x01(\x0b\x32\x1d.whitenoise.GaussianMechanismH\x00\x12/\n\x0cgreater_than\x18} \x01(\x0b\x32\x17.whitenoise.GreaterThanH\x00\x12*\n\thistogram\x18~ \x01(\x0b\x32\x15.whitenoise.HistogramH\x00\x12$\n\x06impute\x18\x7f \x01(\x0b\x32\x12.whitenoise.ImputeH\x00\x12#\n\x05index\x18\x80\x01 \x01(\x0b\x32\x11.whitenoise.IndexH\x00\x12:\n\x11laplace_mechanism\x18\x82\x01 \x01(\x0b\x32\x1c.whitenoise.LaplaceMechanismH\x00\x12*\n\tless_than\x18\x83\x01 \x01(\x0b\x32\x14.whitenoise.LessThanH\x00\x12\'\n\x07literal\x18\x84\x01 \x01(\x0b\x32\x13.whitenoise.LiteralH\x00\x12\x1f\n\x03log\x18\x85\x01 \x01(\x0b\x32\x0f.whitenoise.LogH\x00\x12&\n\x0blogical_and\x18\x66 \x01(\x0b\x32\x0f.whitenoise.AndH\x00\x12%\n\nlogical_or\x18\x90\x01 \x01(\x0b\x32\x0e.whitenoise.OrH\x00\x12\x1f\n\x03map\x18\x86\x01 \x01(\x0b\x32\x0f.whitenoise.MapH\x00\x12/\n\x0bmaterialize\x18\x87\x01 \x01(\x0b\x32\x17.whitenoise.MaterializeH\x00\x12\'\n\x07maximum\x18\x88\x01 \x01(\x0b\x32\x13.whitenoise.MaximumH\x00\x12!\n\x04mean\x18\x89\x01 \x01(\x0b\x32\x10.whitenoise.MeanH\x00\x12%\n\x06median\x18\xa3\x01 \x01(\x0b\x32\x12.whitenoise.MedianH\x00\x12\'\n\x07minimum\x18\x8b\x01 \x01(\x0b\x32\x13.whitenoise.MinimumH\x00\x12%\n\x06modulo\x18\x8c\x01 \x01(\x0b\x32\x12.whitenoise.ModuloH\x00\x12)\n\x08multiply\x18\x8d\x01 \x01(\x0b\x32\x14.whitenoise.MultiplyH\x00\x12%\n\x06negate\x18\x8e\x01 \x01(\x0b\x32\x12.whitenoise.NegateH\x00\x12)\n\x08negative\x18\x8f\x01 \x01(\x0b\x32\x14.whitenoise.NegativeH\x00\x12+\n\tpartition\x18\x91\x01 \x01(\x0b\x32\x15.whitenoise.PartitionH\x00\x12#\n\x05power\x18\x92\x01 \x01(\x0b\x32\x11.whitenoise.PowerH\x00\x12)\n\x08quantile\x18\x93\x01 \x01(\x0b\x32\x14.whitenoise.QuantileH\x00\x12,\n\nraw_moment\x18\x81\x01 \x01(\x0b\x32\x15.whitenoise.RawMomentH\x00\x12\'\n\x07reshape\x18\x95\x01 \x01(\x0b\x32\x13.whitenoise.ReshapeH\x00\x12%\n\x06resize\x18\x96\x01 \x01(\x0b\x32\x12.whitenoise.ResizeH\x00\x12&\n\x07row_max\x18\x97\x01 \x01(\x0b\x32\x12.whitenoise.RowMaxH\x00\x12&\n\x07row_min\x18\x98\x01 \x01(\x0b\x32\x12.whitenoise.RowMinH\x00\x12K\n\x1asimple_geometric_mechanism\x18\x99\x01 \x01(\x0b\x32$.whitenoise.SimpleGeometricMechanismH\x00\x12)\n\x08subtract\x18\x9b\x01 \x01(\x0b\x32\x14.whitenoise.SubtractH\x00\x12\x1f\n\x03sum\x18\x9c\x01 \x01(\x0b\x32\x0f.whitenoise.SumH\x00\x12&\n\x07to_bool\x18\x9d\x01 \x01(\x0b\x32\x12.whitenoise.ToBoolH\x00\x12(\n\x08to_float\x18\x9e\x01 \x01(\x0b\x32\x13.whitenoise.ToFloatH\x00\x12$\n\x06to_int\x18\x9f\x01 \x01(\x0b\x32\x11.whitenoise.ToIntH\x00\x12*\n\tto_string\x18\xa0\x01 \x01(\x0b\x32\x14.whitenoise.ToStringH\x00\x12#\n\x05union\x18\xa2\x01 \x01(\x0b\x32\x11.whitenoise.UnionH\x00\x12)\n\x08variance\x18\xa1\x01 \x01(\x0b\x32\x14.whitenoise.VarianceH\x00\x42\t\n\x07variant\"\x05\n\x03\x41\x62s\"\x05\n\x03\x41\x64\x64\"\x1b\n\x04\x43\x61st\x12\x13\n\x0b\x61tomic_type\x18\x01 \x01(\t\"\x07\n\x05\x43lamp\"\x0c\n\nColumnBind\"\x19\n\x05\x43ount\x12\x10\n\x08\x64istinct\x18\x01 \x01(\x08\".\n\nCovariance\x12 \n\x18\x66inite_sample_correction\x18\x01 \x01(\x08\"\n\n\x08\x44igitize\"\x08\n\x06\x44ivide\"_\n\x07\x44PCount\x12\x10\n\x08\x64istinct\x18\x01 \x01(\x08\x12\x11\n\tmechanism\x18\x02 \x01(\t\x12/\n\rprivacy_usage\x18\x03 \x03(\x0b\x32\x18.whitenoise.PrivacyUsage\"t\n\x0c\x44PCovariance\x12\x11\n\tmechanism\x18\x01 \x01(\t\x12/\n\rprivacy_usage\x18\x02 \x03(\x0b\x32\x18.whitenoise.PrivacyUsage\x12 \n\x18\x66inite_sample_correction\x18\x03 \x01(\x08\"Q\n\x0b\x44PHistogram\x12\x11\n\tmechanism\x18\x01 \x01(\t\x12/\n\rprivacy_usage\x18\x02 \x03(\x0b\x32\x18.whitenoise.PrivacyUsage\"O\n\tDPMaximum\x12\x11\n\tmechanism\x18\x01 \x01(\t\x12/\n\rprivacy_usage\x18\x02 \x03(\x0b\x32\x18.whitenoise.PrivacyUsage\"d\n\x06\x44PMean\x12\x16\n\x0eimplementation\x18\x01 \x01(\t\x12\x11\n\tmechanism\x18\x02 \x01(\t\x12/\n\rprivacy_usage\x18\x03 \x03(\x0b\x32\x18.whitenoise.PrivacyUsage\"e\n\x08\x44PMedian\x12\x11\n\tmechanism\x18\x01 \x01(\t\x12/\n\rprivacy_usage\x18\x02 \x03(\x0b\x32\x18.whitenoise.PrivacyUsage\x12\x15\n\rinterpolation\x18\x03 \x01(\t\"O\n\tDPMinimum\x12\x11\n\tmechanism\x18\x01 \x01(\t\x12/\n\rprivacy_usage\x18\x02 \x03(\x0b\x32\x18.whitenoise.PrivacyUsage\"v\n\nDPQuantile\x12\r\n\x05\x61lpha\x18\x01 \x01(\x01\x12\x11\n\tmechanism\x18\x02 \x01(\t\x12/\n\rprivacy_usage\x18\x03 \x03(\x0b\x32\x18.whitenoise.PrivacyUsage\x12\x15\n\rinterpolation\x18\x04 \x01(\t\"`\n\x0b\x44PRawMoment\x12\r\n\x05order\x18\x01 \x01(\r\x12\x11\n\tmechanism\x18\x02 \x01(\t\x12/\n\rprivacy_usage\x18\x03 \x03(\x0b\x32\x18.whitenoise.PrivacyUsage\"K\n\x05\x44PSum\x12\x11\n\tmechanism\x18\x01 \x01(\t\x12/\n\rprivacy_usage\x18\x02 \x03(\x0b\x32\x18.whitenoise.PrivacyUsage\"r\n\nDPVariance\x12\x11\n\tmechanism\x18\x01 \x01(\t\x12/\n\rprivacy_usage\x18\x02 \x03(\x0b\x32\x18.whitenoise.PrivacyUsage\x12 \n\x18\x66inite_sample_correction\x18\x03 \x01(\x08\"\x07\n\x05\x45qual\"G\n\x14\x45xponentialMechanism\x12/\n\rprivacy_usage\x18\x01 \x03(\x0b\x32\x18.whitenoise.PrivacyUsage\"\x08\n\x06\x46ilter\"D\n\x11GaussianMechanism\x12/\n\rprivacy_usage\x18\x01 \x03(\x0b\x32\x18.whitenoise.PrivacyUsage\"\r\n\x0bGreaterThan\"\x0b\n\tHistogram\"\x08\n\x06Impute\"\x07\n\x05Index\"C\n\x10LaplaceMechanism\x12/\n\rprivacy_usage\x18\x01 \x03(\x0b\x32\x18.whitenoise.PrivacyUsage\"\n\n\x08LessThan\"\t\n\x07Literal\"\x05\n\x03Log\"\x05\n\x03\x41nd\"\x04\n\x02Or\"/\n\x03Map\x12(\n\tcomponent\x18\x01 \x01(\x0b\x32\x15.whitenoise.Component\"B\n\x0bMaterialize\x12\x0e\n\x06public\x18\x01 \x01(\x08\x12\x10\n\x08skip_row\x18\x02 \x01(\x08\x12\x11\n\tfile_path\x18\x03 \x01(\t\"\t\n\x07Maximum\"\x06\n\x04Mean\"\x08\n\x06Median\"\t\n\x07Minimum\"\x08\n\x06Modulo\"\n\n\x08Multiply\"\x08\n\x06Negate\"\n\n\x08Negative\"\x0b\n\tPartition\"\x07\n\x05Power\"0\n\x08Quantile\x12\r\n\x05\x61lpha\x18\x01 \x01(\x01\x12\x15\n\rinterpolation\x18\x02 \x01(\t\"\x1a\n\tRawMoment\x12\r\n\x05order\x18\x01 \x01(\r\";\n\x07Reshape\x12\x11\n\tsymmetric\x18\x01 \x01(\x08\x12\x0e\n\x06layout\x18\x02 \x01(\t\x12\r\n\x05shape\x18\x03 \x03(\r\"\x08\n\x06Resize\"\x08\n\x06RowMax\"\x08\n\x06RowMin\"K\n\x18SimpleGeometricMechanism\x12/\n\rprivacy_usage\x18\x01 \x03(\x0b\x32\x18.whitenoise.PrivacyUsage\"\n\n\x08Subtract\"\x05\n\x03Sum\"\x08\n\x06ToBool\"\t\n\x07ToFloat\"\x07\n\x05ToInt\"\n\n\x08ToString\"\x18\n\x05Union\x12\x0f\n\x07\x66latten\x18\x01 \x01(\x08\",\n\x08Variance\x12 \n\x18\x66inite_sample_correction\x18\x01 \x01(\x08\x62\x06proto3'
  ,
  dependencies=[value__pb2.DESCRIPTOR,])




_COMPONENT = _descriptor.Descriptor(
  name='Component',
  full_name='whitenoise.Component',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='arguments', full_name='whitenoise.Component.arguments', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='omit', full_name='whitenoise.Component.omit', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='submission', full_name='whitenoise.Component.submission', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='abs', full_name='whitenoise.Component.abs', index=3,
      number=100, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='add', full_name='whitenoise.Component.add', index=4,
      number=101, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cast', full_name='whitenoise.Component.cast', index=5,
      number=104, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='clamp', full_name='whitenoise.Component.clamp', index=6,
      number=105, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='column_bind', full_name='whitenoise.Component.column_bind', index=7,
      number=148, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='count', full_name='whitenoise.Component.count', index=8,
      number=106, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='covariance', full_name='whitenoise.Component.covariance', index=9,
      number=107, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='digitize', full_name='whitenoise.Component.digitize', index=10,
      number=119, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='divide', full_name='whitenoise.Component.divide', index=11,
      number=120, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dp_count', full_name='whitenoise.Component.dp_count', index=12,
      number=108, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dp_covariance', full_name='whitenoise.Component.dp_covariance', index=13,
      number=109, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dp_histogram', full_name='whitenoise.Component.dp_histogram', index=14,
      number=110, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dp_maximum', full_name='whitenoise.Component.dp_maximum', index=15,
      number=111, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dp_mean', full_name='whitenoise.Component.dp_mean', index=16,
      number=112, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dp_median', full_name='whitenoise.Component.dp_median', index=17,
      number=113, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dp_minimum', full_name='whitenoise.Component.dp_minimum', index=18,
      number=114, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dp_quantile', full_name='whitenoise.Component.dp_quantile', index=19,
      number=116, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dp_raw_moment', full_name='whitenoise.Component.dp_raw_moment', index=20,
      number=115, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dp_sum', full_name='whitenoise.Component.dp_sum', index=21,
      number=117, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dp_variance', full_name='whitenoise.Component.dp_variance', index=22,
      number=118, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='equal', full_name='whitenoise.Component.equal', index=23,
      number=121, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='exponential_mechanism', full_name='whitenoise.Component.exponential_mechanism', index=24,
      number=122, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='filter', full_name='whitenoise.Component.filter', index=25,
      number=123, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='gaussian_mechanism', full_name='whitenoise.Component.gaussian_mechanism', index=26,
      number=124, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='greater_than', full_name='whitenoise.Component.greater_than', index=27,
      number=125, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='histogram', full_name='whitenoise.Component.histogram', index=28,
      number=126, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='impute', full_name='whitenoise.Component.impute', index=29,
      number=127, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='index', full_name='whitenoise.Component.index', index=30,
      number=128, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='laplace_mechanism', full_name='whitenoise.Component.laplace_mechanism', index=31,
      number=130, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='less_than', full_name='whitenoise.Component.less_than', index=32,
      number=131, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='literal', full_name='whitenoise.Component.literal', index=33,
      number=132, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='log', full_name='whitenoise.Component.log', index=34,
      number=133, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='logical_and', full_name='whitenoise.Component.logical_and', index=35,
      number=102, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='logical_or', full_name='whitenoise.Component.logical_or', index=36,
      number=144, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='map', full_name='whitenoise.Component.map', index=37,
      number=134, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='materialize', full_name='whitenoise.Component.materialize', index=38,
      number=135, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='maximum', full_name='whitenoise.Component.maximum', index=39,
      number=136, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mean', full_name='whitenoise.Component.mean', index=40,
      number=137, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='median', full_name='whitenoise.Component.median', index=41,
      number=163, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='minimum', full_name='whitenoise.Component.minimum', index=42,
      number=139, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='modulo', full_name='whitenoise.Component.modulo', index=43,
      number=140, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='multiply', full_name='whitenoise.Component.multiply', index=44,
      number=141, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='negate', full_name='whitenoise.Component.negate', index=45,
      number=142, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='negative', full_name='whitenoise.Component.negative', index=46,
      number=143, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='partition', full_name='whitenoise.Component.partition', index=47,
      number=145, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='power', full_name='whitenoise.Component.power', index=48,
      number=146, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='quantile', full_name='whitenoise.Component.quantile', index=49,
      number=147, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='raw_moment', full_name='whitenoise.Component.raw_moment', index=50,
      number=129, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='reshape', full_name='whitenoise.Component.reshape', index=51,
      number=149, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='resize', full_name='whitenoise.Component.resize', index=52,
      number=150, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='row_max', full_name='whitenoise.Component.row_max', index=53,
      number=151, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='row_min', full_name='whitenoise.Component.row_min', index=54,
      number=152, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='simple_geometric_mechanism', full_name='whitenoise.Component.simple_geometric_mechanism', index=55,
      number=153, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='subtract', full_name='whitenoise.Component.subtract', index=56,
      number=155, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sum', full_name='whitenoise.Component.sum', index=57,
      number=156, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='to_bool', full_name='whitenoise.Component.to_bool', index=58,
      number=157, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='to_float', full_name='whitenoise.Component.to_float', index=59,
      number=158, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='to_int', full_name='whitenoise.Component.to_int', index=60,
      number=159, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='to_string', full_name='whitenoise.Component.to_string', index=61,
      number=160, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='union', full_name='whitenoise.Component.union', index=62,
      number=162, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='variance', full_name='whitenoise.Component.variance', index=63,
      number=161, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='variant', full_name='whitenoise.Component.variant',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=46,
  serialized_end=2745,
)


_ABS = _descriptor.Descriptor(
  name='Abs',
  full_name='whitenoise.Abs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2747,
  serialized_end=2752,
)


_ADD = _descriptor.Descriptor(
  name='Add',
  full_name='whitenoise.Add',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2754,
  serialized_end=2759,
)


_CAST = _descriptor.Descriptor(
  name='Cast',
  full_name='whitenoise.Cast',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='atomic_type', full_name='whitenoise.Cast.atomic_type', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2761,
  serialized_end=2788,
)


_CLAMP = _descriptor.Descriptor(
  name='Clamp',
  full_name='whitenoise.Clamp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2790,
  serialized_end=2797,
)


_COLUMNBIND = _descriptor.Descriptor(
  name='ColumnBind',
  full_name='whitenoise.ColumnBind',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2799,
  serialized_end=2811,
)


_COUNT = _descriptor.Descriptor(
  name='Count',
  full_name='whitenoise.Count',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='distinct', full_name='whitenoise.Count.distinct', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2813,
  serialized_end=2838,
)


_COVARIANCE = _descriptor.Descriptor(
  name='Covariance',
  full_name='whitenoise.Covariance',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='finite_sample_correction', full_name='whitenoise.Covariance.finite_sample_correction', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2840,
  serialized_end=2886,
)


_DIGITIZE = _descriptor.Descriptor(
  name='Digitize',
  full_name='whitenoise.Digitize',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2888,
  serialized_end=2898,
)


_DIVIDE = _descriptor.Descriptor(
  name='Divide',
  full_name='whitenoise.Divide',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2900,
  serialized_end=2908,
)


_DPCOUNT = _descriptor.Descriptor(
  name='DPCount',
  full_name='whitenoise.DPCount',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='distinct', full_name='whitenoise.DPCount.distinct', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mechanism', full_name='whitenoise.DPCount.mechanism', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='privacy_usage', full_name='whitenoise.DPCount.privacy_usage', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2910,
  serialized_end=3005,
)


_DPCOVARIANCE = _descriptor.Descriptor(
  name='DPCovariance',
  full_name='whitenoise.DPCovariance',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='mechanism', full_name='whitenoise.DPCovariance.mechanism', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='privacy_usage', full_name='whitenoise.DPCovariance.privacy_usage', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='finite_sample_correction', full_name='whitenoise.DPCovariance.finite_sample_correction', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3007,
  serialized_end=3123,
)


_DPHISTOGRAM = _descriptor.Descriptor(
  name='DPHistogram',
  full_name='whitenoise.DPHistogram',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='mechanism', full_name='whitenoise.DPHistogram.mechanism', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='privacy_usage', full_name='whitenoise.DPHistogram.privacy_usage', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3125,
  serialized_end=3206,
)


_DPMAXIMUM = _descriptor.Descriptor(
  name='DPMaximum',
  full_name='whitenoise.DPMaximum',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='mechanism', full_name='whitenoise.DPMaximum.mechanism', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='privacy_usage', full_name='whitenoise.DPMaximum.privacy_usage', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3208,
  serialized_end=3287,
)


_DPMEAN = _descriptor.Descriptor(
  name='DPMean',
  full_name='whitenoise.DPMean',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='implementation', full_name='whitenoise.DPMean.implementation', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mechanism', full_name='whitenoise.DPMean.mechanism', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='privacy_usage', full_name='whitenoise.DPMean.privacy_usage', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3289,
  serialized_end=3389,
)


_DPMEDIAN = _descriptor.Descriptor(
  name='DPMedian',
  full_name='whitenoise.DPMedian',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='mechanism', full_name='whitenoise.DPMedian.mechanism', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='privacy_usage', full_name='whitenoise.DPMedian.privacy_usage', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='interpolation', full_name='whitenoise.DPMedian.interpolation', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3391,
  serialized_end=3492,
)


_DPMINIMUM = _descriptor.Descriptor(
  name='DPMinimum',
  full_name='whitenoise.DPMinimum',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='mechanism', full_name='whitenoise.DPMinimum.mechanism', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='privacy_usage', full_name='whitenoise.DPMinimum.privacy_usage', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3494,
  serialized_end=3573,
)


_DPQUANTILE = _descriptor.Descriptor(
  name='DPQuantile',
  full_name='whitenoise.DPQuantile',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='alpha', full_name='whitenoise.DPQuantile.alpha', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mechanism', full_name='whitenoise.DPQuantile.mechanism', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='privacy_usage', full_name='whitenoise.DPQuantile.privacy_usage', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='interpolation', full_name='whitenoise.DPQuantile.interpolation', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3575,
  serialized_end=3693,
)


_DPRAWMOMENT = _descriptor.Descriptor(
  name='DPRawMoment',
  full_name='whitenoise.DPRawMoment',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='order', full_name='whitenoise.DPRawMoment.order', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mechanism', full_name='whitenoise.DPRawMoment.mechanism', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='privacy_usage', full_name='whitenoise.DPRawMoment.privacy_usage', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3695,
  serialized_end=3791,
)


_DPSUM = _descriptor.Descriptor(
  name='DPSum',
  full_name='whitenoise.DPSum',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='mechanism', full_name='whitenoise.DPSum.mechanism', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='privacy_usage', full_name='whitenoise.DPSum.privacy_usage', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3793,
  serialized_end=3868,
)


_DPVARIANCE = _descriptor.Descriptor(
  name='DPVariance',
  full_name='whitenoise.DPVariance',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='mechanism', full_name='whitenoise.DPVariance.mechanism', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='privacy_usage', full_name='whitenoise.DPVariance.privacy_usage', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='finite_sample_correction', full_name='whitenoise.DPVariance.finite_sample_correction', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3870,
  serialized_end=3984,
)


_EQUAL = _descriptor.Descriptor(
  name='Equal',
  full_name='whitenoise.Equal',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3986,
  serialized_end=3993,
)


_EXPONENTIALMECHANISM = _descriptor.Descriptor(
  name='ExponentialMechanism',
  full_name='whitenoise.ExponentialMechanism',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='privacy_usage', full_name='whitenoise.ExponentialMechanism.privacy_usage', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3995,
  serialized_end=4066,
)


_FILTER = _descriptor.Descriptor(
  name='Filter',
  full_name='whitenoise.Filter',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4068,
  serialized_end=4076,
)


_GAUSSIANMECHANISM = _descriptor.Descriptor(
  name='GaussianMechanism',
  full_name='whitenoise.GaussianMechanism',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='privacy_usage', full_name='whitenoise.GaussianMechanism.privacy_usage', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4078,
  serialized_end=4146,
)


_GREATERTHAN = _descriptor.Descriptor(
  name='GreaterThan',
  full_name='whitenoise.GreaterThan',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4148,
  serialized_end=4161,
)


_HISTOGRAM = _descriptor.Descriptor(
  name='Histogram',
  full_name='whitenoise.Histogram',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4163,
  serialized_end=4174,
)


_IMPUTE = _descriptor.Descriptor(
  name='Impute',
  full_name='whitenoise.Impute',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4176,
  serialized_end=4184,
)


_INDEX = _descriptor.Descriptor(
  name='Index',
  full_name='whitenoise.Index',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4186,
  serialized_end=4193,
)


_LAPLACEMECHANISM = _descriptor.Descriptor(
  name='LaplaceMechanism',
  full_name='whitenoise.LaplaceMechanism',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='privacy_usage', full_name='whitenoise.LaplaceMechanism.privacy_usage', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4195,
  serialized_end=4262,
)


_LESSTHAN = _descriptor.Descriptor(
  name='LessThan',
  full_name='whitenoise.LessThan',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4264,
  serialized_end=4274,
)


_LITERAL = _descriptor.Descriptor(
  name='Literal',
  full_name='whitenoise.Literal',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4276,
  serialized_end=4285,
)


_LOG = _descriptor.Descriptor(
  name='Log',
  full_name='whitenoise.Log',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4287,
  serialized_end=4292,
)


_AND = _descriptor.Descriptor(
  name='And',
  full_name='whitenoise.And',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4294,
  serialized_end=4299,
)


_OR = _descriptor.Descriptor(
  name='Or',
  full_name='whitenoise.Or',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4301,
  serialized_end=4305,
)


_MAP = _descriptor.Descriptor(
  name='Map',
  full_name='whitenoise.Map',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='component', full_name='whitenoise.Map.component', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4307,
  serialized_end=4354,
)


_MATERIALIZE = _descriptor.Descriptor(
  name='Materialize',
  full_name='whitenoise.Materialize',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='public', full_name='whitenoise.Materialize.public', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='skip_row', full_name='whitenoise.Materialize.skip_row', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='file_path', full_name='whitenoise.Materialize.file_path', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4356,
  serialized_end=4422,
)


_MAXIMUM = _descriptor.Descriptor(
  name='Maximum',
  full_name='whitenoise.Maximum',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4424,
  serialized_end=4433,
)


_MEAN = _descriptor.Descriptor(
  name='Mean',
  full_name='whitenoise.Mean',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4435,
  serialized_end=4441,
)


_MEDIAN = _descriptor.Descriptor(
  name='Median',
  full_name='whitenoise.Median',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4443,
  serialized_end=4451,
)


_MINIMUM = _descriptor.Descriptor(
  name='Minimum',
  full_name='whitenoise.Minimum',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4453,
  serialized_end=4462,
)


_MODULO = _descriptor.Descriptor(
  name='Modulo',
  full_name='whitenoise.Modulo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4464,
  serialized_end=4472,
)


_MULTIPLY = _descriptor.Descriptor(
  name='Multiply',
  full_name='whitenoise.Multiply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4474,
  serialized_end=4484,
)


_NEGATE = _descriptor.Descriptor(
  name='Negate',
  full_name='whitenoise.Negate',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4486,
  serialized_end=4494,
)


_NEGATIVE = _descriptor.Descriptor(
  name='Negative',
  full_name='whitenoise.Negative',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4496,
  serialized_end=4506,
)


_PARTITION = _descriptor.Descriptor(
  name='Partition',
  full_name='whitenoise.Partition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4508,
  serialized_end=4519,
)


_POWER = _descriptor.Descriptor(
  name='Power',
  full_name='whitenoise.Power',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4521,
  serialized_end=4528,
)


_QUANTILE = _descriptor.Descriptor(
  name='Quantile',
  full_name='whitenoise.Quantile',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='alpha', full_name='whitenoise.Quantile.alpha', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='interpolation', full_name='whitenoise.Quantile.interpolation', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4530,
  serialized_end=4578,
)


_RAWMOMENT = _descriptor.Descriptor(
  name='RawMoment',
  full_name='whitenoise.RawMoment',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='order', full_name='whitenoise.RawMoment.order', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4580,
  serialized_end=4606,
)


_RESHAPE = _descriptor.Descriptor(
  name='Reshape',
  full_name='whitenoise.Reshape',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='symmetric', full_name='whitenoise.Reshape.symmetric', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='layout', full_name='whitenoise.Reshape.layout', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='shape', full_name='whitenoise.Reshape.shape', index=2,
      number=3, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4608,
  serialized_end=4667,
)


_RESIZE = _descriptor.Descriptor(
  name='Resize',
  full_name='whitenoise.Resize',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4669,
  serialized_end=4677,
)


_ROWMAX = _descriptor.Descriptor(
  name='RowMax',
  full_name='whitenoise.RowMax',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4679,
  serialized_end=4687,
)


_ROWMIN = _descriptor.Descriptor(
  name='RowMin',
  full_name='whitenoise.RowMin',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4689,
  serialized_end=4697,
)


_SIMPLEGEOMETRICMECHANISM = _descriptor.Descriptor(
  name='SimpleGeometricMechanism',
  full_name='whitenoise.SimpleGeometricMechanism',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='privacy_usage', full_name='whitenoise.SimpleGeometricMechanism.privacy_usage', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4699,
  serialized_end=4774,
)


_SUBTRACT = _descriptor.Descriptor(
  name='Subtract',
  full_name='whitenoise.Subtract',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4776,
  serialized_end=4786,
)


_SUM = _descriptor.Descriptor(
  name='Sum',
  full_name='whitenoise.Sum',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4788,
  serialized_end=4793,
)


_TOBOOL = _descriptor.Descriptor(
  name='ToBool',
  full_name='whitenoise.ToBool',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4795,
  serialized_end=4803,
)


_TOFLOAT = _descriptor.Descriptor(
  name='ToFloat',
  full_name='whitenoise.ToFloat',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4805,
  serialized_end=4814,
)


_TOINT = _descriptor.Descriptor(
  name='ToInt',
  full_name='whitenoise.ToInt',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4816,
  serialized_end=4823,
)


_TOSTRING = _descriptor.Descriptor(
  name='ToString',
  full_name='whitenoise.ToString',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4825,
  serialized_end=4835,
)


_UNION = _descriptor.Descriptor(
  name='Union',
  full_name='whitenoise.Union',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='flatten', full_name='whitenoise.Union.flatten', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4837,
  serialized_end=4861,
)


_VARIANCE = _descriptor.Descriptor(
  name='Variance',
  full_name='whitenoise.Variance',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='finite_sample_correction', full_name='whitenoise.Variance.finite_sample_correction', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4863,
  serialized_end=4907,
)

_COMPONENT.fields_by_name['arguments'].message_type = value__pb2._ARGUMENTNODEIDS
_COMPONENT.fields_by_name['abs'].message_type = _ABS
_COMPONENT.fields_by_name['add'].message_type = _ADD
_COMPONENT.fields_by_name['cast'].message_type = _CAST
_COMPONENT.fields_by_name['clamp'].message_type = _CLAMP
_COMPONENT.fields_by_name['column_bind'].message_type = _COLUMNBIND
_COMPONENT.fields_by_name['count'].message_type = _COUNT
_COMPONENT.fields_by_name['covariance'].message_type = _COVARIANCE
_COMPONENT.fields_by_name['digitize'].message_type = _DIGITIZE
_COMPONENT.fields_by_name['divide'].message_type = _DIVIDE
_COMPONENT.fields_by_name['dp_count'].message_type = _DPCOUNT
_COMPONENT.fields_by_name['dp_covariance'].message_type = _DPCOVARIANCE
_COMPONENT.fields_by_name['dp_histogram'].message_type = _DPHISTOGRAM
_COMPONENT.fields_by_name['dp_maximum'].message_type = _DPMAXIMUM
_COMPONENT.fields_by_name['dp_mean'].message_type = _DPMEAN
_COMPONENT.fields_by_name['dp_median'].message_type = _DPMEDIAN
_COMPONENT.fields_by_name['dp_minimum'].message_type = _DPMINIMUM
_COMPONENT.fields_by_name['dp_quantile'].message_type = _DPQUANTILE
_COMPONENT.fields_by_name['dp_raw_moment'].message_type = _DPRAWMOMENT
_COMPONENT.fields_by_name['dp_sum'].message_type = _DPSUM
_COMPONENT.fields_by_name['dp_variance'].message_type = _DPVARIANCE
_COMPONENT.fields_by_name['equal'].message_type = _EQUAL
_COMPONENT.fields_by_name['exponential_mechanism'].message_type = _EXPONENTIALMECHANISM
_COMPONENT.fields_by_name['filter'].message_type = _FILTER
_COMPONENT.fields_by_name['gaussian_mechanism'].message_type = _GAUSSIANMECHANISM
_COMPONENT.fields_by_name['greater_than'].message_type = _GREATERTHAN
_COMPONENT.fields_by_name['histogram'].message_type = _HISTOGRAM
_COMPONENT.fields_by_name['impute'].message_type = _IMPUTE
_COMPONENT.fields_by_name['index'].message_type = _INDEX
_COMPONENT.fields_by_name['laplace_mechanism'].message_type = _LAPLACEMECHANISM
_COMPONENT.fields_by_name['less_than'].message_type = _LESSTHAN
_COMPONENT.fields_by_name['literal'].message_type = _LITERAL
_COMPONENT.fields_by_name['log'].message_type = _LOG
_COMPONENT.fields_by_name['logical_and'].message_type = _AND
_COMPONENT.fields_by_name['logical_or'].message_type = _OR
_COMPONENT.fields_by_name['map'].message_type = _MAP
_COMPONENT.fields_by_name['materialize'].message_type = _MATERIALIZE
_COMPONENT.fields_by_name['maximum'].message_type = _MAXIMUM
_COMPONENT.fields_by_name['mean'].message_type = _MEAN
_COMPONENT.fields_by_name['median'].message_type = _MEDIAN
_COMPONENT.fields_by_name['minimum'].message_type = _MINIMUM
_COMPONENT.fields_by_name['modulo'].message_type = _MODULO
_COMPONENT.fields_by_name['multiply'].message_type = _MULTIPLY
_COMPONENT.fields_by_name['negate'].message_type = _NEGATE
_COMPONENT.fields_by_name['negative'].message_type = _NEGATIVE
_COMPONENT.fields_by_name['partition'].message_type = _PARTITION
_COMPONENT.fields_by_name['power'].message_type = _POWER
_COMPONENT.fields_by_name['quantile'].message_type = _QUANTILE
_COMPONENT.fields_by_name['raw_moment'].message_type = _RAWMOMENT
_COMPONENT.fields_by_name['reshape'].message_type = _RESHAPE
_COMPONENT.fields_by_name['resize'].message_type = _RESIZE
_COMPONENT.fields_by_name['row_max'].message_type = _ROWMAX
_COMPONENT.fields_by_name['row_min'].message_type = _ROWMIN
_COMPONENT.fields_by_name['simple_geometric_mechanism'].message_type = _SIMPLEGEOMETRICMECHANISM
_COMPONENT.fields_by_name['subtract'].message_type = _SUBTRACT
_COMPONENT.fields_by_name['sum'].message_type = _SUM
_COMPONENT.fields_by_name['to_bool'].message_type = _TOBOOL
_COMPONENT.fields_by_name['to_float'].message_type = _TOFLOAT
_COMPONENT.fields_by_name['to_int'].message_type = _TOINT
_COMPONENT.fields_by_name['to_string'].message_type = _TOSTRING
_COMPONENT.fields_by_name['union'].message_type = _UNION
_COMPONENT.fields_by_name['variance'].message_type = _VARIANCE
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['abs'])
_COMPONENT.fields_by_name['abs'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['add'])
_COMPONENT.fields_by_name['add'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['cast'])
_COMPONENT.fields_by_name['cast'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['clamp'])
_COMPONENT.fields_by_name['clamp'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['column_bind'])
_COMPONENT.fields_by_name['column_bind'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['count'])
_COMPONENT.fields_by_name['count'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['covariance'])
_COMPONENT.fields_by_name['covariance'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['digitize'])
_COMPONENT.fields_by_name['digitize'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['divide'])
_COMPONENT.fields_by_name['divide'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['dp_count'])
_COMPONENT.fields_by_name['dp_count'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['dp_covariance'])
_COMPONENT.fields_by_name['dp_covariance'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['dp_histogram'])
_COMPONENT.fields_by_name['dp_histogram'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['dp_maximum'])
_COMPONENT.fields_by_name['dp_maximum'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['dp_mean'])
_COMPONENT.fields_by_name['dp_mean'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['dp_median'])
_COMPONENT.fields_by_name['dp_median'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['dp_minimum'])
_COMPONENT.fields_by_name['dp_minimum'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['dp_quantile'])
_COMPONENT.fields_by_name['dp_quantile'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['dp_raw_moment'])
_COMPONENT.fields_by_name['dp_raw_moment'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['dp_sum'])
_COMPONENT.fields_by_name['dp_sum'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['dp_variance'])
_COMPONENT.fields_by_name['dp_variance'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['equal'])
_COMPONENT.fields_by_name['equal'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['exponential_mechanism'])
_COMPONENT.fields_by_name['exponential_mechanism'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['filter'])
_COMPONENT.fields_by_name['filter'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['gaussian_mechanism'])
_COMPONENT.fields_by_name['gaussian_mechanism'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['greater_than'])
_COMPONENT.fields_by_name['greater_than'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['histogram'])
_COMPONENT.fields_by_name['histogram'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['impute'])
_COMPONENT.fields_by_name['impute'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['index'])
_COMPONENT.fields_by_name['index'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['laplace_mechanism'])
_COMPONENT.fields_by_name['laplace_mechanism'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['less_than'])
_COMPONENT.fields_by_name['less_than'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['literal'])
_COMPONENT.fields_by_name['literal'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['log'])
_COMPONENT.fields_by_name['log'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['logical_and'])
_COMPONENT.fields_by_name['logical_and'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['logical_or'])
_COMPONENT.fields_by_name['logical_or'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['map'])
_COMPONENT.fields_by_name['map'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['materialize'])
_COMPONENT.fields_by_name['materialize'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['maximum'])
_COMPONENT.fields_by_name['maximum'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['mean'])
_COMPONENT.fields_by_name['mean'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['median'])
_COMPONENT.fields_by_name['median'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['minimum'])
_COMPONENT.fields_by_name['minimum'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['modulo'])
_COMPONENT.fields_by_name['modulo'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['multiply'])
_COMPONENT.fields_by_name['multiply'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['negate'])
_COMPONENT.fields_by_name['negate'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['negative'])
_COMPONENT.fields_by_name['negative'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['partition'])
_COMPONENT.fields_by_name['partition'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['power'])
_COMPONENT.fields_by_name['power'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['quantile'])
_COMPONENT.fields_by_name['quantile'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['raw_moment'])
_COMPONENT.fields_by_name['raw_moment'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['reshape'])
_COMPONENT.fields_by_name['reshape'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['resize'])
_COMPONENT.fields_by_name['resize'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['row_max'])
_COMPONENT.fields_by_name['row_max'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['row_min'])
_COMPONENT.fields_by_name['row_min'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['simple_geometric_mechanism'])
_COMPONENT.fields_by_name['simple_geometric_mechanism'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['subtract'])
_COMPONENT.fields_by_name['subtract'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['sum'])
_COMPONENT.fields_by_name['sum'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['to_bool'])
_COMPONENT.fields_by_name['to_bool'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['to_float'])
_COMPONENT.fields_by_name['to_float'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['to_int'])
_COMPONENT.fields_by_name['to_int'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['to_string'])
_COMPONENT.fields_by_name['to_string'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['union'])
_COMPONENT.fields_by_name['union'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_COMPONENT.oneofs_by_name['variant'].fields.append(
  _COMPONENT.fields_by_name['variance'])
_COMPONENT.fields_by_name['variance'].containing_oneof = _COMPONENT.oneofs_by_name['variant']
_DPCOUNT.fields_by_name['privacy_usage'].message_type = value__pb2._PRIVACYUSAGE
_DPCOVARIANCE.fields_by_name['privacy_usage'].message_type = value__pb2._PRIVACYUSAGE
_DPHISTOGRAM.fields_by_name['privacy_usage'].message_type = value__pb2._PRIVACYUSAGE
_DPMAXIMUM.fields_by_name['privacy_usage'].message_type = value__pb2._PRIVACYUSAGE
_DPMEAN.fields_by_name['privacy_usage'].message_type = value__pb2._PRIVACYUSAGE
_DPMEDIAN.fields_by_name['privacy_usage'].message_type = value__pb2._PRIVACYUSAGE
_DPMINIMUM.fields_by_name['privacy_usage'].message_type = value__pb2._PRIVACYUSAGE
_DPQUANTILE.fields_by_name['privacy_usage'].message_type = value__pb2._PRIVACYUSAGE
_DPRAWMOMENT.fields_by_name['privacy_usage'].message_type = value__pb2._PRIVACYUSAGE
_DPSUM.fields_by_name['privacy_usage'].message_type = value__pb2._PRIVACYUSAGE
_DPVARIANCE.fields_by_name['privacy_usage'].message_type = value__pb2._PRIVACYUSAGE
_EXPONENTIALMECHANISM.fields_by_name['privacy_usage'].message_type = value__pb2._PRIVACYUSAGE
_GAUSSIANMECHANISM.fields_by_name['privacy_usage'].message_type = value__pb2._PRIVACYUSAGE
_LAPLACEMECHANISM.fields_by_name['privacy_usage'].message_type = value__pb2._PRIVACYUSAGE
_MAP.fields_by_name['component'].message_type = _COMPONENT
_SIMPLEGEOMETRICMECHANISM.fields_by_name['privacy_usage'].message_type = value__pb2._PRIVACYUSAGE
DESCRIPTOR.message_types_by_name['Component'] = _COMPONENT
DESCRIPTOR.message_types_by_name['Abs'] = _ABS
DESCRIPTOR.message_types_by_name['Add'] = _ADD
DESCRIPTOR.message_types_by_name['Cast'] = _CAST
DESCRIPTOR.message_types_by_name['Clamp'] = _CLAMP
DESCRIPTOR.message_types_by_name['ColumnBind'] = _COLUMNBIND
DESCRIPTOR.message_types_by_name['Count'] = _COUNT
DESCRIPTOR.message_types_by_name['Covariance'] = _COVARIANCE
DESCRIPTOR.message_types_by_name['Digitize'] = _DIGITIZE
DESCRIPTOR.message_types_by_name['Divide'] = _DIVIDE
DESCRIPTOR.message_types_by_name['DPCount'] = _DPCOUNT
DESCRIPTOR.message_types_by_name['DPCovariance'] = _DPCOVARIANCE
DESCRIPTOR.message_types_by_name['DPHistogram'] = _DPHISTOGRAM
DESCRIPTOR.message_types_by_name['DPMaximum'] = _DPMAXIMUM
DESCRIPTOR.message_types_by_name['DPMean'] = _DPMEAN
DESCRIPTOR.message_types_by_name['DPMedian'] = _DPMEDIAN
DESCRIPTOR.message_types_by_name['DPMinimum'] = _DPMINIMUM
DESCRIPTOR.message_types_by_name['DPQuantile'] = _DPQUANTILE
DESCRIPTOR.message_types_by_name['DPRawMoment'] = _DPRAWMOMENT
DESCRIPTOR.message_types_by_name['DPSum'] = _DPSUM
DESCRIPTOR.message_types_by_name['DPVariance'] = _DPVARIANCE
DESCRIPTOR.message_types_by_name['Equal'] = _EQUAL
DESCRIPTOR.message_types_by_name['ExponentialMechanism'] = _EXPONENTIALMECHANISM
DESCRIPTOR.message_types_by_name['Filter'] = _FILTER
DESCRIPTOR.message_types_by_name['GaussianMechanism'] = _GAUSSIANMECHANISM
DESCRIPTOR.message_types_by_name['GreaterThan'] = _GREATERTHAN
DESCRIPTOR.message_types_by_name['Histogram'] = _HISTOGRAM
DESCRIPTOR.message_types_by_name['Impute'] = _IMPUTE
DESCRIPTOR.message_types_by_name['Index'] = _INDEX
DESCRIPTOR.message_types_by_name['LaplaceMechanism'] = _LAPLACEMECHANISM
DESCRIPTOR.message_types_by_name['LessThan'] = _LESSTHAN
DESCRIPTOR.message_types_by_name['Literal'] = _LITERAL
DESCRIPTOR.message_types_by_name['Log'] = _LOG
DESCRIPTOR.message_types_by_name['And'] = _AND
DESCRIPTOR.message_types_by_name['Or'] = _OR
DESCRIPTOR.message_types_by_name['Map'] = _MAP
DESCRIPTOR.message_types_by_name['Materialize'] = _MATERIALIZE
DESCRIPTOR.message_types_by_name['Maximum'] = _MAXIMUM
DESCRIPTOR.message_types_by_name['Mean'] = _MEAN
DESCRIPTOR.message_types_by_name['Median'] = _MEDIAN
DESCRIPTOR.message_types_by_name['Minimum'] = _MINIMUM
DESCRIPTOR.message_types_by_name['Modulo'] = _MODULO
DESCRIPTOR.message_types_by_name['Multiply'] = _MULTIPLY
DESCRIPTOR.message_types_by_name['Negate'] = _NEGATE
DESCRIPTOR.message_types_by_name['Negative'] = _NEGATIVE
DESCRIPTOR.message_types_by_name['Partition'] = _PARTITION
DESCRIPTOR.message_types_by_name['Power'] = _POWER
DESCRIPTOR.message_types_by_name['Quantile'] = _QUANTILE
DESCRIPTOR.message_types_by_name['RawMoment'] = _RAWMOMENT
DESCRIPTOR.message_types_by_name['Reshape'] = _RESHAPE
DESCRIPTOR.message_types_by_name['Resize'] = _RESIZE
DESCRIPTOR.message_types_by_name['RowMax'] = _ROWMAX
DESCRIPTOR.message_types_by_name['RowMin'] = _ROWMIN
DESCRIPTOR.message_types_by_name['SimpleGeometricMechanism'] = _SIMPLEGEOMETRICMECHANISM
DESCRIPTOR.message_types_by_name['Subtract'] = _SUBTRACT
DESCRIPTOR.message_types_by_name['Sum'] = _SUM
DESCRIPTOR.message_types_by_name['ToBool'] = _TOBOOL
DESCRIPTOR.message_types_by_name['ToFloat'] = _TOFLOAT
DESCRIPTOR.message_types_by_name['ToInt'] = _TOINT
DESCRIPTOR.message_types_by_name['ToString'] = _TOSTRING
DESCRIPTOR.message_types_by_name['Union'] = _UNION
DESCRIPTOR.message_types_by_name['Variance'] = _VARIANCE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Component = _reflection.GeneratedProtocolMessageType('Component', (_message.Message,), {
  'DESCRIPTOR' : _COMPONENT,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.Component)
  })
_sym_db.RegisterMessage(Component)

Abs = _reflection.GeneratedProtocolMessageType('Abs', (_message.Message,), {
  'DESCRIPTOR' : _ABS,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.Abs)
  })
_sym_db.RegisterMessage(Abs)

Add = _reflection.GeneratedProtocolMessageType('Add', (_message.Message,), {
  'DESCRIPTOR' : _ADD,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.Add)
  })
_sym_db.RegisterMessage(Add)

Cast = _reflection.GeneratedProtocolMessageType('Cast', (_message.Message,), {
  'DESCRIPTOR' : _CAST,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.Cast)
  })
_sym_db.RegisterMessage(Cast)

Clamp = _reflection.GeneratedProtocolMessageType('Clamp', (_message.Message,), {
  'DESCRIPTOR' : _CLAMP,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.Clamp)
  })
_sym_db.RegisterMessage(Clamp)

ColumnBind = _reflection.GeneratedProtocolMessageType('ColumnBind', (_message.Message,), {
  'DESCRIPTOR' : _COLUMNBIND,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.ColumnBind)
  })
_sym_db.RegisterMessage(ColumnBind)

Count = _reflection.GeneratedProtocolMessageType('Count', (_message.Message,), {
  'DESCRIPTOR' : _COUNT,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.Count)
  })
_sym_db.RegisterMessage(Count)

Covariance = _reflection.GeneratedProtocolMessageType('Covariance', (_message.Message,), {
  'DESCRIPTOR' : _COVARIANCE,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.Covariance)
  })
_sym_db.RegisterMessage(Covariance)

Digitize = _reflection.GeneratedProtocolMessageType('Digitize', (_message.Message,), {
  'DESCRIPTOR' : _DIGITIZE,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.Digitize)
  })
_sym_db.RegisterMessage(Digitize)

Divide = _reflection.GeneratedProtocolMessageType('Divide', (_message.Message,), {
  'DESCRIPTOR' : _DIVIDE,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.Divide)
  })
_sym_db.RegisterMessage(Divide)

DPCount = _reflection.GeneratedProtocolMessageType('DPCount', (_message.Message,), {
  'DESCRIPTOR' : _DPCOUNT,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.DPCount)
  })
_sym_db.RegisterMessage(DPCount)

DPCovariance = _reflection.GeneratedProtocolMessageType('DPCovariance', (_message.Message,), {
  'DESCRIPTOR' : _DPCOVARIANCE,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.DPCovariance)
  })
_sym_db.RegisterMessage(DPCovariance)

DPHistogram = _reflection.GeneratedProtocolMessageType('DPHistogram', (_message.Message,), {
  'DESCRIPTOR' : _DPHISTOGRAM,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.DPHistogram)
  })
_sym_db.RegisterMessage(DPHistogram)

DPMaximum = _reflection.GeneratedProtocolMessageType('DPMaximum', (_message.Message,), {
  'DESCRIPTOR' : _DPMAXIMUM,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.DPMaximum)
  })
_sym_db.RegisterMessage(DPMaximum)

DPMean = _reflection.GeneratedProtocolMessageType('DPMean', (_message.Message,), {
  'DESCRIPTOR' : _DPMEAN,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.DPMean)
  })
_sym_db.RegisterMessage(DPMean)

DPMedian = _reflection.GeneratedProtocolMessageType('DPMedian', (_message.Message,), {
  'DESCRIPTOR' : _DPMEDIAN,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.DPMedian)
  })
_sym_db.RegisterMessage(DPMedian)

DPMinimum = _reflection.GeneratedProtocolMessageType('DPMinimum', (_message.Message,), {
  'DESCRIPTOR' : _DPMINIMUM,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.DPMinimum)
  })
_sym_db.RegisterMessage(DPMinimum)

DPQuantile = _reflection.GeneratedProtocolMessageType('DPQuantile', (_message.Message,), {
  'DESCRIPTOR' : _DPQUANTILE,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.DPQuantile)
  })
_sym_db.RegisterMessage(DPQuantile)

DPRawMoment = _reflection.GeneratedProtocolMessageType('DPRawMoment', (_message.Message,), {
  'DESCRIPTOR' : _DPRAWMOMENT,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.DPRawMoment)
  })
_sym_db.RegisterMessage(DPRawMoment)

DPSum = _reflection.GeneratedProtocolMessageType('DPSum', (_message.Message,), {
  'DESCRIPTOR' : _DPSUM,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.DPSum)
  })
_sym_db.RegisterMessage(DPSum)

DPVariance = _reflection.GeneratedProtocolMessageType('DPVariance', (_message.Message,), {
  'DESCRIPTOR' : _DPVARIANCE,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.DPVariance)
  })
_sym_db.RegisterMessage(DPVariance)

Equal = _reflection.GeneratedProtocolMessageType('Equal', (_message.Message,), {
  'DESCRIPTOR' : _EQUAL,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.Equal)
  })
_sym_db.RegisterMessage(Equal)

ExponentialMechanism = _reflection.GeneratedProtocolMessageType('ExponentialMechanism', (_message.Message,), {
  'DESCRIPTOR' : _EXPONENTIALMECHANISM,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.ExponentialMechanism)
  })
_sym_db.RegisterMessage(ExponentialMechanism)

Filter = _reflection.GeneratedProtocolMessageType('Filter', (_message.Message,), {
  'DESCRIPTOR' : _FILTER,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.Filter)
  })
_sym_db.RegisterMessage(Filter)

GaussianMechanism = _reflection.GeneratedProtocolMessageType('GaussianMechanism', (_message.Message,), {
  'DESCRIPTOR' : _GAUSSIANMECHANISM,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.GaussianMechanism)
  })
_sym_db.RegisterMessage(GaussianMechanism)

GreaterThan = _reflection.GeneratedProtocolMessageType('GreaterThan', (_message.Message,), {
  'DESCRIPTOR' : _GREATERTHAN,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.GreaterThan)
  })
_sym_db.RegisterMessage(GreaterThan)

Histogram = _reflection.GeneratedProtocolMessageType('Histogram', (_message.Message,), {
  'DESCRIPTOR' : _HISTOGRAM,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.Histogram)
  })
_sym_db.RegisterMessage(Histogram)

Impute = _reflection.GeneratedProtocolMessageType('Impute', (_message.Message,), {
  'DESCRIPTOR' : _IMPUTE,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.Impute)
  })
_sym_db.RegisterMessage(Impute)

Index = _reflection.GeneratedProtocolMessageType('Index', (_message.Message,), {
  'DESCRIPTOR' : _INDEX,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.Index)
  })
_sym_db.RegisterMessage(Index)

LaplaceMechanism = _reflection.GeneratedProtocolMessageType('LaplaceMechanism', (_message.Message,), {
  'DESCRIPTOR' : _LAPLACEMECHANISM,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.LaplaceMechanism)
  })
_sym_db.RegisterMessage(LaplaceMechanism)

LessThan = _reflection.GeneratedProtocolMessageType('LessThan', (_message.Message,), {
  'DESCRIPTOR' : _LESSTHAN,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.LessThan)
  })
_sym_db.RegisterMessage(LessThan)

Literal = _reflection.GeneratedProtocolMessageType('Literal', (_message.Message,), {
  'DESCRIPTOR' : _LITERAL,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.Literal)
  })
_sym_db.RegisterMessage(Literal)

Log = _reflection.GeneratedProtocolMessageType('Log', (_message.Message,), {
  'DESCRIPTOR' : _LOG,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.Log)
  })
_sym_db.RegisterMessage(Log)

And = _reflection.GeneratedProtocolMessageType('And', (_message.Message,), {
  'DESCRIPTOR' : _AND,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.And)
  })
_sym_db.RegisterMessage(And)

Or = _reflection.GeneratedProtocolMessageType('Or', (_message.Message,), {
  'DESCRIPTOR' : _OR,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.Or)
  })
_sym_db.RegisterMessage(Or)

Map = _reflection.GeneratedProtocolMessageType('Map', (_message.Message,), {
  'DESCRIPTOR' : _MAP,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.Map)
  })
_sym_db.RegisterMessage(Map)

Materialize = _reflection.GeneratedProtocolMessageType('Materialize', (_message.Message,), {
  'DESCRIPTOR' : _MATERIALIZE,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.Materialize)
  })
_sym_db.RegisterMessage(Materialize)

Maximum = _reflection.GeneratedProtocolMessageType('Maximum', (_message.Message,), {
  'DESCRIPTOR' : _MAXIMUM,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.Maximum)
  })
_sym_db.RegisterMessage(Maximum)

Mean = _reflection.GeneratedProtocolMessageType('Mean', (_message.Message,), {
  'DESCRIPTOR' : _MEAN,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.Mean)
  })
_sym_db.RegisterMessage(Mean)

Median = _reflection.GeneratedProtocolMessageType('Median', (_message.Message,), {
  'DESCRIPTOR' : _MEDIAN,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.Median)
  })
_sym_db.RegisterMessage(Median)

Minimum = _reflection.GeneratedProtocolMessageType('Minimum', (_message.Message,), {
  'DESCRIPTOR' : _MINIMUM,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.Minimum)
  })
_sym_db.RegisterMessage(Minimum)

Modulo = _reflection.GeneratedProtocolMessageType('Modulo', (_message.Message,), {
  'DESCRIPTOR' : _MODULO,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.Modulo)
  })
_sym_db.RegisterMessage(Modulo)

Multiply = _reflection.GeneratedProtocolMessageType('Multiply', (_message.Message,), {
  'DESCRIPTOR' : _MULTIPLY,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.Multiply)
  })
_sym_db.RegisterMessage(Multiply)

Negate = _reflection.GeneratedProtocolMessageType('Negate', (_message.Message,), {
  'DESCRIPTOR' : _NEGATE,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.Negate)
  })
_sym_db.RegisterMessage(Negate)

Negative = _reflection.GeneratedProtocolMessageType('Negative', (_message.Message,), {
  'DESCRIPTOR' : _NEGATIVE,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.Negative)
  })
_sym_db.RegisterMessage(Negative)

Partition = _reflection.GeneratedProtocolMessageType('Partition', (_message.Message,), {
  'DESCRIPTOR' : _PARTITION,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.Partition)
  })
_sym_db.RegisterMessage(Partition)

Power = _reflection.GeneratedProtocolMessageType('Power', (_message.Message,), {
  'DESCRIPTOR' : _POWER,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.Power)
  })
_sym_db.RegisterMessage(Power)

Quantile = _reflection.GeneratedProtocolMessageType('Quantile', (_message.Message,), {
  'DESCRIPTOR' : _QUANTILE,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.Quantile)
  })
_sym_db.RegisterMessage(Quantile)

RawMoment = _reflection.GeneratedProtocolMessageType('RawMoment', (_message.Message,), {
  'DESCRIPTOR' : _RAWMOMENT,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.RawMoment)
  })
_sym_db.RegisterMessage(RawMoment)

Reshape = _reflection.GeneratedProtocolMessageType('Reshape', (_message.Message,), {
  'DESCRIPTOR' : _RESHAPE,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.Reshape)
  })
_sym_db.RegisterMessage(Reshape)

Resize = _reflection.GeneratedProtocolMessageType('Resize', (_message.Message,), {
  'DESCRIPTOR' : _RESIZE,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.Resize)
  })
_sym_db.RegisterMessage(Resize)

RowMax = _reflection.GeneratedProtocolMessageType('RowMax', (_message.Message,), {
  'DESCRIPTOR' : _ROWMAX,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.RowMax)
  })
_sym_db.RegisterMessage(RowMax)

RowMin = _reflection.GeneratedProtocolMessageType('RowMin', (_message.Message,), {
  'DESCRIPTOR' : _ROWMIN,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.RowMin)
  })
_sym_db.RegisterMessage(RowMin)

SimpleGeometricMechanism = _reflection.GeneratedProtocolMessageType('SimpleGeometricMechanism', (_message.Message,), {
  'DESCRIPTOR' : _SIMPLEGEOMETRICMECHANISM,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.SimpleGeometricMechanism)
  })
_sym_db.RegisterMessage(SimpleGeometricMechanism)

Subtract = _reflection.GeneratedProtocolMessageType('Subtract', (_message.Message,), {
  'DESCRIPTOR' : _SUBTRACT,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.Subtract)
  })
_sym_db.RegisterMessage(Subtract)

Sum = _reflection.GeneratedProtocolMessageType('Sum', (_message.Message,), {
  'DESCRIPTOR' : _SUM,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.Sum)
  })
_sym_db.RegisterMessage(Sum)

ToBool = _reflection.GeneratedProtocolMessageType('ToBool', (_message.Message,), {
  'DESCRIPTOR' : _TOBOOL,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.ToBool)
  })
_sym_db.RegisterMessage(ToBool)

ToFloat = _reflection.GeneratedProtocolMessageType('ToFloat', (_message.Message,), {
  'DESCRIPTOR' : _TOFLOAT,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.ToFloat)
  })
_sym_db.RegisterMessage(ToFloat)

ToInt = _reflection.GeneratedProtocolMessageType('ToInt', (_message.Message,), {
  'DESCRIPTOR' : _TOINT,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.ToInt)
  })
_sym_db.RegisterMessage(ToInt)

ToString = _reflection.GeneratedProtocolMessageType('ToString', (_message.Message,), {
  'DESCRIPTOR' : _TOSTRING,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.ToString)
  })
_sym_db.RegisterMessage(ToString)

Union = _reflection.GeneratedProtocolMessageType('Union', (_message.Message,), {
  'DESCRIPTOR' : _UNION,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.Union)
  })
_sym_db.RegisterMessage(Union)

Variance = _reflection.GeneratedProtocolMessageType('Variance', (_message.Message,), {
  'DESCRIPTOR' : _VARIANCE,
  '__module__' : 'components_pb2'
  # @@protoc_insertion_point(class_scope:whitenoise.Variance)
  })
_sym_db.RegisterMessage(Variance)


# @@protoc_insertion_point(module_scope)
