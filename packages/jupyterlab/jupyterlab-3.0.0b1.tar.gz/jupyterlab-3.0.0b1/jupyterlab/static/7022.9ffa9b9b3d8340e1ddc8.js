(self["webpackChunk_jupyterlab_application_top"]=self["webpackChunk_jupyterlab_application_top"]||[]).push([[7022],{37022:(t,e,r)=>{"use strict";r.r(e);r.d(e,{nullTranslator:()=>a,Gettext:()=>n,requestTranslationsAPI:()=>h,ITranslator:()=>g,ITranslatorConnector:()=>p,TranslatorConnector:()=>_});class n{constructor(t){t=t||{};this._defaults={domain:"messages",locale:document.documentElement.getAttribute("lang")||"en",pluralFunc:function(t){return{nplurals:2,plural:t!=1?1:0}},contextDelimiter:String.fromCharCode(4)};this._locale=(t.locale||this._defaults.locale).replace("_","-");this._domain=t.domain||this._defaults.domain;this._contextDelimiter=t.contextDelimiter||this._defaults.contextDelimiter;this._pluralFuncs={};this._dictionary={};this._pluralForms={};if(t.messages){this._dictionary[this._domain]={};this._dictionary[this._domain][this._locale]=t.messages}if(t.pluralForms){this._pluralForms[this._locale]=t.pluralForms}}setContextDelimiter(t){this._contextDelimiter=t}getContextDelimiter(){return this._contextDelimiter}setLocale(t){this._locale=t.replace("_","-")}getLocale(){return this._locale}setDomain(t){this._domain=t}getDomain(){return this._domain}static strfmt(t,...e){return t.replace(/%%/g,"%% ").replace(/%(\d+)/g,(function(t,r){return e[r-1]})).replace(/%% /g,"%")}loadJSON(t,e){if(!t[""]||!t[""]["language"]||!t[""]["pluralForms"]){throw new Error(`Wrong jsonData, it must have an empty key ("") with "language" and "pluralForms" information: ${t}`)}let r=t[""];let n=JSON.parse(JSON.stringify(t));delete n[""];this.setMessages(e||this._defaults.domain,r["language"],n,r["pluralForms"])}__(t,...e){return this.gettext(t,...e)}_n(t,e,r,...n){return this.ngettext(t,e,r,...n)}_p(t,e,...r){return this.pgettext(t,e,...r)}_np(t,e,r,n,...l){return this.npgettext(t,e,r,n,...l)}gettext(t,...e){return this.dcnpgettext("","",t,"",0,...e)}ngettext(t,e,r,...n){return this.dcnpgettext("","",t,e,r,...n)}pgettext(t,e,...r){return this.dcnpgettext("",t,e,"",0,...r)}npgettext(t,e,r,n,...l){return this.dcnpgettext("",t,e,r,n,...l)}dcnpgettext(t,e,r,n,l,...s){t=t||this._domain;let a;let i=e?e+this._contextDelimiter+r:r;let o={pluralForm:false};let u=false;let c=this._locale;let h=this.expandLocale(this._locale);for(let _ in h){c=h[_];u=this._dictionary[t]&&this._dictionary[t][c]&&this._dictionary[t][c][i];if(n){u=u&&this._dictionary[t][c][i].length>1}else{u=u&&this._dictionary[t][c][i].length==1}if(u){o.locale=c;break}}if(!u){a=[r];o.pluralFunc=this._defaults.pluralFunc}else{a=this._dictionary[t][c][i]}if(!n){return this.t(a,l,o,...s)}o.pluralForm=true;let p=u?a:[r,n];return this.t(p,l,o,...s)}expandLocale(t){let e=[t];let r=t.lastIndexOf("-");while(r>0){t=t.slice(0,r);e.push(t);r=t.lastIndexOf("-")}return e}getPluralFunc(t){let e=new RegExp("^\\s*nplurals\\s*=\\s*[0-9]+\\s*;\\s*plural\\s*=\\s*(?:\\s|[-\\?\\|&=!<>+*/%:;n0-9_()])+");if(!e.test(t))throw new Error(n.strfmt('The plural form "%1" is not valid',t));return new Function("n","let plural, nplurals; "+t+" return { nplurals: nplurals, plural: (plural === true ? 1 : (plural ? plural : 0)) };")}removeContext(t){if(t.indexOf(this._contextDelimiter)!==-1){let e=t.split(this._contextDelimiter);return e[1]}return t}t(t,e,r,...l){if(!r.pluralForm)return n.strfmt(this.removeContext(t[0]),...l);let s;if(r.pluralFunc){s=r.pluralFunc(e)}else if(!this._pluralFuncs[r.locale||""]){this._pluralFuncs[r.locale||""]=this.getPluralFunc(this._pluralForms[r.locale||""]);s=this._pluralFuncs[r.locale||""](e)}else{s=this._pluralFuncs[r.locale||""](e)}if("undefined"===typeof!s.plural||s.plural>s.nplurals||t.length<=s.plural)s.plural=0;return n.strfmt(this.removeContext(t[s.plural]),...[e].concat(l))}setMessages(t,e,r,n){if(n)this._pluralForms[e]=n;if(!this._dictionary[t])this._dictionary[t]={};this._dictionary[t][e]=r}}class l{constructor(t){this._languageBundle=t}load(t){return this._languageBundle}locale(){return"en"}}class s{__(t,...e){return this.gettext(t,...e)}_n(t,e,r,...n){return this.ngettext(t,e,r,...n)}_p(t,e,...r){return this.pgettext(t,e,...r)}_np(t,e,r,n,...l){return this.npgettext(t,e,r,n,...l)}gettext(t,...e){return n.strfmt(t,...e)}ngettext(t,e,r,...l){return n.strfmt(r==1?t:e,...[r].concat(l))}pgettext(t,e,...r){return n.strfmt(e,...r)}npgettext(t,e,r,n,...l){return this.ngettext(e,r,n,...l)}dcnpgettext(t,e,r,n,l,...s){return this.ngettext(r,n,l,...s)}}const a=new l(new s);var i=r(25853);var o=r(78879);var u=r(52983);var c=r(52191);async function h(t="",e={}){const r=u.ServerConnection.makeSettings();const n=i.URLExt.join(r.baseUrl,"/lab/api/translations/",t);let l;try{l=await u.ServerConnection.makeRequest(n,e,r)}catch(a){throw new u.ServerConnection.NetworkError(a)}let s=await l.text();if(s.length>0){try{s=JSON.parse(s)}catch(a){console.error("Not a JSON response body.",l)}}if(!l.ok){throw new u.ServerConnection.ResponseError(l,s.message||s)}return s}const p=new c.Token("@jupyterlab/translation:ITranslatorConnector");class _ extends o.DataConnector{async fetch(t){return h(t.language)}}const g=new c.Token("@jupyterlab/translation:ITranslator")}}]);