Metadata-Version: 2.1
Name: mypy-boto3-redshift
Version: 1.14.51.0
Summary: Type annotations for boto3.Redshift 1.14.51 service, generated by mypy-boto3-buider 2.2.0
Home-page: https://github.com/vemel/mypy_boto3_builder
Author: Vlad Emelianov
Author-email: vlad.emelianov.nz@gmail.com
License: MIT License
Project-URL: Documentation, https://mypy-boto3-builder.readthedocs.io/en/latest/
Project-URL: Source, https://github.com/vemel/mypy_boto3_builder
Project-URL: Tracker, https://github.com/vemel/mypy_boto3_builder/issues
Description: # mypy-boto3-redshift
        
        [![PyPI - mypy-boto3-redshift](https://img.shields.io/pypi/v/mypy-boto3-redshift.svg?color=blue)](https://pypi.org/project/mypy-boto3-redshift)
        [![PyPI - Python Version](https://img.shields.io/pypi/pyversions/mypy-boto3-redshift.svg?color=blue)](https://pypi.org/project/mypy-boto3-redshift)
        [![Docs](https://img.shields.io/readthedocs/mypy-boto3-builder.svg?color=blue)](https://mypy-boto3-builder.readthedocs.io/)
        
        Type annotations for
        [boto3.Redshift 1.14.51](https://boto3.amazonaws.com/v1/documentation/api/1.14.51/reference/services/redshift.html#Redshift) service
        compatible with [mypy](https://github.com/python/mypy), [VSCode](https://code.visualstudio.com/),
        [PyCharm](https://www.jetbrains.com/pycharm/) and other tools.
        
        Generated by [mypy-boto3-buider 2.2.0](https://github.com/vemel/mypy_boto3_builder).
        
        More information can be found on [boto3-stubs](https://pypi.org/project/boto3-stubs/) page.
        
        ## How to install
        
        Make sure you have [mypy](https://github.com/python/mypy) installed and activated in your IDE.
        
        Install `boto3-stubs` for `Redshift` service.
        
        ```bash
        python -m pip install boto3-stubs[redshift]
        ```
        
        ## How to use
        
        ### Client annotations
        
        `RedshiftClient` provides annotations for `boto3.client("redshift")`.
        
        ```python
        import boto3
        
        from mypy_boto3_redshift import RedshiftClient
        from mypy_boto3_redshift.paginator import (
            DescribeClusterDbRevisionsPaginator,
            DescribeClusterParameterGroupsPaginator,
            DescribeClusterParametersPaginator,
            DescribeClusterSecurityGroupsPaginator,
            DescribeClusterSnapshotsPaginator,
            DescribeClustersPaginator,
            DescribeClusterSubnetGroupsPaginator,
            DescribeClusterTracksPaginator,
            DescribeClusterVersionsPaginator,
            DescribeDefaultClusterParametersPaginator,
            DescribeEventsPaginator,
            DescribeEventSubscriptionsPaginator,
            DescribeHsmClientCertificatesPaginator,
            DescribeHsmConfigurationsPaginator,
            DescribeNodeConfigurationOptionsPaginator,
            DescribeOrderableClusterOptionsPaginator,
            DescribeReservedNodeOfferingsPaginator,
            DescribeReservedNodesPaginator,
            DescribeScheduledActionsPaginator,
            DescribeSnapshotCopyGrantsPaginator,
            DescribeSnapshotSchedulesPaginator,
            DescribeTableRestoreStatusPaginator,
            DescribeTagsPaginator,
            DescribeUsageLimitsPaginator,
            GetReservedNodeExchangeOfferingsPaginator,
        )
        from mypy_boto3_redshift.type_defs import AccountAttributeTypeDef, ...
        from mypy_boto3_redshift.waiter import (
            ClusterAvailableWaiter,
            ClusterDeletedWaiter,
            ClusterRestoredWaiter,
            SnapshotAvailableWaiter,
        )
        
        client: RedshiftClient = boto3.client("redshift")
        
        # now client usage is checked by mypy and IDE should provide code auto-complete
        
        # works for session as well
        session = boto3.session.Session(region="us-west-1")
        session_client: RedshiftClient = session.client("redshift")
        ```
        
        ### Paginators annotations
        
        `mypy_boto3_redshift.paginator` module contains type annotations for all paginators.
        
        ```python
        
        client: RedshiftClient = boto3.client("redshift")
        
        # Explicit type annotations are optional here
        # Type should be correctly discovered by mypy and IDEs
        # VSCode requires explicit type annotations
        describe_cluster_db_revisions_paginator: DescribeClusterDbRevisionsPaginator = client.get_paginator("describe_cluster_db_revisions")
        describe_cluster_parameter_groups_paginator: DescribeClusterParameterGroupsPaginator = client.get_paginator("describe_cluster_parameter_groups")
        describe_cluster_parameters_paginator: DescribeClusterParametersPaginator = client.get_paginator("describe_cluster_parameters")
        describe_cluster_security_groups_paginator: DescribeClusterSecurityGroupsPaginator = client.get_paginator("describe_cluster_security_groups")
        describe_cluster_snapshots_paginator: DescribeClusterSnapshotsPaginator = client.get_paginator("describe_cluster_snapshots")
        describe_cluster_subnet_groups_paginator: DescribeClusterSubnetGroupsPaginator = client.get_paginator("describe_cluster_subnet_groups")
        describe_cluster_tracks_paginator: DescribeClusterTracksPaginator = client.get_paginator("describe_cluster_tracks")
        describe_cluster_versions_paginator: DescribeClusterVersionsPaginator = client.get_paginator("describe_cluster_versions")
        describe_clusters_paginator: DescribeClustersPaginator = client.get_paginator("describe_clusters")
        describe_default_cluster_parameters_paginator: DescribeDefaultClusterParametersPaginator = client.get_paginator("describe_default_cluster_parameters")
        describe_event_subscriptions_paginator: DescribeEventSubscriptionsPaginator = client.get_paginator("describe_event_subscriptions")
        describe_events_paginator: DescribeEventsPaginator = client.get_paginator("describe_events")
        describe_hsm_client_certificates_paginator: DescribeHsmClientCertificatesPaginator = client.get_paginator("describe_hsm_client_certificates")
        describe_hsm_configurations_paginator: DescribeHsmConfigurationsPaginator = client.get_paginator("describe_hsm_configurations")
        describe_node_configuration_options_paginator: DescribeNodeConfigurationOptionsPaginator = client.get_paginator("describe_node_configuration_options")
        describe_orderable_cluster_options_paginator: DescribeOrderableClusterOptionsPaginator = client.get_paginator("describe_orderable_cluster_options")
        describe_reserved_node_offerings_paginator: DescribeReservedNodeOfferingsPaginator = client.get_paginator("describe_reserved_node_offerings")
        describe_reserved_nodes_paginator: DescribeReservedNodesPaginator = client.get_paginator("describe_reserved_nodes")
        describe_scheduled_actions_paginator: DescribeScheduledActionsPaginator = client.get_paginator("describe_scheduled_actions")
        describe_snapshot_copy_grants_paginator: DescribeSnapshotCopyGrantsPaginator = client.get_paginator("describe_snapshot_copy_grants")
        describe_snapshot_schedules_paginator: DescribeSnapshotSchedulesPaginator = client.get_paginator("describe_snapshot_schedules")
        describe_table_restore_status_paginator: DescribeTableRestoreStatusPaginator = client.get_paginator("describe_table_restore_status")
        describe_tags_paginator: DescribeTagsPaginator = client.get_paginator("describe_tags")
        describe_usage_limits_paginator: DescribeUsageLimitsPaginator = client.get_paginator("describe_usage_limits")
        get_reserved_node_exchange_offerings_paginator: GetReservedNodeExchangeOfferingsPaginator = client.get_paginator("get_reserved_node_exchange_offerings")
        ```
        
        
        ### Waiters annotations
        
        `mypy_boto3_redshift.waiter` module contains type annotations for all waiters.
        
        ```python
        
        client: RedshiftClient = boto3.client("redshift")
        
        # Explicit type annotations are optional here
        # Type should be correctly discovered by mypy and IDEs
        # VSCode requires explicit type annotations
        cluster_available_waiter: ClusterAvailableWaiter = client.get_waiter("cluster_available")
        cluster_deleted_waiter: ClusterDeletedWaiter = client.get_waiter("cluster_deleted")
        cluster_restored_waiter: ClusterRestoredWaiter = client.get_waiter("cluster_restored")
        snapshot_available_waiter: SnapshotAvailableWaiter = client.get_waiter("snapshot_available")
        ```
        
        
        
        
        
        ### Typed dictionations
        
        `mypy_boto3_redshift.type_defs` module contains structures and shapes assembled
        to typed dictionaries for additional type checking.
        
        ```python
        
        def get_structure() -> AccountAttributeTypeDef:
            return {
              ...
            }
        ```
        
        
        ## Dynamic type annotations
        
        `mypy_boto3` command generates `boto3.client/resource` type annotations for
        `mypy_boto3_redshift` and other installed services.
        
        ```bash
        # Run this command after you add or remove service packages
        python -m mypy_boto3
        ```
        
        Generated type annotations provide overloads for `boto3.client` and `boto3.resource`,
        `boto3.Session.client` and `boto3.Session.resource` functions,
        so explicit type annotations are not needed.
        
        - `mypy` supports function overloads as expected
        - `PyCharm` also supports function overloads, but consumes a lot of RAM, use carefully if you have many services installed
        - `VSCode` does not currently support function overloads, use explicit type annotations
        
        ```python
        
        # Type is discovered correctly by mypy and PyCharm
        # VSCode still needs explicit type annotations
        client = boto3.client("redshift")
        
        session_client = boto3.Session().client("redshift")
        ```
        
Keywords: boto3 redshift type-annotations boto3-stubs mypy typeshed autocomplete auto-generated
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Typing :: Typed
Requires-Python: >=3.6
Description-Content-Type: text/markdown
