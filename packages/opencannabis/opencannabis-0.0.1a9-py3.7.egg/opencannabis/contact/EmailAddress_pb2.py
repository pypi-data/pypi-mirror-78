# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: opencannabis/contact/EmailAddress.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from gust.core import datamodel_pb2 as gust_dot_core_dot_datamodel__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='opencannabis/contact/EmailAddress.proto',
  package='opencannabis.contact',
  syntax='proto3',
  serialized_options=b'\n\036io.opencannabis.schema.contactB\014ContactEmailH\001P\000\242\002\003OCS',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\'opencannabis/contact/EmailAddress.proto\x12\x14opencannabis.contact\x1a\x19gust/core/datamodel.proto\"\xf1\x01\n\x0c\x45mailAddress\x12P\n\x07\x61\x64\x64ress\x18\x01 \x01(\tB?\xc2\xb5\x03;\x12\x39\x45mail address, in standard format (\'example@sample.com\').\x12\x42\n\tvalidated\x18\x02 \x01(\x08\x42/\xc2\xb5\x03+\x12)Validation status for this email address.\x12K\n\x04name\x18\x03 \x01(\tB=\xc2\xb5\x03\x39\x12\x37\x44isplay name for the email address, if known/specified.B8\n\x1eio.opencannabis.schema.contactB\x0c\x43ontactEmailH\x01P\x00\xa2\x02\x03OCSb\x06proto3'
  ,
  dependencies=[gust_dot_core_dot_datamodel__pb2.DESCRIPTOR,])




_EMAILADDRESS = _descriptor.Descriptor(
  name='EmailAddress',
  full_name='opencannabis.contact.EmailAddress',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='address', full_name='opencannabis.contact.EmailAddress.address', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\302\265\003;\0229Email address, in standard format (\'example@sample.com\').', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='validated', full_name='opencannabis.contact.EmailAddress.validated', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\302\265\003+\022)Validation status for this email address.', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='name', full_name='opencannabis.contact.EmailAddress.name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\302\265\0039\0227Display name for the email address, if known/specified.', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=93,
  serialized_end=334,
)

DESCRIPTOR.message_types_by_name['EmailAddress'] = _EMAILADDRESS
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

EmailAddress = _reflection.GeneratedProtocolMessageType('EmailAddress', (_message.Message,), {
  'DESCRIPTOR' : _EMAILADDRESS,
  '__module__' : 'opencannabis.contact.EmailAddress_pb2'
  # @@protoc_insertion_point(class_scope:opencannabis.contact.EmailAddress)
  })
_sym_db.RegisterMessage(EmailAddress)


DESCRIPTOR._options = None
_EMAILADDRESS.fields_by_name['address']._options = None
_EMAILADDRESS.fields_by_name['validated']._options = None
_EMAILADDRESS.fields_by_name['name']._options = None
# @@protoc_insertion_point(module_scope)
