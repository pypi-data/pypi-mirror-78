{
  "contractName": "OPFCommunityFeeCollector",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "newCollector",
          "type": "address"
        },
        {
          "name": "OPFOwnerAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawETH",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "withdrawToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newCollector",
          "type": "address"
        }
      ],
      "name": "changeCollector",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newCollector\",\"type\":\"address\"}],\"name\":\"changeCollector\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawETH\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"newCollector\",\"type\":\"address\"},{\"name\":\"OPFOwnerAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Ocean Protocol Foundation Community Fee Collector contract     allows consumers to pay very small fee as part of the exchange of      data tokens with ocean token in order to support the community of       ocean protocol and provide a sustainble development.\",\"methods\":{\"changeCollector(address)\":{\"details\":\"changeCollector     change the current collector address. Only owner can do that.\",\"params\":{\"newCollector\":\"the new collector address \"}},\"constructor\":{\"details\":\"constructor     Called prior contract deployment. set the controller address and     the contract owner address\",\"params\":{\"OPFOwnerAddress\":\"the contract owner address\",\"newCollector\":\"the fee collector address.\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawETH()\":{\"details\":\"withdrawETH     transfers all the accumlated ether the collector address\"},\"withdrawToken(address)\":{\"details\":\"withdrawToken     transfers all the accumlated tokens the collector address\",\"params\":{\"tokenAddress\":\"the token contract address \"}}},\"title\":\"OPFCommunityFeeCollector\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/ahmedali/Desktop/work/ocean-contracts/contracts/communityFee/OPFCommunityFeeCollector.sol\":\"OPFCommunityFeeCollector\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/ahmedali/Desktop/work/ocean-contracts/contracts/communityFee/OPFCommunityFeeCollector.sol\":{\"keccak256\":\"0x508facbe8e4cb1f1533b428f0416345006cb664b4836a8d93474a994784c19ec\",\"urls\":[\"bzzr://32b9725d4f35c6c697d7ba23fdc48ad83a0884d73ffd4cb443dd2d29eb883097\"]},\"/Users/ahmedali/Desktop/work/ocean-contracts/contracts/interfaces/IERC20Template.sol\":{\"keccak256\":\"0x24f0211743ace36d01ea66829236620853f5a3c9232d367894cde127b5487909\",\"urls\":[\"bzzr://5469032d25e4500d4be873bed87076d74ca821999ed839b59ea01e1d852e0694\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzzr://51482c01bddf23793bddee43b60ab9578a62948a4f2082def24ea792a553b055\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\",\"urls\":[\"bzzr://ab46c9368bc3abdded5eb85858304518c8a0291060ab42087075d759dbf3925f\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051604080610a158339810180604052604081101561003057600080fd5b508051602090910151600061004c64010000000061012d810204565b60008054600160a060020a031916600160a060020a0383169081178255604051929350916000805160206109f5833981519152908290a350600160a060020a038216158015906100a45750600160a060020a03811615155b6100f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260478152602001806109ae6047913960600191505060405180910390fd5b60018054600160a060020a031916600160a060020a03841617905561012681640100000000610131810204565b5050610297565b3390565b6101426401000000006101c2810204565b6101ad57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6101bf816401000000006101ef810204565b50565b60008054600160a060020a03166101e064010000000061012d810204565b600160a060020a031614905090565b600160a060020a03811661024e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806109886026913960400191505060405180910390fd5b60008054604051600160a060020a03808516939216916000805160206109f583398151915291a360008054600160a060020a031916600160a060020a0392909216919091179055565b6106e2806102a66000396000f3fe60806040526004361061008d576000357c0100000000000000000000000000000000000000000000000000000000900480638da5cb5b1161006b5780638da5cb5b1461010a5780638f32d59b1461013b578063e086e5ec14610164578063f2fde38b1461016c5761008d565b8063715018a61461008f5780637781127e146100a457806389476069146100d7575b005b34801561009b57600080fd5b5061008d61019f565b3480156100b057600080fd5b5061008d600480360360208110156100c757600080fd5b5035600160a060020a0316610252565b3480156100e357600080fd5b5061008d600480360360208110156100fa57600080fd5b5035600160a060020a0316610325565b34801561011657600080fd5b5061011f61049c565b60408051600160a060020a039092168252519081900360200190f35b34801561014757600080fd5b506101506104ab565b604080519115158252519081900360200190f35b61008d6104cf565b34801561017857600080fd5b5061008d6004803603602081101561018f57600080fd5b5035600160a060020a031661050c565b6101a76104ab565b6101fb576040805160e560020a62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b61025a6104ab565b6102ae576040805160e560020a62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600160a060020a0381166102f65760405160e560020a62461bcd0281526004018080602001828103825260338152602001806106846033913960400191505060405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a03811661036d5760405160e560020a62461bcd02815260040180806020018281038252603881526020018061064c6038913960400191505060405180910390fd5b600154604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051600160a060020a038085169363a9059cbb9391169184916370a08231916024808301926020929190829003018186803b1580156103db57600080fd5b505afa1580156103ef573d6000803e3d6000fd5b505050506040513d602081101561040557600080fd5b5051604080517c010000000000000000000000000000000000000000000000000000000063ffffffff8616028152600160a060020a03909316600484015260248301919091525160448083019260209291908290030181600087803b15801561046d57600080fd5b505af1158015610481573d6000803e3d6000fd5b505050506040513d602081101561049757600080fd5b505050565b600054600160a060020a031690565b60008054600160a060020a03166104c0610571565b600160a060020a031614905090565b600154604051600160a060020a0390911690303180156108fc02916000818181858888f19350505050158015610509573d6000803e3d6000fd5b50565b6105146104ab565b610568576040805160e560020a62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61050981610575565b3390565b600160a060020a0381166105bd5760405160e560020a62461bcd0281526004018080602001828103825260268152602001806106266026913960400191505060405180910390fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f5046436f6d6d756e697479466565436f6c6c6563746f723a20696e76616c696420746f6b656e20636f6e747261637420616464726573734f5046436f6d6d756e697479466565436f6c6c6563746f723a20696e76616c696420636f6c6c6563746f722061646472657373a165627a7a72305820f7dc1c8261b2cb51da02054f429760c134209f11bc58318db822476c90f185b100294f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f5046436f6d6d756e697479466565436f6c6c6563746f723a20636f6c6c6563746f722061646472657373206f72206f776e657220697320696e76616c696420616464726573738be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
  "deployedBytecode": "0x60806040526004361061008d576000357c0100000000000000000000000000000000000000000000000000000000900480638da5cb5b1161006b5780638da5cb5b1461010a5780638f32d59b1461013b578063e086e5ec14610164578063f2fde38b1461016c5761008d565b8063715018a61461008f5780637781127e146100a457806389476069146100d7575b005b34801561009b57600080fd5b5061008d61019f565b3480156100b057600080fd5b5061008d600480360360208110156100c757600080fd5b5035600160a060020a0316610252565b3480156100e357600080fd5b5061008d600480360360208110156100fa57600080fd5b5035600160a060020a0316610325565b34801561011657600080fd5b5061011f61049c565b60408051600160a060020a039092168252519081900360200190f35b34801561014757600080fd5b506101506104ab565b604080519115158252519081900360200190f35b61008d6104cf565b34801561017857600080fd5b5061008d6004803603602081101561018f57600080fd5b5035600160a060020a031661050c565b6101a76104ab565b6101fb576040805160e560020a62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b61025a6104ab565b6102ae576040805160e560020a62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600160a060020a0381166102f65760405160e560020a62461bcd0281526004018080602001828103825260338152602001806106846033913960400191505060405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a03811661036d5760405160e560020a62461bcd02815260040180806020018281038252603881526020018061064c6038913960400191505060405180910390fd5b600154604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051600160a060020a038085169363a9059cbb9391169184916370a08231916024808301926020929190829003018186803b1580156103db57600080fd5b505afa1580156103ef573d6000803e3d6000fd5b505050506040513d602081101561040557600080fd5b5051604080517c010000000000000000000000000000000000000000000000000000000063ffffffff8616028152600160a060020a03909316600484015260248301919091525160448083019260209291908290030181600087803b15801561046d57600080fd5b505af1158015610481573d6000803e3d6000fd5b505050506040513d602081101561049757600080fd5b505050565b600054600160a060020a031690565b60008054600160a060020a03166104c0610571565b600160a060020a031614905090565b600154604051600160a060020a0390911690303180156108fc02916000818181858888f19350505050158015610509573d6000803e3d6000fd5b50565b6105146104ab565b610568576040805160e560020a62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61050981610575565b3390565b600160a060020a0381166105bd5760405160e560020a62461bcd0281526004018080602001828103825260268152602001806106266026913960400191505060405180910390fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f5046436f6d6d756e697479466565436f6c6c6563746f723a20696e76616c696420746f6b656e20636f6e747261637420616464726573734f5046436f6d6d756e697479466565436f6c6c6563746f723a20696e76616c696420636f6c6c6563746f722061646472657373a165627a7a72305820f7dc1c8261b2cb51da02054f429760c134209f11bc58318db822476c90f185b10029",
  "sourceMap": "616:2197:8:-;;;973:411;8:9:-1;5:2;;;30:1;27;20:12;5:2;973:411:8;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;973:411:8;;;;;;;698:17:17;718:12;:10;;;;:12;:::i;:::-;740:6;:18;;-1:-1:-1;;;;;;740:18:17;-1:-1:-1;;;;;740:18:17;;;;;;;773:43;;740:18;;-1:-1:-1;740:18:17;-1:-1:-1;;;;;;;;;;;773:43:17;740:6;;773:43;-1:-1:-1;;;;;;1131:26:8;;;;;;:70;;-1:-1:-1;;;;;;1172:29:8;;;;1131:70;1110:189;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1309:9;:24;;-1:-1:-1;;;;;;1309:24:8;-1:-1:-1;;;;;1309:24:8;;;;;1343:34;1361:15;1343:17;;;;:34;:::i;:::-;973:411;;616:2197;;788:96:15;867:10;788:96;:::o;1970:107:17:-;1103:9;:7;;;;:9;:::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;;;;:28;:::i;:::-;1970:107;:::o;1250:92::-;1290:4;1329:6;;-1:-1:-1;;;;;1329:6:17;1313:12;:10;;;;:12;:::i;:::-;-1:-1:-1;;;;;1313:22:17;;1306:29;;1250:92;:::o;2178:225::-;-1:-1:-1;;;;;2251:22:17;;2243:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2352:6;;;2331:38;;-1:-1:-1;;;;;2331:38:17;;;;2352:6;;;-1:-1:-1;;;;;;;;;;;2331:38:17;;2379:6;:17;;-1:-1:-1;;;;;;2379:17:17;-1:-1:-1;;;;;2379:17:17;;;;;;;;;;2178:225::o;616:2197:8:-;;;;;;;",
  "deployedSourceMap": "616:2197:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1684:137:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1684:137:17;;;:::i;2525:286:8:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2525:286:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2525:286:8;-1:-1:-1;;;;;2525:286:8;;:::i;1972:375::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1972:375:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1972:375:8;-1:-1:-1;;;;;1972:375:8;;:::i;899:77:17:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;899:77:17;;;:::i;:::-;;;;-1:-1:-1;;;;;899:77:17;;;;;;;;;;;;;;1250:92;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1250:92:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;1679:120:8;;;:::i;1970:107:17:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1970:107:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1970:107:17;-1:-1:-1;;;;;1970:107:17;;:::i;1684:137::-;1103:9;:7;:9::i;:::-;1095:54;;;;;-1:-1:-1;;;;;1095:54:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:1;1766:6;;1745:40;;-1:-1:-1;;;;;1766:6:17;;;;1745:40;;1782:1;;1745:40;1812:1;1795:19;;-1:-1:-1;;1795:19:17;;;1684:137::o;2525:286:8:-;1103:9:17;:7;:9::i;:::-;1095:54;;;;;-1:-1:-1;;;;;1095:54:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2667:26:8;;2646:124;;;;-1:-1:-1;;;;;2646:124:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2780:9;:24;;-1:-1:-1;;2780:24:8;-1:-1:-1;;;;;2780:24:8;;;;;;;;;;2525:286::o;1972:375::-;-1:-1:-1;;;;;2084:26:8;;2063:129;;;;-1:-1:-1;;;;;2063:129:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2254:9;;2277:53;;;;;;2324:4;2277:53;;;;;;-1:-1:-1;;;;;2203:37:8;;;;;;2254:9;;;2203:37;;2277:38;;:53;;;;;;;;;;;;;;2203:37;2277:53;;;5:2:-1;;;;30:1;27;20:12;5:2;2277:53:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2277:53:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2277:53:8;2203:137;;;;;;;;;;-1:-1:-1;;;;;2203:137:8;;;;;;;;;;;;;;;;;;;;2277:53;;2203:137;;;;;;;-1:-1:-1;2203:137:8;;;;5:2:-1;;;;30:1;27;20:12;5:2;2203:137:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2203:137:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;1972:375:8:o;899:77:17:-;937:7;963:6;-1:-1:-1;;;;;963:6:17;899:77;:::o;1250:92::-;1290:4;1329:6;;-1:-1:-1;;;;;1329:6:17;1313:12;:10;:12::i;:::-;-1:-1:-1;;;;;1313:22:17;;1306:29;;1250:92;:::o;1679:120:8:-;1751:9;;:41;;-1:-1:-1;;;;;1751:9:8;;;;1778:4;1770:21;1751:41;;;;;:9;:41;:9;:41;1770:21;1751:9;:41;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1751:41:8;1679:120::o;1970:107:17:-;1103:9;:7;:9::i;:::-;1095:54;;;;;-1:-1:-1;;;;;1095:54:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;788:96:15:-;867:10;788:96;:::o;2178:225:17:-;-1:-1:-1;;;;;2251:22:17;;2243:73;;;;-1:-1:-1;;;;;2243:73:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2352:6;;;2331:38;;-1:-1:-1;;;;;2331:38:17;;;;2352:6;;;2331:38;;;2379:6;:17;;-1:-1:-1;;2379:17:17;-1:-1:-1;;;;;2379:17:17;;;;;;;;;;2178:225::o",
  "source": "pragma solidity ^0.5.7;\n// Copyright BigchainDB GmbH and Ocean Protocol contributors\n// SPDX-License-Identifier: (Apache-2.0 AND CC-BY-4.0)\n// Code is Apache-2.0 and docs are CC-BY-4.0\nimport '../interfaces/IERC20Template.sol';\nimport 'openzeppelin-solidity/contracts/ownership/Ownable.sol';\n\n\n/**\n * @title OPFCommunityFeeCollector\n * @dev Ocean Protocol Foundation Community Fee Collector contract\n *      allows consumers to pay very small fee as part of the exchange of \n *      data tokens with ocean token in order to support the community of  \n *      ocean protocol and provide a sustainble development.\n */\ncontract OPFCommunityFeeCollector is Ownable {\n    address payable private collector;\n    /**\n     * @dev constructor\n     *      Called prior contract deployment. set the controller address and\n     *      the contract owner address\n     * @param newCollector the fee collector address.\n     * @param OPFOwnerAddress the contract owner address\n     */\n    constructor(\n        address payable newCollector,\n        address OPFOwnerAddress\n    ) \n        public\n        Ownable()\n    {\n        require(\n            newCollector != address(0)&&\n            OPFOwnerAddress != address(0), \n            'OPFCommunityFeeCollector: collector address or owner is invalid address'\n        );\n        collector = newCollector;\n        transferOwnership(OPFOwnerAddress);\n    }\n    /**\n     * @dev fallback function\n     *      this is a default fallback function in which receives\n     *      the collected ether.\n     */\n    function() external payable {}\n\n    /**\n     * @dev withdrawETH\n     *      transfers all the accumlated ether the collector address\n     */\n    function withdrawETH() \n        external \n        payable\n    {\n        collector.transfer(address(this).balance);\n    }\n\n    /**\n     * @dev withdrawToken\n     *      transfers all the accumlated tokens the collector address\n     * @param tokenAddress the token contract address \n     */\n    function withdrawToken(\n        address tokenAddress\n    ) \n        external\n    {\n        require(\n            tokenAddress != address(0),\n            'OPFCommunityFeeCollector: invalid token contract address'\n        );\n\n        IERC20Template(tokenAddress).transfer(\n            collector,\n            IERC20Template(tokenAddress).balanceOf(address(this))\n        );\n    }\n\n    /**\n     * @dev changeCollector\n     *      change the current collector address. Only owner can do that.\n     * @param newCollector the new collector address \n     */\n    function changeCollector(\n        address payable newCollector\n    ) \n        external \n        onlyOwner \n    {\n        require(\n            newCollector != address(0),\n            'OPFCommunityFeeCollector: invalid collector address'\n        );\n        collector = newCollector;\n    }\n}\n",
  "sourcePath": "/Users/ahmedali/Desktop/work/ocean-contracts/contracts/communityFee/OPFCommunityFeeCollector.sol",
  "ast": {
    "absolutePath": "/Users/ahmedali/Desktop/work/ocean-contracts/contracts/communityFee/OPFCommunityFeeCollector.sol",
    "exportedSymbols": {
      "OPFCommunityFeeCollector": [
        4412
      ]
    },
    "id": 4413,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4304,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "/Users/ahmedali/Desktop/work/ocean-contracts/contracts/interfaces/IERC20Template.sol",
        "file": "../interfaces/IERC20Template.sol",
        "id": 4305,
        "nodeType": "ImportDirective",
        "scope": 4413,
        "sourceUnit": 5147,
        "src": "185:42:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 4306,
        "nodeType": "ImportDirective",
        "scope": 4413,
        "sourceUnit": 6314,
        "src": "228:63:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4307,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6313,
              "src": "653:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$6313",
                "typeString": "contract Ownable"
              }
            },
            "id": 4308,
            "nodeType": "InheritanceSpecifier",
            "src": "653:7:8"
          }
        ],
        "contractDependencies": [
          6008,
          6313
        ],
        "contractKind": "contract",
        "documentation": "@title OPFCommunityFeeCollector\n@dev Ocean Protocol Foundation Community Fee Collector contract\n     allows consumers to pay very small fee as part of the exchange of \n     data tokens with ocean token in order to support the community of  \n     ocean protocol and provide a sustainble development.",
        "fullyImplemented": true,
        "id": 4412,
        "linearizedBaseContracts": [
          4412,
          6313,
          6008
        ],
        "name": "OPFCommunityFeeCollector",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4310,
            "name": "collector",
            "nodeType": "VariableDeclaration",
            "scope": 4412,
            "src": "667:33:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 4309,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "667:15:8",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 4342,
              "nodeType": "Block",
              "src": "1100:284:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "id": 4324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 4320,
                            "name": "newCollector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4312,
                            "src": "1131:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 4322,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1155:1:8",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 4321,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1147:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 4323,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1147:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "1131:26:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 4325,
                            "name": "OPFOwnerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4314,
                            "src": "1172:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 4327,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1199:1:8",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 4326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1191:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 4328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1191:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "1172:29:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1131:70:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f5046436f6d6d756e697479466565436f6c6c6563746f723a20636f6c6c6563746f722061646472657373206f72206f776e657220697320696e76616c69642061646472657373",
                        "id": 4331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1216:73:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_616ec9f97cdb82b4049f1345a8abc2201a64cabaaef4905e6b8a77d179c5f2d6",
                          "typeString": "literal_string \"OPFCommunityFeeCollector: collector address or owner is invalid address\""
                        },
                        "value": "OPFCommunityFeeCollector: collector address or owner is invalid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_616ec9f97cdb82b4049f1345a8abc2201a64cabaaef4905e6b8a77d179c5f2d6",
                          "typeString": "literal_string \"OPFCommunityFeeCollector: collector address or owner is invalid address\""
                        }
                      ],
                      "id": 4319,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6805,
                        6806
                      ],
                      "referencedDeclaration": 6806,
                      "src": "1110:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1110:189:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4333,
                  "nodeType": "ExpressionStatement",
                  "src": "1110:189:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4334,
                      "name": "collector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4310,
                      "src": "1309:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4335,
                      "name": "newCollector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4312,
                      "src": "1321:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1309:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 4337,
                  "nodeType": "ExpressionStatement",
                  "src": "1309:24:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4339,
                        "name": "OPFOwnerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4314,
                        "src": "1361:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4338,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6288,
                      "src": "1343:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1343:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4341,
                  "nodeType": "ExpressionStatement",
                  "src": "1343:34:8"
                }
              ]
            },
            "documentation": "@dev constructor\n     Called prior contract deployment. set the controller address and\n     the contract owner address\n@param newCollector the fee collector address.\n@param OPFOwnerAddress the contract owner address",
            "id": 4343,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 4317,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4316,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6313,
                  "src": "1086:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$6313_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1086:9:8"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4312,
                  "name": "newCollector",
                  "nodeType": "VariableDeclaration",
                  "scope": 4343,
                  "src": "994:28:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 4311,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "994:15:8",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4314,
                  "name": "OPFOwnerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4343,
                  "src": "1032:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4313,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1032:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "984:77:8"
            },
            "returnParameters": {
              "id": 4318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1100:0:8"
            },
            "scope": 4412,
            "src": "973:411:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4346,
              "nodeType": "Block",
              "src": "1562:2:8",
              "statements": []
            },
            "documentation": "@dev fallback function\n     this is a default fallback function in which receives\n     the collected ether.",
            "id": 4347,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1542:2:8"
            },
            "returnParameters": {
              "id": 4345,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1562:0:8"
            },
            "scope": 4412,
            "src": "1534:30:8",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4359,
              "nodeType": "Block",
              "src": "1741:58:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4354,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6844,
                              "src": "1778:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OPFCommunityFeeCollector_$4412",
                                "typeString": "contract OPFCommunityFeeCollector"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OPFCommunityFeeCollector_$4412",
                                "typeString": "contract OPFCommunityFeeCollector"
                              }
                            ],
                            "id": 4353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1770:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1770:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 4356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1770:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4350,
                        "name": "collector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4310,
                        "src": "1751:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 4352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1751:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1751:41:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4358,
                  "nodeType": "ExpressionStatement",
                  "src": "1751:41:8"
                }
              ]
            },
            "documentation": "@dev withdrawETH\n     transfers all the accumlated ether the collector address",
            "id": 4360,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawETH",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4348,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1699:2:8"
            },
            "returnParameters": {
              "id": 4349,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1741:0:8"
            },
            "scope": 4412,
            "src": "1679:120:8",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4389,
              "nodeType": "Block",
              "src": "2053:294:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4366,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4362,
                          "src": "2084:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 4368,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2108:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4367,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2100:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2100:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2084:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f5046436f6d6d756e697479466565436f6c6c6563746f723a20696e76616c696420746f6b656e20636f6e74726163742061646472657373",
                        "id": 4371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2124:58:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96299161c0f4c317613661dd9a3c09a86e2da844da34a8587e90bf981cb919b9",
                          "typeString": "literal_string \"OPFCommunityFeeCollector: invalid token contract address\""
                        },
                        "value": "OPFCommunityFeeCollector: invalid token contract address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_96299161c0f4c317613661dd9a3c09a86e2da844da34a8587e90bf981cb919b9",
                          "typeString": "literal_string \"OPFCommunityFeeCollector: invalid token contract address\""
                        }
                      ],
                      "id": 4365,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6805,
                        6806
                      ],
                      "referencedDeclaration": 6806,
                      "src": "2063:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2063:129:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4373,
                  "nodeType": "ExpressionStatement",
                  "src": "2063:129:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4378,
                        "name": "collector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4310,
                        "src": "2254:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4384,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6844,
                                "src": "2324:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OPFCommunityFeeCollector_$4412",
                                  "typeString": "contract OPFCommunityFeeCollector"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OPFCommunityFeeCollector_$4412",
                                  "typeString": "contract OPFCommunityFeeCollector"
                                }
                              ],
                              "id": 4383,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2316:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 4385,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2316:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4380,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4362,
                                "src": "2292:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 4379,
                              "name": "IERC20Template",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5146,
                              "src": "2277:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20Template_$5146_$",
                                "typeString": "type(contract IERC20Template)"
                              }
                            },
                            "id": 4381,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2277:28:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Template_$5146",
                              "typeString": "contract IERC20Template"
                            }
                          },
                          "id": 4382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5136,
                          "src": "2277:38:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 4386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2277:53:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4375,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4362,
                            "src": "2218:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4374,
                          "name": "IERC20Template",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5146,
                          "src": "2203:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Template_$5146_$",
                            "typeString": "type(contract IERC20Template)"
                          }
                        },
                        "id": 4376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2203:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Template_$5146",
                          "typeString": "contract IERC20Template"
                        }
                      },
                      "id": 4377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5145,
                      "src": "2203:37:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2203:137:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4388,
                  "nodeType": "ExpressionStatement",
                  "src": "2203:137:8"
                }
              ]
            },
            "documentation": "@dev withdrawToken\n     transfers all the accumlated tokens the collector address\n@param tokenAddress the token contract address ",
            "id": 4390,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4362,
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4390,
                  "src": "2004:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4361,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2004:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1994:36:8"
            },
            "returnParameters": {
              "id": 4364,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2053:0:8"
            },
            "scope": 4412,
            "src": "1972:375:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4410,
              "nodeType": "Block",
              "src": "2636:175:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 4402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4398,
                          "name": "newCollector",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4392,
                          "src": "2667:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 4400,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2691:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2683:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2683:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2667:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f5046436f6d6d756e697479466565436f6c6c6563746f723a20696e76616c696420636f6c6c6563746f722061646472657373",
                        "id": 4403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2707:53:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ccff23dbeddef29f1d56dadd51307fe5ca8848d02e365e74ca46cda6ecdf4fc0",
                          "typeString": "literal_string \"OPFCommunityFeeCollector: invalid collector address\""
                        },
                        "value": "OPFCommunityFeeCollector: invalid collector address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ccff23dbeddef29f1d56dadd51307fe5ca8848d02e365e74ca46cda6ecdf4fc0",
                          "typeString": "literal_string \"OPFCommunityFeeCollector: invalid collector address\""
                        }
                      ],
                      "id": 4397,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6805,
                        6806
                      ],
                      "referencedDeclaration": 6806,
                      "src": "2646:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2646:124:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4405,
                  "nodeType": "ExpressionStatement",
                  "src": "2646:124:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4406,
                      "name": "collector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4310,
                      "src": "2780:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4407,
                      "name": "newCollector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4392,
                      "src": "2792:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2780:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 4409,
                  "nodeType": "ExpressionStatement",
                  "src": "2780:24:8"
                }
              ]
            },
            "documentation": "@dev changeCollector\n     change the current collector address. Only owner can do that.\n@param newCollector the new collector address ",
            "id": 4411,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4395,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4394,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6246,
                  "src": "2621:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2621:9:8"
              }
            ],
            "name": "changeCollector",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4392,
                  "name": "newCollector",
                  "nodeType": "VariableDeclaration",
                  "scope": 4411,
                  "src": "2559:28:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 4391,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2559:15:8",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2549:44:8"
            },
            "returnParameters": {
              "id": 4396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2636:0:8"
            },
            "scope": 4412,
            "src": "2525:286:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 4413,
        "src": "616:2197:8"
      }
    ],
    "src": "0:2814:8"
  },
  "legacyAST": {
    "absolutePath": "/Users/ahmedali/Desktop/work/ocean-contracts/contracts/communityFee/OPFCommunityFeeCollector.sol",
    "exportedSymbols": {
      "OPFCommunityFeeCollector": [
        4412
      ]
    },
    "id": 4413,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4304,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "/Users/ahmedali/Desktop/work/ocean-contracts/contracts/interfaces/IERC20Template.sol",
        "file": "../interfaces/IERC20Template.sol",
        "id": 4305,
        "nodeType": "ImportDirective",
        "scope": 4413,
        "sourceUnit": 5147,
        "src": "185:42:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 4306,
        "nodeType": "ImportDirective",
        "scope": 4413,
        "sourceUnit": 6314,
        "src": "228:63:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4307,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6313,
              "src": "653:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$6313",
                "typeString": "contract Ownable"
              }
            },
            "id": 4308,
            "nodeType": "InheritanceSpecifier",
            "src": "653:7:8"
          }
        ],
        "contractDependencies": [
          6008,
          6313
        ],
        "contractKind": "contract",
        "documentation": "@title OPFCommunityFeeCollector\n@dev Ocean Protocol Foundation Community Fee Collector contract\n     allows consumers to pay very small fee as part of the exchange of \n     data tokens with ocean token in order to support the community of  \n     ocean protocol and provide a sustainble development.",
        "fullyImplemented": true,
        "id": 4412,
        "linearizedBaseContracts": [
          4412,
          6313,
          6008
        ],
        "name": "OPFCommunityFeeCollector",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4310,
            "name": "collector",
            "nodeType": "VariableDeclaration",
            "scope": 4412,
            "src": "667:33:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 4309,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "667:15:8",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 4342,
              "nodeType": "Block",
              "src": "1100:284:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "id": 4324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 4320,
                            "name": "newCollector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4312,
                            "src": "1131:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 4322,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1155:1:8",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 4321,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1147:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 4323,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1147:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "1131:26:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 4325,
                            "name": "OPFOwnerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4314,
                            "src": "1172:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 4327,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1199:1:8",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 4326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1191:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 4328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1191:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "1172:29:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1131:70:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f5046436f6d6d756e697479466565436f6c6c6563746f723a20636f6c6c6563746f722061646472657373206f72206f776e657220697320696e76616c69642061646472657373",
                        "id": 4331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1216:73:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_616ec9f97cdb82b4049f1345a8abc2201a64cabaaef4905e6b8a77d179c5f2d6",
                          "typeString": "literal_string \"OPFCommunityFeeCollector: collector address or owner is invalid address\""
                        },
                        "value": "OPFCommunityFeeCollector: collector address or owner is invalid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_616ec9f97cdb82b4049f1345a8abc2201a64cabaaef4905e6b8a77d179c5f2d6",
                          "typeString": "literal_string \"OPFCommunityFeeCollector: collector address or owner is invalid address\""
                        }
                      ],
                      "id": 4319,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6805,
                        6806
                      ],
                      "referencedDeclaration": 6806,
                      "src": "1110:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1110:189:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4333,
                  "nodeType": "ExpressionStatement",
                  "src": "1110:189:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4334,
                      "name": "collector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4310,
                      "src": "1309:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4335,
                      "name": "newCollector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4312,
                      "src": "1321:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1309:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 4337,
                  "nodeType": "ExpressionStatement",
                  "src": "1309:24:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4339,
                        "name": "OPFOwnerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4314,
                        "src": "1361:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4338,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6288,
                      "src": "1343:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1343:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4341,
                  "nodeType": "ExpressionStatement",
                  "src": "1343:34:8"
                }
              ]
            },
            "documentation": "@dev constructor\n     Called prior contract deployment. set the controller address and\n     the contract owner address\n@param newCollector the fee collector address.\n@param OPFOwnerAddress the contract owner address",
            "id": 4343,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 4317,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4316,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6313,
                  "src": "1086:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$6313_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1086:9:8"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4312,
                  "name": "newCollector",
                  "nodeType": "VariableDeclaration",
                  "scope": 4343,
                  "src": "994:28:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 4311,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "994:15:8",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4314,
                  "name": "OPFOwnerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4343,
                  "src": "1032:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4313,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1032:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "984:77:8"
            },
            "returnParameters": {
              "id": 4318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1100:0:8"
            },
            "scope": 4412,
            "src": "973:411:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4346,
              "nodeType": "Block",
              "src": "1562:2:8",
              "statements": []
            },
            "documentation": "@dev fallback function\n     this is a default fallback function in which receives\n     the collected ether.",
            "id": 4347,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1542:2:8"
            },
            "returnParameters": {
              "id": 4345,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1562:0:8"
            },
            "scope": 4412,
            "src": "1534:30:8",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4359,
              "nodeType": "Block",
              "src": "1741:58:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4354,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6844,
                              "src": "1778:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OPFCommunityFeeCollector_$4412",
                                "typeString": "contract OPFCommunityFeeCollector"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OPFCommunityFeeCollector_$4412",
                                "typeString": "contract OPFCommunityFeeCollector"
                              }
                            ],
                            "id": 4353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1770:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1770:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 4356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1770:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4350,
                        "name": "collector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4310,
                        "src": "1751:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 4352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1751:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1751:41:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4358,
                  "nodeType": "ExpressionStatement",
                  "src": "1751:41:8"
                }
              ]
            },
            "documentation": "@dev withdrawETH\n     transfers all the accumlated ether the collector address",
            "id": 4360,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawETH",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4348,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1699:2:8"
            },
            "returnParameters": {
              "id": 4349,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1741:0:8"
            },
            "scope": 4412,
            "src": "1679:120:8",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4389,
              "nodeType": "Block",
              "src": "2053:294:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4366,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4362,
                          "src": "2084:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 4368,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2108:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4367,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2100:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2100:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2084:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f5046436f6d6d756e697479466565436f6c6c6563746f723a20696e76616c696420746f6b656e20636f6e74726163742061646472657373",
                        "id": 4371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2124:58:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96299161c0f4c317613661dd9a3c09a86e2da844da34a8587e90bf981cb919b9",
                          "typeString": "literal_string \"OPFCommunityFeeCollector: invalid token contract address\""
                        },
                        "value": "OPFCommunityFeeCollector: invalid token contract address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_96299161c0f4c317613661dd9a3c09a86e2da844da34a8587e90bf981cb919b9",
                          "typeString": "literal_string \"OPFCommunityFeeCollector: invalid token contract address\""
                        }
                      ],
                      "id": 4365,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6805,
                        6806
                      ],
                      "referencedDeclaration": 6806,
                      "src": "2063:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2063:129:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4373,
                  "nodeType": "ExpressionStatement",
                  "src": "2063:129:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4378,
                        "name": "collector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4310,
                        "src": "2254:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4384,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6844,
                                "src": "2324:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OPFCommunityFeeCollector_$4412",
                                  "typeString": "contract OPFCommunityFeeCollector"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OPFCommunityFeeCollector_$4412",
                                  "typeString": "contract OPFCommunityFeeCollector"
                                }
                              ],
                              "id": 4383,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2316:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 4385,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2316:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4380,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4362,
                                "src": "2292:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 4379,
                              "name": "IERC20Template",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5146,
                              "src": "2277:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20Template_$5146_$",
                                "typeString": "type(contract IERC20Template)"
                              }
                            },
                            "id": 4381,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2277:28:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Template_$5146",
                              "typeString": "contract IERC20Template"
                            }
                          },
                          "id": 4382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5136,
                          "src": "2277:38:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 4386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2277:53:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4375,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4362,
                            "src": "2218:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4374,
                          "name": "IERC20Template",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5146,
                          "src": "2203:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Template_$5146_$",
                            "typeString": "type(contract IERC20Template)"
                          }
                        },
                        "id": 4376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2203:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Template_$5146",
                          "typeString": "contract IERC20Template"
                        }
                      },
                      "id": 4377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5145,
                      "src": "2203:37:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2203:137:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4388,
                  "nodeType": "ExpressionStatement",
                  "src": "2203:137:8"
                }
              ]
            },
            "documentation": "@dev withdrawToken\n     transfers all the accumlated tokens the collector address\n@param tokenAddress the token contract address ",
            "id": 4390,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4362,
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 4390,
                  "src": "2004:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4361,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2004:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1994:36:8"
            },
            "returnParameters": {
              "id": 4364,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2053:0:8"
            },
            "scope": 4412,
            "src": "1972:375:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4410,
              "nodeType": "Block",
              "src": "2636:175:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 4402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4398,
                          "name": "newCollector",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4392,
                          "src": "2667:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 4400,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2691:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2683:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 4401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2683:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2667:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f5046436f6d6d756e697479466565436f6c6c6563746f723a20696e76616c696420636f6c6c6563746f722061646472657373",
                        "id": 4403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2707:53:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ccff23dbeddef29f1d56dadd51307fe5ca8848d02e365e74ca46cda6ecdf4fc0",
                          "typeString": "literal_string \"OPFCommunityFeeCollector: invalid collector address\""
                        },
                        "value": "OPFCommunityFeeCollector: invalid collector address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ccff23dbeddef29f1d56dadd51307fe5ca8848d02e365e74ca46cda6ecdf4fc0",
                          "typeString": "literal_string \"OPFCommunityFeeCollector: invalid collector address\""
                        }
                      ],
                      "id": 4397,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6805,
                        6806
                      ],
                      "referencedDeclaration": 6806,
                      "src": "2646:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2646:124:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4405,
                  "nodeType": "ExpressionStatement",
                  "src": "2646:124:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4406,
                      "name": "collector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4310,
                      "src": "2780:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4407,
                      "name": "newCollector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4392,
                      "src": "2792:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2780:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 4409,
                  "nodeType": "ExpressionStatement",
                  "src": "2780:24:8"
                }
              ]
            },
            "documentation": "@dev changeCollector\n     change the current collector address. Only owner can do that.\n@param newCollector the new collector address ",
            "id": 4411,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4395,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4394,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6246,
                  "src": "2621:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2621:9:8"
              }
            ],
            "name": "changeCollector",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4392,
                  "name": "newCollector",
                  "nodeType": "VariableDeclaration",
                  "scope": 4411,
                  "src": "2559:28:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 4391,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2559:15:8",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2549:44:8"
            },
            "returnParameters": {
              "id": 4396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2636:0:8"
            },
            "scope": 4412,
            "src": "2525:286:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 4413,
        "src": "616:2197:8"
      }
    ],
    "src": "0:2814:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-08-29T17:23:10.798Z",
  "devdoc": {
    "details": "Ocean Protocol Foundation Community Fee Collector contract     allows consumers to pay very small fee as part of the exchange of      data tokens with ocean token in order to support the community of       ocean protocol and provide a sustainble development.",
    "methods": {
      "changeCollector(address)": {
        "details": "changeCollector     change the current collector address. Only owner can do that.",
        "params": {
          "newCollector": "the new collector address "
        }
      },
      "constructor": {
        "details": "constructor     Called prior contract deployment. set the controller address and     the contract owner address",
        "params": {
          "OPFOwnerAddress": "the contract owner address",
          "newCollector": "the fee collector address."
        }
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdrawETH()": {
        "details": "withdrawETH     transfers all the accumlated ether the collector address"
      },
      "withdrawToken(address)": {
        "details": "withdrawToken     transfers all the accumlated tokens the collector address",
        "params": {
          "tokenAddress": "the token contract address "
        }
      }
    },
    "title": "OPFCommunityFeeCollector"
  },
  "userdoc": {
    "methods": {}
  }
}