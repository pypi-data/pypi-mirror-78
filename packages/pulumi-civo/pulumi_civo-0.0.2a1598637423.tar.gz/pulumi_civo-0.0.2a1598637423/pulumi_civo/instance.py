# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import _utilities, _tables


class Instance(pulumi.CustomResource):
    cpu_cores: pulumi.Output[float]
    """
    Total cpu of the inatance.
    """
    created_at: pulumi.Output[str]
    """
    The date of creation of the instance
    """
    disk_gb: pulumi.Output[float]
    """
    The size of the disk.
    """
    firewall_id: pulumi.Output[str]
    """
    The ID of the firewall to use, from the current list. If left blank or not sent, the default firewall will be used (open to all).
    """
    hostname: pulumi.Output[str]
    """
    The Instance hostname.
    """
    initial_password: pulumi.Output[str]
    """
    Instance initial password
    """
    initial_user: pulumi.Output[str]
    """
    The name of the initial user created on the server (optional; this will default to the template's default_username and fallback to civo).
    """
    network_id: pulumi.Output[str]
    """
    This must be the ID of the network from the network listing (optional; default network used when not specified).
    """
    notes: pulumi.Output[str]
    """
    Add some notes to the instance.
    """
    private_ip: pulumi.Output[str]
    """
    The private ip.
    """
    pseudo_ip: pulumi.Output[str]
    """
    Is the ip that is used to route the public ip from the internet to the instance using NAT
    """
    public_ip: pulumi.Output[str]
    """
    This should be either false, true or `move_ip_from:intances_id`.
    """
    public_ip_requiered: pulumi.Output[str]
    """
    This should be either false, true or `move_ip_from:intances_id`.
    """
    ram_mb: pulumi.Output[float]
    """
    Total ram of the instance.
    """
    reverse_dns: pulumi.Output[str]
    """
    A fully qualified domain name that should be used as the instance's IP's reverse DNS (optional, uses the hostname if unspecified).
    """
    script: pulumi.Output[str]
    """
    the contents of a script that will be uploaded to /usr/local/bin/civo-user-init-script on your instance, read/write/executable only by root and then will be executed at the end of the cloud initialization
    """
    size: pulumi.Output[str]
    """
    The name of the size, from the current list, e.g. g2.small (required).
    """
    sshkey_id: pulumi.Output[str]
    """
    The ID of an already uploaded SSH public key to use for login to the default user (optional; if one isn't provided a random password will be set and returned in the initial_password field).
    """
    status: pulumi.Output[str]
    """
    The status of the instance
    """
    tags: pulumi.Output[list]
    """
    An optional list of tags, represented as a key, value pair.
    """
    template: pulumi.Output[str]
    """
    The ID for the template to use to build the instance.
    """
    def __init__(__self__, resource_name, opts=None, firewall_id=None, hostname=None, initial_user=None, network_id=None, notes=None, public_ip_requiered=None, reverse_dns=None, script=None, size=None, sshkey_id=None, tags=None, template=None, __props__=None, __name__=None, __opts__=None):
        """
        Provides a Civo Instance resource. This can be used to create,
        modify, and delete Instances.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] firewall_id: The ID of the firewall to use, from the current list. If left blank or not sent, the default firewall will be used (open to all).
        :param pulumi.Input[str] hostname: The Instance hostname.
        :param pulumi.Input[str] initial_user: The name of the initial user created on the server (optional; this will default to the template's default_username and fallback to civo).
        :param pulumi.Input[str] network_id: This must be the ID of the network from the network listing (optional; default network used when not specified).
        :param pulumi.Input[str] notes: Add some notes to the instance.
        :param pulumi.Input[str] public_ip_requiered: This should be either false, true or `move_ip_from:intances_id`.
        :param pulumi.Input[str] reverse_dns: A fully qualified domain name that should be used as the instance's IP's reverse DNS (optional, uses the hostname if unspecified).
        :param pulumi.Input[str] script: the contents of a script that will be uploaded to /usr/local/bin/civo-user-init-script on your instance, read/write/executable only by root and then will be executed at the end of the cloud initialization
        :param pulumi.Input[str] size: The name of the size, from the current list, e.g. g2.small (required).
        :param pulumi.Input[str] sshkey_id: The ID of an already uploaded SSH public key to use for login to the default user (optional; if one isn't provided a random password will be set and returned in the initial_password field).
        :param pulumi.Input[list] tags: An optional list of tags, represented as a key, value pair.
        :param pulumi.Input[str] template: The ID for the template to use to build the instance.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['firewall_id'] = firewall_id
            if hostname is None:
                raise TypeError("Missing required property 'hostname'")
            __props__['hostname'] = hostname
            __props__['initial_user'] = initial_user
            __props__['network_id'] = network_id
            __props__['notes'] = notes
            __props__['public_ip_requiered'] = public_ip_requiered
            __props__['reverse_dns'] = reverse_dns
            __props__['script'] = script
            __props__['size'] = size
            __props__['sshkey_id'] = sshkey_id
            __props__['tags'] = tags
            __props__['template'] = template
            __props__['cpu_cores'] = None
            __props__['created_at'] = None
            __props__['disk_gb'] = None
            __props__['initial_password'] = None
            __props__['private_ip'] = None
            __props__['pseudo_ip'] = None
            __props__['public_ip'] = None
            __props__['ram_mb'] = None
            __props__['status'] = None
        super(Instance, __self__).__init__(
            'civo:index/instance:Instance',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, cpu_cores=None, created_at=None, disk_gb=None, firewall_id=None, hostname=None, initial_password=None, initial_user=None, network_id=None, notes=None, private_ip=None, pseudo_ip=None, public_ip=None, public_ip_requiered=None, ram_mb=None, reverse_dns=None, script=None, size=None, sshkey_id=None, status=None, tags=None, template=None):
        """
        Get an existing Instance resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[float] cpu_cores: Total cpu of the inatance.
        :param pulumi.Input[str] created_at: The date of creation of the instance
        :param pulumi.Input[float] disk_gb: The size of the disk.
        :param pulumi.Input[str] firewall_id: The ID of the firewall to use, from the current list. If left blank or not sent, the default firewall will be used (open to all).
        :param pulumi.Input[str] hostname: The Instance hostname.
        :param pulumi.Input[str] initial_password: Instance initial password
        :param pulumi.Input[str] initial_user: The name of the initial user created on the server (optional; this will default to the template's default_username and fallback to civo).
        :param pulumi.Input[str] network_id: This must be the ID of the network from the network listing (optional; default network used when not specified).
        :param pulumi.Input[str] notes: Add some notes to the instance.
        :param pulumi.Input[str] private_ip: The private ip.
        :param pulumi.Input[str] pseudo_ip: Is the ip that is used to route the public ip from the internet to the instance using NAT
        :param pulumi.Input[str] public_ip: This should be either false, true or `move_ip_from:intances_id`.
        :param pulumi.Input[str] public_ip_requiered: This should be either false, true or `move_ip_from:intances_id`.
        :param pulumi.Input[float] ram_mb: Total ram of the instance.
        :param pulumi.Input[str] reverse_dns: A fully qualified domain name that should be used as the instance's IP's reverse DNS (optional, uses the hostname if unspecified).
        :param pulumi.Input[str] script: the contents of a script that will be uploaded to /usr/local/bin/civo-user-init-script on your instance, read/write/executable only by root and then will be executed at the end of the cloud initialization
        :param pulumi.Input[str] size: The name of the size, from the current list, e.g. g2.small (required).
        :param pulumi.Input[str] sshkey_id: The ID of an already uploaded SSH public key to use for login to the default user (optional; if one isn't provided a random password will be set and returned in the initial_password field).
        :param pulumi.Input[str] status: The status of the instance
        :param pulumi.Input[list] tags: An optional list of tags, represented as a key, value pair.
        :param pulumi.Input[str] template: The ID for the template to use to build the instance.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["cpu_cores"] = cpu_cores
        __props__["created_at"] = created_at
        __props__["disk_gb"] = disk_gb
        __props__["firewall_id"] = firewall_id
        __props__["hostname"] = hostname
        __props__["initial_password"] = initial_password
        __props__["initial_user"] = initial_user
        __props__["network_id"] = network_id
        __props__["notes"] = notes
        __props__["private_ip"] = private_ip
        __props__["pseudo_ip"] = pseudo_ip
        __props__["public_ip"] = public_ip
        __props__["public_ip_requiered"] = public_ip_requiered
        __props__["ram_mb"] = ram_mb
        __props__["reverse_dns"] = reverse_dns
        __props__["script"] = script
        __props__["size"] = size
        __props__["sshkey_id"] = sshkey_id
        __props__["status"] = status
        __props__["tags"] = tags
        __props__["template"] = template
        return Instance(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
