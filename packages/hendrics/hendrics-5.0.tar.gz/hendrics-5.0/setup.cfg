[metadata]
name = hendrics
description = "High ENergy Data Reduction Interface from the Command Shell"
long_description = file: README.rst
author = Matteo Bachetti
author_email = matteo@matteobachetti.it
license = BSD
license_file = LICENSE.rst
url = http://hendrics.readthedocs.io
edit_on_github = True
github_project = StingraySoftware/HENDRICS
keywords = astronomy, astrophysics, space, science, timeseries, timing
classifiers = 
	Intended Audience :: Science/Research
	License :: OSI Approved :: BSD License
	Operating System :: OS Independent
	Programming Language :: C
	Programming Language :: Cython
	Programming Language :: Python :: 3
	Programming Language :: Python :: Implementation :: CPython
	Topic :: Scientific/Engineering :: Astronomy
	Topic :: Scientific/Engineering :: Physics

[options]
zip_safe = False
packages = find:
python_requires = >=3.6
setup_requires = setuptools_scm
install_requires = 
	numpy
	astropy
	scipy
	stingray>=0.2
	matplotlib

[options.extras_require]
all = 
	pandas
	pint-pulsar
	imageio
	numba
	netcdf4
	scikit-image
test = 
	pytest-astropy
docs = 
	sphinx-astropy

[options.entry_points]
console_scripts = 
	HEN2xspec = hendrics.save_as_xspec:main
	HENaccelsearch = hendrics.efsearch:main_accelsearch
	HENbaseline = hendrics.lcurve:baseline_main
	HENbinary = hendrics.binary:main_presto
	HENcalibrate = hendrics.calibrate:main
	HENcolors = hendrics.colors:main
	HENcreategti = hendrics.create_gti:main
	HENdeorbit = hendrics.fold:main_deorbit
	HENdumpdyn = hendrics.fspec:dumpdyn_main
	HENefsearch = hendrics.efsearch:main_efsearch
	HENexcvar = hendrics.exvar:main
	HENexposure = hendrics.exposure:main
	HENfake = hendrics.fake:main
	HENfold = hendrics.fold:main_fold
	HENfspec = hendrics.fspec:main
	HENjoinevents = hendrics.read_events:main_join
	HENlags = hendrics.timelags:main
	HENlcurve = hendrics.lcurve:main
	HENmodel = hendrics.modeling:main_model
	HENphaseogram = hendrics.phaseogram:main_phaseogram
	HENphasetag = hendrics.phasetag:main_phasetag
	HENplot = hendrics.plot:main
	HENreadevents = hendrics.read_events:main
	HENreadfile = hendrics.io:main
	HENrebin = hendrics.rebin:main
	HENscramble = hendrics.fake:main_scramble
	HENscrunchlc = hendrics.lcurve:scrunch_main
	HENsplitevents = hendrics.read_events:main_splitevents
	HENsumfspec = hendrics.sum_fspec:main
	HENvarenergy = hendrics.varenergy:main
	HENz2vspf = hendrics.efsearch:main_z2vspf
	HENzsearch = hendrics.efsearch:main_zsearch

[options.package_data]
hendrics.tests = data/*
* = *.fits, *.evt, *.rmf

[tool:pytest]
testpaths = "hendrics" "docs"
astropy_header = true
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst

[coverage:run]
omit = 
	hendrics/_astropy_init*
	hendrics/conftest.py
	hendrics/*setup_package*
	hendrics/tests/*
	hendrics/*/tests/*
	hendrics/extern/*
	hendrics/version*
	*/hendrics/_astropy_init*
	*/hendrics/conftest.py
	*/hendrics/*setup_package*
	*/hendrics/tests/*
	*/hendrics/*/tests/*
	*/hendrics/extern/*
	*/hendrics/version*

[coverage:report]
exclude_lines = 
	pragma: no cover
	except ImportError
	raise AssertionError
	raise NotImplementedError
	def main\(.*\):
	pragma: py{ignore_python_version}
	def _ipython_key_completions_

[pycodestyle]
max-line-length = 100
exclude = extern,*parsetab.py,*lextab.py,test_*.py,__*.py

[flake8]
max-line-length = 100
exclude = extern,*parsetab.py,*lextab.py,test_*.py,__*.py

[egg_info]
tag_build = 
tag_date = 0

