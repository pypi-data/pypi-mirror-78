openapi: 3.0.1
info:
  description: "Translator OpenPredict is an API serve predictions of biomedical concepts associations using the [PREDICT method](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3159979/), for the [NCATS Translator project](https://ncats.nih.gov/translator/about). 
    \n\n You can query the API to retrieve predicted associations between biomedical concepts (e.g. drugs which treats a specific disease). 
    \n\n* Use the `/predict` call to quickly retrieve predictions associated to a concept
    \n\n* Use the `/query` call to ask for predicted associations using the [ReasonerAPI](https://github.com/NCATSTranslator/ReasonerAPI) standard.
    \n\n You can also install the [openpredict python package](https://pypi.org/project/openpredict/) to train and serve a new model yourself.
    \n\n> This service has been built from the [fair-workflows/openpredict](https://github.com/fair-workflows/openpredict) project.
    \n\n[![Run tests](https://github.com/MaastrichtU-IDS/translator-openpredict/workflows/Run%20tests/badge.svg)](https://github.com/MaastrichtU-IDS/translator-openpredict/actions?query=workflow%3A%22Run+tests%22)"
  version: 0.9.2
  title: Translator OpenPredict API 🔮🐍 
  contact:
    email: vincent.emonet@maastrichtuniversity.nl
    name: Institute of Data Science at Maastricht University
    url: https://maastrichtuniversity.nl/ids
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  termsOfService: "{{url}}"
externalDocs:
  description: Documentation for the NCATS Biomedical Translator Reasoners web services
  url: 'https://github.com/NCATSTranslator/ReasonerAPI'
servers:
- url: "{{server_url}}"
tags:
  - name: predicates
    description: Get relationships supported by this API
    externalDocs:
      description: Documentation for the reasoner predicates function
      url: 'http://reasonerhost.ncats.io/overview.html#predicates'
  - name: query
    description: Query the models using the Reasoner API
    externalDocs:
      description: Documentation for the reasoner query function
      url: 'http://reasonerhost.ncats.io/overview.html#query'
  - name: translator
  - name: reasoner
paths:
  /predict:
    get:
      operationId: openpredict.openpredict_api.get_predict
      summary: Get predicted associations for a given entity
      description: "Return the predicted associations for a given entity: drug (DrugBank ID) or disease (OMIM ID), with confidence scores."
      tags:
      - translator
      parameters:
      - name: entity
        in: query
        description: CURIE of the entity to process (e.g. drug, disease, etc)
        example: DRUGBANK:DB00394
        required: true
        schema:
          type: string
      - name: classifier
        in: query
        description: Classifier to use to predict associations
        required: false
        schema:
          type: string
          enum: ["OpenPredict OMIM-DrugBank"]
          default: "OpenPredict OMIM-DrugBank"
      - name: score
        in: query
        description: Minimum score of predictions to return (0 to 1)
        required: false
        schema:
          type: number
          format: double
          minimum: 0
          maximum: 1
      - name: limit
        in: query
        description: Limit number of predictions to return (e.g. 42)
        required: false
        schema:
          type: integer
          format: int32
          minimum: 0
      responses:
        '200':
          description: Successful Operation
          content:
            application/json: {}
            # application/json: 
            #   schema:
            #     x-body-name: PredictionResults
            #     $ref: '#/components/schemas/PredictionResults'
            # application/xml: {}
            # application/ld+json: {}
            # text/csv: {}
            # text/tab-separated-values: {}

  /predicates:
    get:
      operationId: openpredict.openpredict_api.predicates_get
      tags:
        - predicates
      summary: Get supported relationships by source and target
      responses:
        '200':
          description: Predicates by source and target
          content:
            application/json:
              schema:
                description: Source map
                type: object
                additionalProperties:
                  description: Target map
                  type: object
                  additionalProperties:
                    description: Array of predicates
                    type: array
                    items:
                      type: string
                example:
                  chemical_substance:
                    gene:
                      - directly_interacts_with
                      - decreases_activity_of
  /query:
    post:
      tags:
        - query
      summary: Query reasoner via one of several inputs
      description: "Retrieve predicted associations from a Translator [Reasoner API](https://github.com/NCATSTranslator/ReasonerAPI/tree/master/API) query, 
        using entities and associations from the [BioLink model](https://biolink.github.io/biolink-model)"
      operationId: openpredict.openpredict_api.post_reasoner_predict
      # operationId: query
      requestBody:
        description: Query information to be submitted
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: Invalid status value
      # x-swagger-router-controller: swagger_server.controllers.query_controller
components:
  schemas:
    Query:
      x-body-name: request_body
      type: object
      properties:
        message:
          $ref: '#/components/schemas/Message'
      additionalProperties: true
      required:
        - message
    Message:
      type: object
      properties:
        results:
          description: List of all returned potential answers for the query posed
          type: array
          items:
            $ref: '#/components/schemas/Result'
        query_graph:
          type: object
          description: >-
            QueryGraph object that contains a serialization of a query in the form
            of a graph
          $ref: '#/components/schemas/QueryGraph'
        knowledge_graph:
          type: object
          description: >-
            KnowledgeGraph object that contains all the nodes and edges referenced
            in any of the possible answers to the query OR connection information
            for a remote knowledge graph
          oneOf:
            - $ref: '#/components/schemas/KnowledgeGraph'
            - $ref: '#/components/schemas/RemoteKnowledgeGraph'
      additionalProperties: true
      example:
        n_results: 10
        query_options:
          has_confidence_level: 0.5
        query_graph:
          nodes:
          - id: n00
            curie: DRUGBANK:DB00394
            type: "drug"
          - id: n01
            type: "disease"
          edges:
          - id: e00
            source_id: n00
            target_id: n01
            type: "treated_by"
    Result:
      type: object
      description: One of potentially several results or answers for a query
      properties:
        node_bindings:
          type: array
          description: List of QNode-KNode bindings.
          items:
            $ref: '#/components/schemas/NodeBinding'
        edge_bindings:
          type: array
          description: List of QEdge-KEdge bindings.
          items:
            $ref: '#/components/schemas/EdgeBinding'
      required:
        - node_bindings
        - edge_bindings
    NodeBinding:
      type: object
      properties:
        qg_id:
          type: string
          description: Query-graph node id, i.e. the `node_id` of a QNode
        kg_id:
          oneOf:
            - type: string
            - type: array
              items:
                type: string
          description: One or more knowledge-graph node ids, i.e. the `id` of a KNode
      required:
        - qg_id
        - kg_id
    EdgeBinding:
      type: object
      properties:
        qg_id:
          type: string
          description: Query-graph edge id, i.e. the `edge_id` of a QEdge
        kg_id:
          oneOf:
            - type: string
            - type: array
              items:
                type: string
          description: One or more knowledge-graph edge ids, i.e. the `id` of a KEdge
      required:
        - qg_id
        - kg_id
    KnowledgeGraph:
      type: object
      description: >-
        A thought graph associated with this result. This will commonly be a
        linear path subgraph from one concept to another, but related items aside
        of the path may be included.
      properties:
        nodes:
          type: array
          description: List of nodes in the KnowledgeGraph
          items:
            $ref: '#/components/schemas/Node'
        edges:
          type: array
          description: List of edges in the KnowledgeGraph
          items:
            $ref: '#/components/schemas/Edge'
      additionalProperties: true
      required:
        - nodes
        - edges
    RemoteKnowledgeGraph:
      type: object
      description: >-
        A thought graph associated with this result that is not repeated here, but
        stored elsewhere in a way that can be remotely accessed by the reader of
        this Message
      properties:
        url:
          type: string
          example: 'http://robokop.renci.org/api/kg'
          description: URL that provides programmatic access to the remote knowledge graph
        credentials:
          type: object
          description: >-
            Credentials needed for programmatic access to the remote knowledge
            graph
          items:
            $ref: '#/components/schemas/Credentials'
        protocol:
          type: string
          default: neo4j
      required:
        - url
    Credentials:
      description: Credentials needed for programmatic access to the remote knowledge graph
      type: object
      required:
        - username
        - password
      properties:
        username:
          description: Username needed for programmatic access to the remote knowledge graph
          type: string
        password:
          type: string
          description: Password needed for programmatic access to the remote knowledge graph
      additionalProperties: true
    QueryGraph:
      type: object
      description: >-
        A graph intended to be the thought path to be followed by a reasoner to
        answer the question. This graph is a representation of a question.
      properties:
        nodes:
          type: array
          description: List of nodes in the QueryGraph
          items:
            $ref: '#/components/schemas/QNode'
        edges:
          type: array
          description: List of edges in the QueryGraph
          items:
            $ref: '#/components/schemas/QEdge'
      additionalProperties: true
      required:
        - nodes
        - edges
    QNode:
      type: object
      description: A node in the QueryGraph
      properties:
        id:
          type: string
          example: n00
          description: >-
            QueryGraph internal identifier for this QNode. Recommended form: n00,
            n01, n02, etc.
        curie:
          type: string
          example: 'OMIM:603903'
          description: CURIE identifier for this node
        type:
          $ref: '#/components/schemas/BiolinkEntity'
      additionalProperties: true
      required:
        - id
    QEdge:
      type: object
      description: An edge in the QueryGraph
      properties:
        id:
          type: string
          example: e00
          description: >-
            QueryGraph internal identifier for this QEdge. Recommended form: e00,
            e01, e02, etc.
        type:
          $ref: '#/components/schemas/BiolinkRelation'
        source_id:
          type: string
          example: 'https://omim.org/entry/603903'
          description: Corresponds to the @id of source node of this edge
        target_id:
          type: string
          example: 'https://www.uniprot.org/uniprot/P00738'
          description: Corresponds to the @id of target node of this edge
      additionalProperties: true
      required:
        - id
        - source_id
        - target_id
    Node:
      type: object
      description: A node in the thought subgraph
      properties:
        id:
          type: string
          example: 'OMIM:603903'
          description: CURIE identifier for this node
        name:
          type: string
          example: Haptoglobin
          description: Formal name of the entity
        type:
          type: array
          items:
            $ref: '#/components/schemas/BiolinkEntity'
      additionalProperties: true
      required:
        - id
    Edge:
      type: object
      description: An edge in the thought subgraph linking two nodes
      properties:
        id:
          type: string
          example: '553903'
          description: >-
            Local identifier for this node which is unique within this
            KnowledgeGraph, and perhaps within the source reasoner's knowledge
            graph
        type:
          $ref: '#/components/schemas/BiolinkRelation'
        source_id:
          type: string
          example: 'https://omim.org/entry/603903'
          description: Corresponds to the @id of source node of this edge
        target_id:
          type: string
          example: 'https://www.uniprot.org/uniprot/P00738'
          description: Corresponds to the @id of target node of this edge
      additionalProperties: true
      required:
        - id
        - source_id
        - target_id
    BiolinkEntity:
      description: A subclass of named_thing (snake_case)
      type: string
      externalDocs:
        description: Biolink model entities
        url: https://biolink.github.io/biolink-model/docs/NamedThing.html
      example: disease
    BiolinkRelation:
      description: A relation, i.e. child of related_to (snake_case)
      type: string
      externalDocs:
        description: Biolink model relations
        url: https://biolink.github.io/biolink-model/docs/related_to.html
      example: affects
