# coding: utf-8

"""
    Nodeum API

    # About  This document describes the Nodeum API version 2:  If you are looking for any information about the product itself, reach the product website https://www.nodeum.io. You can also contact us at this email address : info@nodeum.io  # Filter parameters When browsing a list of items, multiple filter parameters may be applied. Some operators can be added to the value as a prefix:  - `=` value is equal. Default operator, may be omitted  - `!=` value is different  - `>` greater than  - `>=` greater than or equal  - `<` lower than  - `>=` lower than or equal  - `><` included in list, items should be separated by `|`  - `!><` not included in list, items should be separated by `|`  - `~` pattern matching, may include `%` (any characters) and `_` (one character)  - `!~` pattern not matching, may include `%` (any characters) and `_` (one character)    # noqa: E501

    The version of the OpenAPI document: 2.1.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import nodeum_sdk
from nodeum_sdk.api.cloud_buckets_api import CloudBucketsApi  # noqa: E501
from nodeum_sdk.rest import ApiException


class TestCloudBucketsApi(unittest.TestCase):
    """CloudBucketsApi unit test stubs"""

    def setUp(self):
        self.api = nodeum_sdk.api.cloud_buckets_api.CloudBucketsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_index_cloud_buckets(self):
        """Test case for index_cloud_buckets

        Lists all cloud buckets.  # noqa: E501
        """
        pass

    def test_index_cloud_buckets_by_cloud_connector(self):
        """Test case for index_cloud_buckets_by_cloud_connector

        Lists all cloud buckets.  # noqa: E501
        """
        pass

    def test_index_cloud_buckets_by_pool(self):
        """Test case for index_cloud_buckets_by_pool

        Lists all cloud buckets from pool.  # noqa: E501
        """
        pass

    def test_mount_status_cloud_bucket(self):
        """Test case for mount_status_cloud_bucket

        Get mount status of Cloud bucket.  # noqa: E501
        """
        pass

    def test_mount_status_cloud_bucket_by_cloud_connector(self):
        """Test case for mount_status_cloud_bucket_by_cloud_connector

        Get mount status of Cloud bucket.  # noqa: E501
        """
        pass

    def test_mount_status_cloud_bucket_by_pool(self):
        """Test case for mount_status_cloud_bucket_by_pool

        Get mount status of Cloud bucket.  # noqa: E501
        """
        pass

    def test_show_cloud_bucket(self):
        """Test case for show_cloud_bucket

        Displays a specific cloud bucket.  # noqa: E501
        """
        pass

    def test_show_cloud_bucket_by_cloud_connector(self):
        """Test case for show_cloud_bucket_by_cloud_connector

        Displays a specific cloud bucket.  # noqa: E501
        """
        pass

    def test_show_cloud_bucket_by_pool(self):
        """Test case for show_cloud_bucket_by_pool

        Displays a specific cloud bucket.  # noqa: E501
        """
        pass

    def test_sync_cloud_buckets(self):
        """Test case for sync_cloud_buckets

        Synchronize internal cloud buckets with their remote equivalent.  # noqa: E501
        """
        pass

    def test_sync_result_cloud_buckets(self):
        """Test case for sync_result_cloud_buckets

        Check result of cloud connector sync job.  # noqa: E501
        """
        pass

    def test_update_cloud_bucket(self):
        """Test case for update_cloud_bucket

        Updates a specific cloud bucket.  # noqa: E501
        """
        pass

    def test_update_cloud_bucket_by_cloud_connector(self):
        """Test case for update_cloud_bucket_by_cloud_connector

        Updates a specific cloud bucket.  # noqa: E501
        """
        pass

    def test_update_cloud_bucket_by_pool(self):
        """Test case for update_cloud_bucket_by_pool

        Updates a specific cloud bucket.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
