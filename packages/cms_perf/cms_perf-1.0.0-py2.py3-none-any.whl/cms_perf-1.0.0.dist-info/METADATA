Metadata-Version: 2.1
Name: cms_perf
Version: 1.0.0
Summary: Sensor for the XRootD cms.perf directive
Home-page: https://github.com/maxfischer2781/cms_perf
License: UNKNOWN
Keywords: xrootd cms.perf
Author: Max Fischer
Author-email: maxfischer2781@gmail.com
Description-Content-Type: text/x-rst
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: System Administrators
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3 :: Only
Requires-Dist: psutil >=5.6.2
Requires-Dist: pyparsing
Requires-Dist: typing-extensions
Requires-Dist: sphinx ; extra == "doc"
Requires-Dist: sphinx-tabs ; extra == "doc"
Requires-Dist: pytest >=4.3.0 ; extra == "test"
Requires-Dist: codecov ; extra == "test"
Requires-Dist: flake8 ; extra == "test"
Requires-Dist: flake8-bugbear ; extra == "test"
Requires-Dist: black ; extra == "test"
Requires-Dist: setproctitle ; extra == "test"
Provides-Extra: doc
Provides-Extra: test

=================================
``cms_perf`` - XRootD load sensor
=================================

.. image:: https://readthedocs.org/projects/cms_perf/badge/?version=latest
    :target: http://cms_perf.readthedocs.io/en/latest/?badge=latest
    :alt: Documentation Status

.. image:: https://img.shields.io/pypi/v/cms_perf.svg
    :alt: Available on PyPI
    :target: https://pypi.python.org/pypi/cms_perf/

.. image:: https://img.shields.io/github/license/maxfischer2781/cms_perf.svg
    :alt: License
    :target: https://github.com/maxfischer2781/cms_perf/blob/master/LICENSE

Sensor for use in the XRootD ``cms.perf`` directive.
Measures system load, as well as cpu, memory, and network utilization,
to enable load-balancing in a cluster of multiple XRootD servers.

With its support for individual re-configuration of each sensor reading,
``cms_perf`` allows to fine-tune or even re-define load reporting to your needs.
No need to hack any scripts, just install, configure, run.

Installation and Usage
======================

The sensor can be installed using ``pip``,
then configured using the ``cms.perf`` directive.
See the `documentation`_ for details and examples.

Issues and Contributions
========================

Maintenance and development of ``cms.perf`` is hosted at `GitHub`_.
For technical issues or suggestions, please open an issue ticket.
For direct code submissions, please open a pull request.

.. _documentation: https://cms-perf.readthedocs.io/
.. _GitHub: https://github.com/maxfischer2781/cms_perf

