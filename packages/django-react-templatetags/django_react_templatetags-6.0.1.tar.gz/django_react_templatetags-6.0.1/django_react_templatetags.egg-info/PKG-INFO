Metadata-Version: 2.1
Name: django-react-templatetags
Version: 6.0.1
Summary: This django library allows you to add React components into your django templates.
Home-page: https://github.com/frojd/django-react-templatetags
Author: Fr√∂jd
Author-email: martin@marteinn.se
License: MIT
Description: |Build Status| |PyPI version|
        
        .. figure:: https://raw.githubusercontent.com/frojd/django-react-templatetags/develop/img/django-react-templatetags-logo.png
           :alt: Django-React-Templatetags
        
           Django-React-Templatetags
        
        Django-React-Templatetags
        =========================
        
        This django library allows you to add React (16+) components into your
        django templates.
        
        Features
        --------
        
        -  Include react components using django templatetags
        -  Unlimited amount of components in one view
        -  Support custom models (that is from the beginning not
           json-serializable)
        -  Server side rendering with
           `Hypernova <https://github.com/airbnb/hypernova>`__ or
           `Hastur <https://github.com/frojd/Hastur>`__
        
        Installation
        ------------
        
        Install the library with pip:
        
        ::
        
           $ pip install django_react_templatetags
        
        Where to go from here?
        ----------------------
        
        You should first read `Getting
        started <https://github.com/Frojd/django-react-templatetags/blob/develop/docs/getting-started.md>`__,
        then go through these topics: -
        `Settings <https://github.com/Frojd/django-react-templatetags/blob/develop/docs/settings.md>`__
        - `How to use the templatetags included in this
        library <https://github.com/Frojd/django-react-templatetags/blob/develop/docs/templatetags-params.md>`__
        - `Adding a single
        component <https://github.com/Frojd/django-react-templatetags/blob/develop/docs/example-single-component.md>`__
        - `Adding multiple
        components <https://github.com/Frojd/django-react-templatetags/blob/develop/docs/example-multiple-components.md>`__
        -
        `Examples <https://github.com/Frojd/django-react-templatetags/blob/develop/docs/examples.md>`__
        - `Working with
        models <https://github.com/Frojd/django-react-templatetags/blob/develop/docs/working-with-models.md>`__
        - `Server side
        rendering <https://github.com/Frojd/django-react-templatetags/blob/develop/docs/server-side-rendering.md>`__
        -
        `FAQ <https://github.com/Frojd/django-react-templatetags/blob/develop/docs/faq.md>`__
        
        Tests
        -----
        
        This library include tests, just run ``python runtests.py``
        
        You can also run separate test cases:
        ``python runtests.py tests.test_filters.ReactIncludeComponentTest``
        
        Coverage
        --------
        
        Make sure you have Coverage.py installed, then run
        ``coverage run runtests.py`` to measure coverage. We are currently at
        95%.
        
        Contributing
        ------------
        
        Want to contribute? Awesome. Just send a pull request.
        
        Security
        --------
        
        If you believe you have found a security issue with any of our projects
        please email us at `security@frojd.se <security@frojd.se>`__.
        
        License
        -------
        
        Django-React-Templatetags is released under the `MIT
        License <http://www.opensource.org/licenses/MIT>`__.
        
        .. |Build Status| image:: https://travis-ci.org/Frojd/django-react-templatetags.svg?branch=master
           :target: https://travis-ci.org/Frojd/django-react-templatetags
        .. |PyPI version| image:: https://badge.fury.io/py/django_react_templatetags.svg
           :target: https://badge.fury.io/py/django_react_templatetags
        
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Framework :: Django
Classifier: Topic :: Utilities
Classifier: Programming Language :: JavaScript
Provides-Extra: ssr
Provides-Extra: hypernova
