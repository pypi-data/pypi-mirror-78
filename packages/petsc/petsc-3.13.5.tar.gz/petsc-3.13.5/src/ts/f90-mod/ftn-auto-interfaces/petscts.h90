      subroutine TSTrajectorySet(a,b,c,d,e,z)
      use petsctsdef
       TSTrajectory a ! TSTrajectory
       TS b ! TS
       PetscInt c ! PetscInt
       PetscReal d ! PetscReal
       Vec e ! Vec
        PetscErrorCode z
       end subroutine
      subroutine TSTrajectoryGetNumSteps(a,b,z)
      use petsctsdef
       TSTrajectory a ! TSTrajectory
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine TSTrajectoryGet(a,b,c,d,z)
      use petsctsdef
       TSTrajectory a ! TSTrajectory
       TS b ! TS
       PetscInt c ! PetscInt
       PetscReal d ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSTrajectoryGetVecs(a,b,c,d,e,f,z)
      use petsctsdef
       TSTrajectory a ! TSTrajectory
       TS b ! TS
       PetscInt c ! PetscInt
       PetscReal d ! PetscReal
       Vec e ! Vec
       Vec f ! Vec
        PetscErrorCode z
       end subroutine
      subroutine TSTrajectoryCreate(a,b,z)
      use petsctsdef
      MPI_Comm a ! MPI_Comm
       TSTrajectory b ! TSTrajectory
        PetscErrorCode z
       end subroutine
      subroutine TSTrajectoryReset(a,z)
      use petsctsdef
       TSTrajectory a ! TSTrajectory
        PetscErrorCode z
       end subroutine
      subroutine TSTrajectoryDestroy(a,z)
      use petsctsdef
       TSTrajectory a ! TSTrajectory
        PetscErrorCode z
       end subroutine
      subroutine TSTrajectorySetUseHistory(a,b,z)
      use petsctsdef
       TSTrajectory a ! TSTrajectory
       PetscBool b ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine TSTrajectorySetMonitor(a,b,z)
      use petsctsdef
       TSTrajectory a ! TSTrajectory
       PetscBool b ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine TSTrajectorySetKeepFiles(a,b,z)
      use petsctsdef
       TSTrajectory a ! TSTrajectory
       PetscBool b ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine TSTrajectorySetFromOptions(a,b,z)
      use petsctsdef
       TSTrajectory a ! TSTrajectory
       TS b ! TS
        PetscErrorCode z
       end subroutine
      subroutine TSTrajectorySetUp(a,b,z)
      use petsctsdef
       TSTrajectory a ! TSTrajectory
       TS b ! TS
        PetscErrorCode z
       end subroutine
      subroutine TSTrajectorySetSolutionOnly(a,b,z)
      use petsctsdef
       TSTrajectory a ! TSTrajectory
       PetscBool b ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine TSTrajectoryGetSolutionOnly(a,b,z)
      use petsctsdef
       TSTrajectory a ! TSTrajectory
       PetscBool b ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine TSTrajectoryGetUpdatedHistoryVecs(a,b,c,d,e,z)
      use petsctsdef
       TSTrajectory a ! TSTrajectory
       TS b ! TS
       PetscReal c ! PetscReal
       Vec d ! Vec
       Vec e ! Vec
        PetscErrorCode z
       end subroutine
      subroutine TSTrajectoryRestoreUpdatedHistoryVecs(a,b,c,z)
      use petsctsdef
       TSTrajectory a ! TSTrajectory
       Vec b ! Vec
       Vec c ! Vec
        PetscErrorCode z
       end subroutine
      subroutine TSBDFSetOrder(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine TSBDFGetOrder(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine TSPseudoVerifyTimeStep(a,b,c,d,z)
      use petsctsdef
       TS a ! TS
       Vec b ! Vec
       PetscReal c ! PetscReal
       PetscBool d ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine TSPseudoSetTimeStepIncrement(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSPseudoSetMaxTimeStep(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSPseudoIncrementDtFromInitialDt(a,z)
      use petsctsdef
       TS a ! TS
        PetscErrorCode z
       end subroutine
      subroutine TSRKGetOrder(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine TSSetPostEventIntervalStep(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSSetEventTolerances(a,b,c,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
       PetscReal c (*) ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSSetFromOptions(a,z)
      use petsctsdef
       TS a ! TS
        PetscErrorCode z
       end subroutine
      subroutine TSGetTrajectory(a,b,z)
      use petsctsdef
       TS a ! TS
       TSTrajectory b ! TSTrajectory
        PetscErrorCode z
       end subroutine
      subroutine TSSetSaveTrajectory(a,z)
      use petsctsdef
       TS a ! TS
        PetscErrorCode z
       end subroutine
      subroutine TSResetTrajectory(a,z)
      use petsctsdef
       TS a ! TS
        PetscErrorCode z
       end subroutine
      subroutine TSComputeRHSJacobian(a,b,c,d,e,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
       Vec c ! Vec
       Mat d ! Mat
       Mat e ! Mat
        PetscErrorCode z
       end subroutine
      subroutine TSComputeRHSFunction(a,b,c,d,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
       Vec c ! Vec
       Vec d ! Vec
        PetscErrorCode z
       end subroutine
      subroutine TSComputeSolutionFunction(a,b,c,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
       Vec c ! Vec
        PetscErrorCode z
       end subroutine
      subroutine TSComputeForcingFunction(a,b,c,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
       Vec c ! Vec
        PetscErrorCode z
       end subroutine
      subroutine TSComputeIFunction(a,b,c,d,e,f,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
       Vec c ! Vec
       Vec d ! Vec
       Vec e ! Vec
       PetscBool f ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine TSComputeIJacobian(a,b,c,d,e,f,g,h,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
       Vec c ! Vec
       Vec d ! Vec
       PetscReal e ! PetscReal
       Mat f ! Mat
       Mat g ! Mat
       PetscBool h ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine TSRHSJacobianSetReuse(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscBool b ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine TSComputeI2Function(a,b,c,d,e,f,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
       Vec c ! Vec
       Vec d ! Vec
       Vec e ! Vec
       Vec f ! Vec
        PetscErrorCode z
       end subroutine
      subroutine TSComputeI2Jacobian(a,b,c,d,e,f,g,h,i,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
       Vec c ! Vec
       Vec d ! Vec
       Vec e ! Vec
       PetscReal f ! PetscReal
       PetscReal g ! PetscReal
       Mat h ! Mat
       Mat i ! Mat
        PetscErrorCode z
       end subroutine
      subroutine TSComputeTransientVariable(a,b,c,z)
      use petsctsdef
       TS a ! TS
       Vec b ! Vec
       Vec c ! Vec
        PetscErrorCode z
       end subroutine
      subroutine TSHasTransientVariable(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscBool b ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine TS2SetSolution(a,b,c,z)
      use petsctsdef
       TS a ! TS
       Vec b ! Vec
       Vec c ! Vec
        PetscErrorCode z
       end subroutine
      subroutine TS2GetSolution(a,b,c,z)
      use petsctsdef
       TS a ! TS
       Vec b ! Vec
       Vec c ! Vec
        PetscErrorCode z
       end subroutine
      subroutine TSGetStepNumber(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine TSSetStepNumber(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine TSSetTimeStep(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSSetExactFinalTime(a,b,z)
      use petsctsdef
       TS a ! TS
       TSExactFinalTimeOption b ! TSExactFinalTimeOption
        PetscErrorCode z
       end subroutine
      subroutine TSGetExactFinalTime(a,b,z)
      use petsctsdef
       TS a ! TS
       TSExactFinalTimeOption b ! TSExactFinalTimeOption
        PetscErrorCode z
       end subroutine
      subroutine TSGetTimeStep(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSGetSolution(a,b,z)
      use petsctsdef
       TS a ! TS
       Vec b ! Vec
        PetscErrorCode z
       end subroutine
      subroutine TSGetSolutionComponents(a,b,c,z)
      use petsctsdef
       TS a ! TS
       PetscInt b ! PetscInt
       Vec c ! Vec
        PetscErrorCode z
       end subroutine
      subroutine TSGetAuxSolution(a,b,z)
      use petsctsdef
       TS a ! TS
       Vec b ! Vec
        PetscErrorCode z
       end subroutine
      subroutine TSGetTimeError(a,b,c,z)
      use petsctsdef
       TS a ! TS
       PetscInt b ! PetscInt
       Vec c ! Vec
        PetscErrorCode z
       end subroutine
      subroutine TSSetTimeError(a,b,z)
      use petsctsdef
       TS a ! TS
       Vec b ! Vec
        PetscErrorCode z
       end subroutine
      subroutine TSSetProblemType(a,b,z)
      use petsctsdef
       TS a ! TS
       TSProblemType b ! TSProblemType
        PetscErrorCode z
       end subroutine
      subroutine TSSetUp(a,z)
      use petsctsdef
       TS a ! TS
        PetscErrorCode z
       end subroutine
      subroutine TSReset(a,z)
      use petsctsdef
       TS a ! TS
        PetscErrorCode z
       end subroutine
      subroutine TSDestroy(a,z)
      use petsctsdef
       TS a ! TS
        PetscErrorCode z
       end subroutine
      subroutine TSGetSNES(a,b,z)
      use petsctsdef
       TS a ! TS
       SNES b ! SNES
        PetscErrorCode z
       end subroutine
      subroutine TSSetSNES(a,b,z)
      use petsctsdef
       TS a ! TS
       SNES b ! SNES
        PetscErrorCode z
       end subroutine
      subroutine TSGetKSP(a,b,z)
      use petsctsdef
       TS a ! TS
       KSP b ! KSP
        PetscErrorCode z
       end subroutine
      subroutine TSSetMaxSteps(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine TSGetMaxSteps(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine TSSetMaxTime(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSGetMaxTime(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSSetInitialTimeStep(a,b,c,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSGetDuration(a,b,c,z)
      use petsctsdef
       TS a ! TS
       PetscInt b ! PetscInt
       PetscReal c ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSSetDuration(a,b,c,z)
      use petsctsdef
       TS a ! TS
       PetscInt b ! PetscInt
       PetscReal c ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSGetTimeStepNumber(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine TSGetTotalSteps(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine TSSetSolution(a,b,z)
      use petsctsdef
       TS a ! TS
       Vec b ! Vec
        PetscErrorCode z
       end subroutine
      subroutine TSPreStep(a,z)
      use petsctsdef
       TS a ! TS
        PetscErrorCode z
       end subroutine
      subroutine TSPreStage(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSPostStage(a,b,c,d,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
       PetscInt c ! PetscInt
       Vec d ! Vec
        PetscErrorCode z
       end subroutine
      subroutine TSPostEvaluate(a,z)
      use petsctsdef
       TS a ! TS
        PetscErrorCode z
       end subroutine
      subroutine TSPostStep(a,z)
      use petsctsdef
       TS a ! TS
        PetscErrorCode z
       end subroutine
      subroutine TSInterpolate(a,b,c,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
       Vec c ! Vec
        PetscErrorCode z
       end subroutine
      subroutine TSStep(a,z)
      use petsctsdef
       TS a ! TS
        PetscErrorCode z
       end subroutine
      subroutine TSEvaluateWLTE(a,b,c,d,z)
      use petsctsdef
       TS a ! TS
       NormType b ! NormType
       PetscInt c ! PetscInt
       PetscReal d ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSEvaluateStep(a,b,c,d,z)
      use petsctsdef
       TS a ! TS
       PetscInt b ! PetscInt
       Vec c ! Vec
       PetscBool d ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine TSComputeInitialCondition(a,b,z)
      use petsctsdef
       TS a ! TS
       Vec b ! Vec
        PetscErrorCode z
       end subroutine
      subroutine TSComputeExactError(a,b,c,z)
      use petsctsdef
       TS a ! TS
       Vec b ! Vec
       Vec c ! Vec
        PetscErrorCode z
       end subroutine
      subroutine TSSolve(a,b,z)
      use petsctsdef
       TS a ! TS
       Vec b ! Vec
        PetscErrorCode z
       end subroutine
      subroutine TSGetTime(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSGetPrevTime(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSSetTime(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSSetDM(a,b,z)
      use petsctsdef
       TS a ! TS
       DM b ! DM
        PetscErrorCode z
       end subroutine
      subroutine TSGetDM(a,b,z)
      use petsctsdef
       TS a ! TS
       DM b ! DM
        PetscErrorCode z
       end subroutine
      subroutine TSGetEquationType(a,b,z)
      use petsctsdef
       TS a ! TS
       TSEquationType b ! TSEquationType
        PetscErrorCode z
       end subroutine
      subroutine TSSetEquationType(a,b,z)
      use petsctsdef
       TS a ! TS
       TSEquationType b ! TSEquationType
        PetscErrorCode z
       end subroutine
      subroutine TSGetConvergedReason(a,b,z)
      use petsctsdef
       TS a ! TS
       TSConvergedReason b ! TSConvergedReason
        PetscErrorCode z
       end subroutine
      subroutine TSSetConvergedReason(a,b,z)
      use petsctsdef
       TS a ! TS
       TSConvergedReason b ! TSConvergedReason
        PetscErrorCode z
       end subroutine
      subroutine TSGetSolveTime(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSGetSNESIterations(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine TSGetKSPIterations(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine TSGetStepRejections(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine TSGetSNESFailures(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine TSSetMaxStepRejections(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine TSSetMaxSNESFailures(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine TSSetErrorIfStepFails(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscBool b ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine TSGetAdapt(a,b,z)
      use petsctsdef
       TS a ! TS
       TSAdapt b ! TSAdapt
        PetscErrorCode z
       end subroutine
      subroutine TSSetTolerances(a,b,c,d,e,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
       Vec c ! Vec
       PetscReal d ! PetscReal
       Vec e ! Vec
        PetscErrorCode z
       end subroutine
      subroutine TSGetTolerances(a,b,c,d,e,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
       Vec c ! Vec
       PetscReal d ! PetscReal
       Vec e ! Vec
        PetscErrorCode z
       end subroutine
      subroutine TSErrorWeightedNorm2(a,b,c,d,e,f,z)
      use petsctsdef
       TS a ! TS
       Vec b ! Vec
       Vec c ! Vec
       PetscReal d ! PetscReal
       PetscReal e ! PetscReal
       PetscReal f ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSErrorWeightedNormInfinity(a,b,c,d,e,f,z)
      use petsctsdef
       TS a ! TS
       Vec b ! Vec
       Vec c ! Vec
       PetscReal d ! PetscReal
       PetscReal e ! PetscReal
       PetscReal f ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSErrorWeightedNorm(a,b,c,d,e,f,g,z)
      use petsctsdef
       TS a ! TS
       Vec b ! Vec
       Vec c ! Vec
       NormType d ! NormType
       PetscReal e ! PetscReal
       PetscReal f ! PetscReal
       PetscReal g ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSErrorWeightedENorm2(a,b,c,d,e,f,g,z)
      use petsctsdef
       TS a ! TS
       Vec b ! Vec
       Vec c ! Vec
       Vec d ! Vec
       PetscReal e ! PetscReal
       PetscReal f ! PetscReal
       PetscReal g ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSErrorWeightedENormInfinity(a,b,c,d,e,f,g,z)
      use petsctsdef
       TS a ! TS
       Vec b ! Vec
       Vec c ! Vec
       Vec d ! Vec
       PetscReal e ! PetscReal
       PetscReal f ! PetscReal
       PetscReal g ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSErrorWeightedENorm(a,b,c,d,e,f,g,h,z)
      use petsctsdef
       TS a ! TS
       Vec b ! Vec
       Vec c ! Vec
       Vec d ! Vec
       NormType e ! NormType
       PetscReal f ! PetscReal
       PetscReal g ! PetscReal
       PetscReal h ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSSetCFLTimeLocal(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSGetCFLTime(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSVISetVariableBounds(a,b,c,z)
      use petsctsdef
       TS a ! TS
       Vec b ! Vec
       Vec c ! Vec
        PetscErrorCode z
       end subroutine
      subroutine TSComputeLinearStability(a,b,c,d,e,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
       PetscReal d ! PetscReal
       PetscReal e ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSRestartStep(a,z)
      use petsctsdef
       TS a ! TS
        PetscErrorCode z
       end subroutine
      subroutine TSRollBack(a,z)
      use petsctsdef
       TS a ! TS
        PetscErrorCode z
       end subroutine
      subroutine TSGetStages(a,b,c,z)
      use petsctsdef
       TS a ! TS
       PetscInt b ! PetscInt
       Vec c ! Vec
        PetscErrorCode z
       end subroutine
      subroutine TSSetFunctionDomainError(a,b,z)
      use petsctsdef
       TS a ! TS
       external b ! void function pointer
        PetscErrorCode z
       end subroutine
      subroutine TSFunctionDomainError(a,b,c,d,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
       Vec c ! Vec
       PetscBool d ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine TSRHSJacobianTest(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscBool b ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine TSSetUseSplitRHSFunction(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscBool b ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine TSGetUseSplitRHSFunction(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscBool b ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine TSSundialsSetType(a,b,z)
      use petsctsdef
       TS a ! TS
       TSSundialsLmmType b ! TSSundialsLmmType
        PetscErrorCode z
       end subroutine
      subroutine TSSundialsSetMaxord(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine TSSundialsSetMaxl(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine TSSundialsSetLinearTolerance(a,b,z)
      use petsctsdef
       TS a ! TS
       double precision b ! double
        PetscErrorCode z
       end subroutine
      subroutine TSSundialsSetGramSchmidtType(a,b,z)
      use petsctsdef
       TS a ! TS
       TSSundialsGramSchmidtType b ! TSSundialsGramSchmidtType
        PetscErrorCode z
       end subroutine
      subroutine TSSundialsSetTolerance(a,b,c,z)
      use petsctsdef
       TS a ! TS
       double precision b ! double
       double precision c ! double
        PetscErrorCode z
       end subroutine
      subroutine TSSundialsGetPC(a,b,z)
      use petsctsdef
       TS a ! TS
       PC b ! PC
        PetscErrorCode z
       end subroutine
      subroutine TSSundialsSetMinTimeStep(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSSundialsSetMaxTimeStep(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSSundialsMonitorInternalSteps(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscBool b ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine TSSSPSetNumStages(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine TSSSPGetNumStages(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine TSThetaGetTheta(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSThetaSetTheta(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSThetaGetEndpoint(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscBool b ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine TSThetaSetEndpoint(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscBool b ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine TSAlpha2SetRadius(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSAlpha2SetParams(a,b,c,d,e,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
       PetscReal d ! PetscReal
       PetscReal e ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSAlpha2GetParams(a,b,c,d,e,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
       PetscReal d ! PetscReal
       PetscReal e ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSAlphaSetRadius(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSAlphaSetParams(a,b,c,d,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
       PetscReal d ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSAlphaGetParams(a,b,c,d,z)
      use petsctsdef
       TS a ! TS
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
       PetscReal d ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine DMPlexTSGetGeometryFVM(a,b,c,d,z)
      use petsctsdef
       DM a ! DM
       Vec b ! Vec
       Vec c ! Vec
       PetscReal d ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSARKIMEXSetFullyImplicit(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscBool b ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine TSARKIMEXGetFullyImplicit(a,b,z)
      use petsctsdef
       TS a ! TS
       PetscBool b ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine TSAdaptDSPSetPID(a,b,c,d,z)
      use petsctsdef
       TSAdapt a ! TSAdapt
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
       PetscReal d ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSAdaptReset(a,z)
      use petsctsdef
       TSAdapt a ! TSAdapt
        PetscErrorCode z
       end subroutine
      subroutine TSAdaptSetMonitor(a,b,z)
      use petsctsdef
       TSAdapt a ! TSAdapt
       PetscBool b ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine TSAdaptSetAlwaysAccept(a,b,z)
      use petsctsdef
       TSAdapt a ! TSAdapt
       PetscBool b ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine TSAdaptSetSafety(a,b,c,z)
      use petsctsdef
       TSAdapt a ! TSAdapt
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSAdaptGetSafety(a,b,c,z)
      use petsctsdef
       TSAdapt a ! TSAdapt
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSAdaptSetMaxIgnore(a,b,z)
      use petsctsdef
       TSAdapt a ! TSAdapt
       PetscReal b ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSAdaptGetMaxIgnore(a,b,z)
      use petsctsdef
       TSAdapt a ! TSAdapt
       PetscReal b ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSAdaptSetClip(a,b,c,z)
      use petsctsdef
       TSAdapt a ! TSAdapt
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSAdaptGetClip(a,b,c,z)
      use petsctsdef
       TSAdapt a ! TSAdapt
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSAdaptSetScaleSolveFailed(a,b,z)
      use petsctsdef
       TSAdapt a ! TSAdapt
       PetscReal b ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSAdaptGetScaleSolveFailed(a,b,z)
      use petsctsdef
       TSAdapt a ! TSAdapt
       PetscReal b ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSAdaptSetStepLimits(a,b,c,z)
      use petsctsdef
       TSAdapt a ! TSAdapt
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSAdaptGetStepLimits(a,b,c,z)
      use petsctsdef
       TSAdapt a ! TSAdapt
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSAdaptCandidatesClear(a,z)
      use petsctsdef
       TSAdapt a ! TSAdapt
        PetscErrorCode z
       end subroutine
      subroutine TSAdaptSetTimeStepIncreaseDelay(a,b,z)
      use petsctsdef
       TSAdapt a ! TSAdapt
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine TSAdaptCheckStage(a,b,c,d,e,z)
      use petsctsdef
       TSAdapt a ! TSAdapt
       TS b ! TS
       PetscReal c ! PetscReal
       Vec d ! Vec
       PetscBool e ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine TSAdaptCreate(a,b,z)
      use petsctsdef
      MPI_Comm a ! MPI_Comm
       TSAdapt b ! TSAdapt
        PetscErrorCode z
       end subroutine
      subroutine TSAdaptHistoryGetStep(a,b,c,d,z)
      use petsctsdef
       TSAdapt a ! TSAdapt
       PetscInt b ! PetscInt
       PetscReal c ! PetscReal
       PetscReal d ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine TSAdaptHistorySetHistory(a,b,c,d,z)
      use petsctsdef
       TSAdapt a ! TSAdapt
       PetscInt b ! PetscInt
       PetscReal c (*) ! PetscReal
       PetscBool d ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine TSAdaptHistorySetTrajectory(a,b,c,z)
      use petsctsdef
       TSAdapt a ! TSAdapt
       TSTrajectory b ! TSTrajectory
       PetscBool c ! PetscBool
        PetscErrorCode z
       end subroutine
