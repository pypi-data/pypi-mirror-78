      subroutine DMPlexCellRefinerRefine(a,b,c,d,e,f,g,z)
      use petscdmdef
       DMPlexCellRefiner a ! DMPlexCellRefiner
       DMPolytopeType b ! DMPolytopeType
       PetscInt c ! PetscInt
       DMPolytopeType d (*) ! DMPolytopeType
       PetscInt e (*) ! PetscInt
       PetscInt f (*) ! PetscInt
       PetscInt g (*) ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCellRefinerGetAffineTransforms(a,b,c,d,e,f,z)
      use petscdmdef
       DMPlexCellRefiner a ! DMPlexCellRefiner
       DMPolytopeType b ! DMPolytopeType
       PetscInt c ! PetscInt
       PetscReal d (*) ! PetscReal
       PetscReal e (*) ! PetscReal
       PetscReal f (*) ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCellRefinerGetAffineFaceTransforms(a,b,c,d,e,f,g,&
     &z)
      use petscdmdef
       DMPlexCellRefiner a ! DMPlexCellRefiner
       DMPolytopeType b ! DMPolytopeType
       PetscInt c ! PetscInt
       PetscReal d (*) ! PetscReal
       PetscReal e (*) ! PetscReal
       PetscReal f (*) ! PetscReal
       PetscReal g (*) ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCreateProcessSF(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       PetscSF b ! PetscSF
       IS c ! IS
       PetscSF d ! PetscSF
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCreateCoarsePointIS(a,b,z)
      use petscdmdef
       DM a ! DM
       IS b ! IS
        PetscErrorCode z
       end subroutine
      subroutine DMPlexSetRefinementUniform(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscBool b ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetRefinementUniform(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscBool b ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine DMPlexSetRefinementLimit(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscReal b ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetRefinementLimit(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscReal b ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine DMPlexSetRefinementFunction(a,b,z)
      use petscdmdef
       DM a ! DM
       external b ! void function pointer
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetRefinementFunction(a,b,z)
      use petscdmdef
       DM a ! DM
       external b ! void function pointer
        PetscErrorCode z
       end subroutine
      subroutine DMPlexSnapToGeomModel(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscScalar c (*) ! PetscScalar
       PetscScalar d (*) ! PetscScalar
        PetscErrorCode z
       end subroutine
      subroutine PetscViewerExodusIIGetId(a,b,z)
      use petscdmdef
       PetscViewer a ! PetscViewer
       integer b ! int
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCreateExodus(a,b,c,d,z)
      use petscdmdef
      MPI_Comm a ! MPI_Comm
       PetscInt b ! PetscInt
       PetscBool c ! PetscBool
       DM d ! DM
        PetscErrorCode z
       end subroutine
      subroutine DMPlexReconstructGradientsFVM(a,b,c,z)
      use petscdmdef
       DM a ! DM
       Vec b ! Vec
       Vec c ! Vec
        PetscErrorCode z
       end subroutine
      subroutine DMPlexSetReferenceTree(a,b,z)
      use petscdmdef
       DM a ! DM
       DM b ! DM
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetReferenceTree(a,b,z)
      use petscdmdef
       DM a ! DM
       DM b ! DM
        PetscErrorCode z
       end subroutine
      subroutine DMPlexReferenceTreeGetChildSymmetry(a,b,c,d,e,f,g,h,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       PetscInt f ! PetscInt
       PetscInt g ! PetscInt
       PetscInt h ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCreateDefaultReferenceTree(a,b,c,d,z)
      use petscdmdef
      MPI_Comm a ! MPI_Comm
       PetscInt b ! PetscInt
       PetscBool c ! PetscBool
       DM d ! DM
        PetscErrorCode z
       end subroutine
      subroutine DMPlexSetTree(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       PetscSection b ! PetscSection
       PetscInt c (*) ! PetscInt
       PetscInt d (*) ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetTree(a,b,c,d,e,f,z)
      use petscdmdef
       DM a ! DM
       PetscSection b ! PetscSection
       PetscInt c (*) ! PetscInt
       PetscInt d (*) ! PetscInt
       PetscSection e ! PetscSection
       PetscInt f (*) ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetTreeParent(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexTransferVecTree(a,b,c,d,e,f,g,h,i,j,z)
      use petscdmdef
       DM a ! DM
       Vec b ! Vec
       DM c ! DM
       Vec d ! Vec
       PetscSF e ! PetscSF
       PetscSF f ! PetscSF
       PetscInt g ! PetscInt
       PetscInt h ! PetscInt
       PetscBool i ! PetscBool
       PetscReal j ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCreateClosureIndex(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscSection b ! PetscSection
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCheckInterfaceCones(a,z)
      use petscdmdef
       DM a ! DM
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCreateDoublet(a,b,c,d,e,f,g,z)
      use petscdmdef
      MPI_Comm a ! MPI_Comm
       PetscInt b ! PetscInt
       PetscBool c ! PetscBool
       PetscBool d ! PetscBool
       PetscBool e ! PetscBool
       PetscReal f ! PetscReal
       DM g ! DM
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCreateSquareBoundary(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       PetscReal b (*) ! PetscReal
       PetscReal c (*) ! PetscReal
       PetscInt d (*) ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCreateCubeBoundary(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       PetscReal b (*) ! PetscReal
       PetscReal c (*) ! PetscReal
       PetscInt d (*) ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCreateWedgeBoxMesh(a,b,c,d,e,f,g,h,z)
      use petscdmdef
      MPI_Comm a ! MPI_Comm
       PetscInt b (*) ! PetscInt
       PetscReal c (*) ! PetscReal
       PetscReal d (*) ! PetscReal
       DMBoundaryType e (*) ! DMBoundaryType
       PetscBool f ! PetscBool
       PetscBool g ! PetscBool
       DM h ! DM
        PetscErrorCode z
       end subroutine
      subroutine DMPlexExtrude(a,b,c,d,e,f,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscReal c ! PetscReal
       PetscBool d ! PetscBool
       PetscBool e ! PetscBool
       DM f ! DM
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCreateHexCylinderMesh(a,b,c,d,z)
      use petscdmdef
      MPI_Comm a ! MPI_Comm
       PetscInt b ! PetscInt
       DMBoundaryType c ! DMBoundaryType
       DM d ! DM
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCreateWedgeCylinderMesh(a,b,c,d,z)
      use petscdmdef
      MPI_Comm a ! MPI_Comm
       PetscInt b ! PetscInt
       PetscBool c ! PetscBool
       DM d ! DM
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCreateSphereMesh(a,b,c,d,z)
      use petscdmdef
      MPI_Comm a ! MPI_Comm
       PetscInt b ! PetscInt
       PetscBool c ! PetscBool
       DM d ! DM
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCreate(a,b,z)
      use petscdmdef
      MPI_Comm a ! MPI_Comm
       DM b ! DM
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCreateFromCellListParallel(a,b,c,d,e,f,g,h,i,j,k,&
     &z)
      use petscdmdef
      MPI_Comm a ! MPI_Comm
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       PetscBool f ! PetscBool
       integer g (*) ! int
       PetscInt h ! PetscInt
       PetscReal i (*) ! PetscReal
       PetscSF j ! PetscSF
       DM k ! DM
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCreateFromCellList(a,b,c,d,e,f,g,h,i,j,z)
      use petscdmdef
      MPI_Comm a ! MPI_Comm
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
       PetscBool f ! PetscBool
       integer g (*) ! int
       PetscInt h ! PetscInt
       double precision i (*) ! double
       DM j ! DM
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCreateFromDAG(a,b,c,d,e,f,g,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c (*) ! PetscInt
       PetscInt d (*) ! PetscInt
       PetscInt e (*) ! PetscInt
       PetscInt f (*) ! PetscInt
       PetscScalar g (*) ! PetscScalar
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCreateReferenceCellByType(a,b,c,z)
      use petscdmdef
      MPI_Comm a ! MPI_Comm
       DMPolytopeType b ! DMPolytopeType
       DM c ! DM
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCreateReferenceCell(a,b,c,d,z)
      use petscdmdef
      MPI_Comm a ! MPI_Comm
       PetscInt b ! PetscInt
       PetscBool c ! PetscBool
       DM d ! DM
        PetscErrorCode z
       end subroutine
      subroutine DMPlexFindVertices(a,b,c,d,e,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscReal c (*) ! PetscReal
       PetscReal d ! PetscReal
       PetscInt e (*) ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexComputeProjection3Dto2D(a,b,c,z)
      use petscdmdef
       PetscInt a ! PetscInt
       PetscScalar b (*) ! PetscScalar
       PetscReal c (*) ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine DMPlexComputeGeometryFEM(a,b,z)
      use petscdmdef
       DM a ! DM
       Vec b ! Vec
        PetscErrorCode z
       end subroutine
      subroutine DMPlexComputeGeometryFVM(a,b,c,z)
      use petscdmdef
       DM a ! DM
       Vec b ! Vec
       Vec c ! Vec
        PetscErrorCode z
       end subroutine
      subroutine DMPlexComputeGradientFVM(a,b,c,d,e,z)
      use petscdmdef
       DM a ! DM
       PetscFV b ! PetscFV
       Vec c ! Vec
       Vec d ! Vec
       DM e ! DM
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetDataFVM(a,b,c,d,e,z)
      use petscdmdef
       DM a ! DM
       PetscFV b ! PetscFV
       Vec c ! Vec
       Vec d ! Vec
       DM e ! DM
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCoordinatesToReference(a,b,c,d,e,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscReal d (*) ! PetscReal
       PetscReal e (*) ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine DMPlexReferenceToCoordinates(a,b,c,d,e,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscReal d (*) ! PetscReal
       PetscReal e (*) ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine DMPlexSetAdjacencyUseAnchors(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscBool b ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetAdjacencyUseAnchors(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscBool b ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetAdjacency(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d (*) ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCreateTwoSidedProcessSF(a,b,c,d,e,f,g,h,z)
      use petscdmdef
       DM a ! DM
       PetscSF b ! PetscSF
       PetscSection c ! PetscSection
       IS d ! IS
       PetscSection e ! PetscSection
       IS f ! IS
       IS g ! IS
       PetscSF h ! PetscSF
        PetscErrorCode z
       end subroutine
      subroutine DMPlexDistributeOwnership(a,b,c,d,e,z)
      use petscdmdef
       DM a ! DM
       PetscSection b ! PetscSection
       IS c ! IS
       PetscSection d ! PetscSection
       IS e ! IS
        PetscErrorCode z
       end subroutine
      subroutine DMPlexStratifyMigrationSF(a,b,c,z)
      use petscdmdef
       DM a ! DM
       PetscSF b ! PetscSF
       PetscSF c ! PetscSF
        PetscErrorCode z
       end subroutine
      subroutine DMPlexDistributeField(a,b,c,d,e,f,z)
      use petscdmdef
       DM a ! DM
       PetscSF b ! PetscSF
       PetscSection c ! PetscSection
       Vec d ! Vec
       PetscSection e ! PetscSection
       Vec f ! Vec
        PetscErrorCode z
       end subroutine
      subroutine DMPlexDistributeFieldIS(a,b,c,d,e,f,z)
      use petscdmdef
       DM a ! DM
       PetscSF b ! PetscSF
       PetscSection c ! PetscSection
       IS d ! IS
       PetscSection e ! PetscSection
       IS f ! IS
        PetscErrorCode z
       end subroutine
      subroutine DMPlexSetPartitionBalance(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscBool b ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetPartitionBalance(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscBool b ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetOverlap(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexIsDistributed(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscBool b ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine DMPlexMarkBoundaryFaces(a,b,c,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       DMLabel c ! DMLabel
        PetscErrorCode z
       end subroutine
      subroutine DMPlexLabelComplete(a,b,z)
      use petscdmdef
       DM a ! DM
       DMLabel b ! DMLabel
        PetscErrorCode z
       end subroutine
      subroutine DMPlexLabelAddCells(a,b,z)
      use petscdmdef
       DM a ! DM
       DMLabel b ! DMLabel
        PetscErrorCode z
       end subroutine
      subroutine DMPlexLabelAddFaceCells(a,b,z)
      use petscdmdef
       DM a ! DM
       DMLabel b ! DMLabel
        PetscErrorCode z
       end subroutine
      subroutine DMPlexLabelClearCells(a,b,z)
      use petscdmdef
       DM a ! DM
       DMLabel b ! DMLabel
        PetscErrorCode z
       end subroutine
      subroutine DMPlexLabelCohesiveComplete(a,b,c,d,e,z)
      use petscdmdef
       DM a ! DM
       DMLabel b ! DMLabel
       DMLabel c ! DMLabel
       PetscBool d ! PetscBool
       DM e ! DM
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCreateHybridMesh(a,b,c,d,e,f,g,z)
      use petscdmdef
       DM a ! DM
       DMLabel b ! DMLabel
       DMLabel c ! DMLabel
       DMLabel d ! DMLabel
       DMLabel e ! DMLabel
       DM f ! DM
       DM g ! DM
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetOrientedFace(a,b,c,d,e,f,g,h,i,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d (*) ! PetscInt
       PetscInt e ! PetscInt
       PetscInt f (*) ! PetscInt
       PetscInt g (*) ! PetscInt
       PetscInt h (*) ! PetscInt
       PetscBool i ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCreateSubmesh(a,b,c,d,e,z)
      use petscdmdef
       DM a ! DM
       DMLabel b ! DMLabel
       PetscInt c ! PetscInt
       PetscBool d ! PetscBool
       DM e ! DM
        PetscErrorCode z
       end subroutine
      subroutine DMPlexFilter(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       DMLabel b ! DMLabel
       PetscInt c ! PetscInt
       DM d ! DM
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetSubpointMap(a,b,z)
      use petscdmdef
       DM a ! DM
       DMLabel b ! DMLabel
        PetscErrorCode z
       end subroutine
      subroutine DMPlexSetSubpointMap(a,b,z)
      use petscdmdef
       DM a ! DM
       DMLabel b ! DMLabel
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCreateSubpointIS(a,b,z)
      use petscdmdef
       DM a ! DM
       IS b ! IS
        PetscErrorCode z
       end subroutine
      subroutine DMGetEnclosureRelation(a,b,c,z)
      use petscdmdef
       DM a ! DM
       DM b ! DM
       DMEnclosureType c ! DMEnclosureType
        PetscErrorCode z
       end subroutine
      subroutine DMGetEnclosurePoint(a,b,c,d,e,z)
      use petscdmdef
       DM a ! DM
       DM b ! DM
       DMEnclosureType c ! DMEnclosureType
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCreateGmsh(a,b,c,d,z)
      use petscdmdef
      MPI_Comm a ! MPI_Comm
       PetscViewer b ! PetscViewer
       PetscBool c ! PetscBool
       DM d ! DM
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetScale(a,b,c,z)
      use petscdmdef
       DM a ! DM
       PetscUnit b ! PetscUnit
       PetscReal c ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine DMPlexSetScale(a,b,c,z)
      use petscdmdef
       DM a ! DM
       PetscUnit b ! PetscUnit
       PetscReal c ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCreateRigidBody(a,b,z)
      use petscdmdef
       DM a ! DM
       MatNullSpace b ! MatNullSpace
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCreateRigidBodies(a,b,c,d,e,f,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       DMLabel c ! DMLabel
       PetscInt d (*) ! PetscInt
       PetscInt e (*) ! PetscInt
       MatNullSpace f ! MatNullSpace
        PetscErrorCode z
       end subroutine
      subroutine DMPlexSetMaxProjectionHeight(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetMaxProjectionHeight(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGlobalToLocalBasis(a,b,z)
      use petscdmdef
       DM a ! DM
       Vec b ! Vec
        PetscErrorCode z
       end subroutine
      subroutine DMPlexLocalToGlobalBasis(a,b,z)
      use petscdmdef
       DM a ! DM
       Vec b ! Vec
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCreateBasisRotation(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       PetscReal b ! PetscReal
       PetscReal c ! PetscReal
       PetscReal d ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine DMPlexInsertBoundaryValues(a,b,c,d,e,f,g,z)
      use petscdmdef
       DM a ! DM
       PetscBool b ! PetscBool
       Vec c ! Vec
       PetscReal d ! PetscReal
       Vec e ! Vec
       Vec f ! Vec
       Vec g ! Vec
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetPointLocal(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetPointLocalField(a,b,c,d,e,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetPointGlobal(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetPointGlobalField(a,b,c,d,e,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       PetscInt e ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCompareOrientations(a,b,c,d,e,f,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d (*) ! PetscInt
       PetscInt e ! PetscInt
       PetscBool f ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine DMPlexOrientCell(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d (*) ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexReverseCell(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexOrient(a,z)
      use petscdmdef
       DM a ! DM
        PetscErrorCode z
       end subroutine
      subroutine DMPlexInterpolatePointSF(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscSF b ! PetscSF
        PetscErrorCode z
       end subroutine
      subroutine DMPlexInterpolate(a,b,z)
      use petscdmdef
       DM a ! DM
       DM b ! DM
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCopyCoordinates(a,b,z)
      use petscdmdef
       DM a ! DM
       DM b ! DM
        PetscErrorCode z
       end subroutine
      subroutine DMPlexUninterpolate(a,b,z)
      use petscdmdef
       DM a ! DM
       DM b ! DM
        PetscErrorCode z
       end subroutine
      subroutine DMPlexIsInterpolated(a,b,z)
      use petscdmdef
       DM a ! DM
       DMPlexInterpolatedFlag b ! DMPlexInterpolatedFlag
        PetscErrorCode z
       end subroutine
      subroutine DMPlexIsInterpolatedCollective(a,b,z)
      use petscdmdef
       DM a ! DM
       DMPlexInterpolatedFlag b ! DMPlexInterpolatedFlag
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetOrdering(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       MatOrderingType b ! MatOrderingType
       DMLabel c ! DMLabel
       IS d ! IS
        PetscErrorCode z
       end subroutine
      subroutine DMPlexPermute(a,b,c,z)
      use petscdmdef
       DM a ! DM
       IS b ! IS
       DM c ! DM
        PetscErrorCode z
       end subroutine
      subroutine PetscPartitionerSetFromOptions(a,z)
      use petscdmdef
       PetscPartitioner a ! PetscPartitioner
        PetscErrorCode z
       end subroutine
      subroutine PetscPartitionerDestroy(a,z)
      use petscdmdef
       PetscPartitioner a ! PetscPartitioner
        PetscErrorCode z
       end subroutine
      subroutine PetscPartitionerPartition(a,b,c,d,e,f,g,h,i,z)
      use petscdmdef
       PetscPartitioner a ! PetscPartitioner
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d (*) ! PetscInt
       PetscInt e (*) ! PetscInt
       PetscSection f ! PetscSection
       PetscSection g ! PetscSection
       PetscSection h ! PetscSection
       IS i ! IS
        PetscErrorCode z
       end subroutine
      subroutine PetscPartitionerCreate(a,b,z)
      use petscdmdef
      MPI_Comm a ! MPI_Comm
       PetscPartitioner b ! PetscPartitioner
        PetscErrorCode z
       end subroutine
      subroutine PetscPartitionerDMPlexPartition(a,b,c,d,e,z)
      use petscdmdef
       PetscPartitioner a ! PetscPartitioner
       DM b ! DM
       PetscSection c ! PetscSection
       PetscSection d ! PetscSection
       IS e ! IS
        PetscErrorCode z
       end subroutine
      subroutine PetscPartitionerShellSetRandom(a,b,z)
      use petscdmdef
       PetscPartitioner a ! PetscPartitioner
       PetscBool b ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine PetscPartitionerShellGetRandom(a,b,z)
      use petscdmdef
       PetscPartitioner a ! PetscPartitioner
       PetscBool b ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetPartitioner(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscPartitioner b ! PetscPartitioner
        PetscErrorCode z
       end subroutine
      subroutine DMPlexSetPartitioner(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscPartitioner b ! PetscPartitioner
        PetscErrorCode z
       end subroutine
      subroutine DMPlexPartitionLabelClosure(a,b,z)
      use petscdmdef
       DM a ! DM
       DMLabel b ! DMLabel
        PetscErrorCode z
       end subroutine
      subroutine DMPlexPartitionLabelAdjacency(a,b,z)
      use petscdmdef
       DM a ! DM
       DMLabel b ! DMLabel
        PetscErrorCode z
       end subroutine
      subroutine DMPlexPartitionLabelPropagate(a,b,z)
      use petscdmdef
       DM a ! DM
       DMLabel b ! DMLabel
        PetscErrorCode z
       end subroutine
      subroutine DMPlexPartitionLabelInvert(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       DMLabel b ! DMLabel
       PetscSF c ! PetscSF
       DMLabel d ! DMLabel
        PetscErrorCode z
       end subroutine
      subroutine DMPlexPartitionLabelCreateSF(a,b,c,z)
      use petscdmdef
       DM a ! DM
       DMLabel b ! DMLabel
       PetscSF c ! PetscSF
        PetscErrorCode z
       end subroutine
      subroutine DMPlexRebalanceSharedPoints(a,b,c,d,e,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscBool c ! PetscBool
       PetscBool d ! PetscBool
       PetscBool e ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCreateCGNS(a,b,c,d,z)
      use petscdmdef
      MPI_Comm a ! MPI_Comm
       PetscInt b ! PetscInt
       PetscBool c ! PetscBool
       DM d ! DM
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetSimplexOrBoxCells(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetSubdomainSection(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscSection b ! PetscSection
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetChart(a,b,c,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexSetChart(a,b,c,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetConeSize(a,b,c,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexSetConeSize(a,b,c,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexAddConeSize(a,b,c,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetConeRecursiveVertices(a,b,c,z)
      use petscdmdef
       DM a ! DM
       IS b ! IS
       IS c ! IS
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetConeRecursive(a,b,c,d,e,z)
      use petscdmdef
       DM a ! DM
       IS b ! IS
       PetscInt c ! PetscInt
       IS d (*) ! IS
       PetscSection e (*) ! PetscSection
        PetscErrorCode z
       end subroutine
      subroutine DMPlexRestoreConeRecursive(a,b,c,d,e,z)
      use petscdmdef
       DM a ! DM
       IS b ! IS
       PetscInt c ! PetscInt
       IS d (*) ! IS
       PetscSection e (*) ! PetscSection
        PetscErrorCode z
       end subroutine
      subroutine DMPlexSetCone(a,b,c,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c (*) ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexSetConeOrientation(a,b,c,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c (*) ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexInsertCone(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexInsertConeOrientation(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetSupportSize(a,b,c,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexSetSupportSize(a,b,c,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexSetSupport(a,b,c,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c (*) ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexInsertSupport(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetMaxSizes(a,b,c,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexSymmetrize(a,z)
      use petscdmdef
       DM a ! DM
        PetscErrorCode z
       end subroutine
      subroutine DMPlexStratify(a,z)
      use petscdmdef
       DM a ! DM
        PetscErrorCode z
       end subroutine
      subroutine DMPlexComputeCellTypes(a,z)
      use petscdmdef
       DM a ! DM
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetDepthLabel(a,b,z)
      use petscdmdef
       DM a ! DM
       DMLabel b ! DMLabel
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetDepth(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetDepthStratum(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetHeightStratum(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetPointDepth(a,b,c,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetPointHeight(a,b,c,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetCellTypeLabel(a,b,z)
      use petscdmdef
       DM a ! DM
       DMLabel b ! DMLabel
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetCellType(a,b,c,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       DMPolytopeType c ! DMPolytopeType
        PetscErrorCode z
       end subroutine
      subroutine DMPlexSetCellType(a,b,c,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       DMPolytopeType c ! DMPolytopeType
        PetscErrorCode z
       end subroutine
      subroutine DMPlexSetClosurePermutationTensor(a,b,c,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscSection c ! PetscSection
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetGhostCellStratum(a,b,c,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetCellNumbering(a,b,z)
      use petscdmdef
       DM a ! DM
       IS b ! IS
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetVertexNumbering(a,b,z)
      use petscdmdef
       DM a ! DM
       IS b ! IS
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCreatePointNumbering(a,b,z)
      use petscdmdef
       DM a ! DM
       IS b ! IS
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCreateRankField(a,b,z)
      use petscdmdef
       DM a ! DM
       Vec b ! Vec
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCreateLabelField(a,b,c,z)
      use petscdmdef
       DM a ! DM
       DMLabel b ! DMLabel
       Vec c ! Vec
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCheckSymmetry(a,z)
      use petscdmdef
       DM a ! DM
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCheckSkeleton(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCheckFaces(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCheckGeometry(a,z)
      use petscdmdef
       DM a ! DM
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCheckPointSF(a,z)
      use petscdmdef
       DM a ! DM
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCheckCellShape(a,b,c,z)
      use petscdmdef
       DM a ! DM
       PetscBool b ! PetscBool
       PetscReal c ! PetscReal
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetRegularRefinement(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscBool b ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine DMPlexSetRegularRefinement(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscBool b ! PetscBool
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetCellRefinerType(a,b,z)
      use petscdmdef
       DM a ! DM
       DMPlexCellRefinerType b ! DMPlexCellRefinerType
        PetscErrorCode z
       end subroutine
      subroutine DMPlexSetCellRefinerType(a,b,z)
      use petscdmdef
       DM a ! DM
       DMPlexCellRefinerType b ! DMPlexCellRefinerType
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetAnchors(a,b,c,z)
      use petscdmdef
       DM a ! DM
       PetscSection b ! PetscSection
       IS c ! IS
        PetscErrorCode z
       end subroutine
      subroutine DMPlexSetAnchors(a,b,c,z)
      use petscdmdef
       DM a ! DM
       PetscSection b ! PetscSection
       IS c ! IS
        PetscErrorCode z
       end subroutine
      subroutine DMPlexSetMigrationSF(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscSF b ! PetscSF
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetMigrationSF(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscSF b ! PetscSF
        PetscErrorCode z
       end subroutine
      subroutine DMPlexSetGlobalToNaturalSF(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscSF b ! PetscSF
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGetGlobalToNaturalSF(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscSF b ! PetscSF
        PetscErrorCode z
       end subroutine
      subroutine DMPlexCreateGlobalToNaturalSF(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       PetscSection b ! PetscSection
       PetscSF c ! PetscSF
       PetscSF d ! PetscSF
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGlobalToNaturalBegin(a,b,c,z)
      use petscdmdef
       DM a ! DM
       Vec b ! Vec
       Vec c ! Vec
        PetscErrorCode z
       end subroutine
      subroutine DMPlexGlobalToNaturalEnd(a,b,c,z)
      use petscdmdef
       DM a ! DM
       Vec b ! Vec
       Vec c ! Vec
        PetscErrorCode z
       end subroutine
      subroutine DMPlexNaturalToGlobalBegin(a,b,c,z)
      use petscdmdef
       DM a ! DM
       Vec b ! Vec
       Vec c ! Vec
        PetscErrorCode z
       end subroutine
      subroutine DMPlexNaturalToGlobalEnd(a,b,c,z)
      use petscdmdef
       DM a ! DM
       Vec b ! Vec
       Vec c ! Vec
        PetscErrorCode z
       end subroutine
