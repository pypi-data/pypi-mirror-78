# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import miscellaneous_pb2 as miscellaneous__pb2
from . import typing_and_online_pb2 as typing__and__online__pb2


class TypingAndOnlineStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Typing = channel.unary_unary(
                '/dialog.TypingAndOnline/Typing',
                request_serializer=typing__and__online__pb2.RequestTyping.SerializeToString,
                response_deserializer=miscellaneous__pb2.ResponseVoid.FromString,
                )
        self.StopTyping = channel.unary_unary(
                '/dialog.TypingAndOnline/StopTyping',
                request_serializer=typing__and__online__pb2.RequestStopTyping.SerializeToString,
                response_deserializer=miscellaneous__pb2.ResponseVoid.FromString,
                )
        self.SetOnline = channel.unary_unary(
                '/dialog.TypingAndOnline/SetOnline',
                request_serializer=typing__and__online__pb2.RequestSetOnline.SerializeToString,
                response_deserializer=miscellaneous__pb2.ResponseVoid.FromString,
                )
        self.PauseNotifications = channel.unary_unary(
                '/dialog.TypingAndOnline/PauseNotifications',
                request_serializer=typing__and__online__pb2.RequestPauseNotifications.SerializeToString,
                response_deserializer=miscellaneous__pb2.ResponseVoid.FromString,
                )
        self.RestoreNotifications = channel.unary_unary(
                '/dialog.TypingAndOnline/RestoreNotifications',
                request_serializer=typing__and__online__pb2.RequestRestoreNotifications.SerializeToString,
                response_deserializer=miscellaneous__pb2.ResponseVoid.FromString,
                )
        self.GetUserLastPresence = channel.unary_unary(
                '/dialog.TypingAndOnline/GetUserLastPresence',
                request_serializer=typing__and__online__pb2.RequestGetUserLastPresence.SerializeToString,
                response_deserializer=typing__and__online__pb2.ResponseUserLastPresence.FromString,
                )


class TypingAndOnlineServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Typing(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopTyping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetOnline(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PauseNotifications(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RestoreNotifications(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserLastPresence(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TypingAndOnlineServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Typing': grpc.unary_unary_rpc_method_handler(
                    servicer.Typing,
                    request_deserializer=typing__and__online__pb2.RequestTyping.FromString,
                    response_serializer=miscellaneous__pb2.ResponseVoid.SerializeToString,
            ),
            'StopTyping': grpc.unary_unary_rpc_method_handler(
                    servicer.StopTyping,
                    request_deserializer=typing__and__online__pb2.RequestStopTyping.FromString,
                    response_serializer=miscellaneous__pb2.ResponseVoid.SerializeToString,
            ),
            'SetOnline': grpc.unary_unary_rpc_method_handler(
                    servicer.SetOnline,
                    request_deserializer=typing__and__online__pb2.RequestSetOnline.FromString,
                    response_serializer=miscellaneous__pb2.ResponseVoid.SerializeToString,
            ),
            'PauseNotifications': grpc.unary_unary_rpc_method_handler(
                    servicer.PauseNotifications,
                    request_deserializer=typing__and__online__pb2.RequestPauseNotifications.FromString,
                    response_serializer=miscellaneous__pb2.ResponseVoid.SerializeToString,
            ),
            'RestoreNotifications': grpc.unary_unary_rpc_method_handler(
                    servicer.RestoreNotifications,
                    request_deserializer=typing__and__online__pb2.RequestRestoreNotifications.FromString,
                    response_serializer=miscellaneous__pb2.ResponseVoid.SerializeToString,
            ),
            'GetUserLastPresence': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserLastPresence,
                    request_deserializer=typing__and__online__pb2.RequestGetUserLastPresence.FromString,
                    response_serializer=typing__and__online__pb2.ResponseUserLastPresence.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dialog.TypingAndOnline', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TypingAndOnline(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Typing(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dialog.TypingAndOnline/Typing',
            typing__and__online__pb2.RequestTyping.SerializeToString,
            miscellaneous__pb2.ResponseVoid.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopTyping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dialog.TypingAndOnline/StopTyping',
            typing__and__online__pb2.RequestStopTyping.SerializeToString,
            miscellaneous__pb2.ResponseVoid.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetOnline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dialog.TypingAndOnline/SetOnline',
            typing__and__online__pb2.RequestSetOnline.SerializeToString,
            miscellaneous__pb2.ResponseVoid.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PauseNotifications(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dialog.TypingAndOnline/PauseNotifications',
            typing__and__online__pb2.RequestPauseNotifications.SerializeToString,
            miscellaneous__pb2.ResponseVoid.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RestoreNotifications(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dialog.TypingAndOnline/RestoreNotifications',
            typing__and__online__pb2.RequestRestoreNotifications.SerializeToString,
            miscellaneous__pb2.ResponseVoid.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserLastPresence(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dialog.TypingAndOnline/GetUserLastPresence',
            typing__and__online__pb2.RequestGetUserLastPresence.SerializeToString,
            typing__and__online__pb2.ResponseUserLastPresence.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
