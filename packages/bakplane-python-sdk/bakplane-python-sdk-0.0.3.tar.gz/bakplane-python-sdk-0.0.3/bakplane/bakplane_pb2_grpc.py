# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from bakplane import bakplane_pb2 as bakplane_dot_bakplane__pb2


class OpenAristosStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ApplyAdapter = channel.unary_unary(
                '/io.openaristos.OpenAristos/ApplyAdapter',
                request_serializer=bakplane_dot_bakplane__pb2.ApplyAdapterRequest.SerializeToString,
                response_deserializer=bakplane_dot_bakplane__pb2.ApplyAdapterResponse.FromString,
                )
        self.RetractAdapter = channel.unary_unary(
                '/io.openaristos.OpenAristos/RetractAdapter',
                request_serializer=bakplane_dot_bakplane__pb2.RetractAdapterRequest.SerializeToString,
                response_deserializer=bakplane_dot_bakplane__pb2.RetractAdapterResponse.FromString,
                )
        self.ListAdapter = channel.unary_unary(
                '/io.openaristos.OpenAristos/ListAdapter',
                request_serializer=bakplane_dot_bakplane__pb2.ListAdapterRequest.SerializeToString,
                response_deserializer=bakplane_dot_bakplane__pb2.ListAdapterResponse.FromString,
                )
        self.EnableAdapter = channel.unary_unary(
                '/io.openaristos.OpenAristos/EnableAdapter',
                request_serializer=bakplane_dot_bakplane__pb2.EnableAdapterRequest.SerializeToString,
                response_deserializer=bakplane_dot_bakplane__pb2.EnableAdapterResponse.FromString,
                )
        self.DisableAdapter = channel.unary_unary(
                '/io.openaristos.OpenAristos/DisableAdapter',
                request_serializer=bakplane_dot_bakplane__pb2.DisableAdapterRequest.SerializeToString,
                response_deserializer=bakplane_dot_bakplane__pb2.DisableAdapterResponse.FromString,
                )
        self.ResolveResource = channel.unary_stream(
                '/io.openaristos.OpenAristos/ResolveResource',
                request_serializer=bakplane_dot_bakplane__pb2.ResolveResourceRequest.SerializeToString,
                response_deserializer=bakplane_dot_bakplane__pb2.ResolveResourceResponse.FromString,
                )
        self.ResolveResourceIntent = channel.unary_unary(
                '/io.openaristos.OpenAristos/ResolveResourceIntent',
                request_serializer=bakplane_dot_bakplane__pb2.ResolveResourceRequest.SerializeToString,
                response_deserializer=bakplane_dot_bakplane__pb2.ResolveResourceIntentResponse.FromString,
                )
        self.ApplyLandingZone = channel.unary_unary(
                '/io.openaristos.OpenAristos/ApplyLandingZone',
                request_serializer=bakplane_dot_bakplane__pb2.ApplyLandingZoneRequest.SerializeToString,
                response_deserializer=bakplane_dot_bakplane__pb2.ApplyLandingZoneResponse.FromString,
                )
        self.RetractLandingZone = channel.unary_unary(
                '/io.openaristos.OpenAristos/RetractLandingZone',
                request_serializer=bakplane_dot_bakplane__pb2.RetractLandingZoneRequest.SerializeToString,
                response_deserializer=bakplane_dot_bakplane__pb2.RetractLandingZoneResponse.FromString,
                )
        self.ListLandingZone = channel.unary_unary(
                '/io.openaristos.OpenAristos/ListLandingZone',
                request_serializer=bakplane_dot_bakplane__pb2.ListLandingZoneRequest.SerializeToString,
                response_deserializer=bakplane_dot_bakplane__pb2.ListLandingZoneResponse.FromString,
                )
        self.EnableLandingZone = channel.unary_unary(
                '/io.openaristos.OpenAristos/EnableLandingZone',
                request_serializer=bakplane_dot_bakplane__pb2.EnableLandingZoneRequest.SerializeToString,
                response_deserializer=bakplane_dot_bakplane__pb2.EnableLandingZoneResponse.FromString,
                )
        self.DisableLandingZone = channel.unary_unary(
                '/io.openaristos.OpenAristos/DisableLandingZone',
                request_serializer=bakplane_dot_bakplane__pb2.DisableLandingZoneRequest.SerializeToString,
                response_deserializer=bakplane_dot_bakplane__pb2.DisableLandingZoneResponse.FromString,
                )
        self.ApplyOntology = channel.unary_unary(
                '/io.openaristos.OpenAristos/ApplyOntology',
                request_serializer=bakplane_dot_bakplane__pb2.ApplyOntologyRequest.SerializeToString,
                response_deserializer=bakplane_dot_bakplane__pb2.ApplyOntologyResponse.FromString,
                )
        self.RetractOntology = channel.unary_unary(
                '/io.openaristos.OpenAristos/RetractOntology',
                request_serializer=bakplane_dot_bakplane__pb2.RetractOntologyRequest.SerializeToString,
                response_deserializer=bakplane_dot_bakplane__pb2.RetractOntologyResponse.FromString,
                )
        self.ListOntology = channel.unary_unary(
                '/io.openaristos.OpenAristos/ListOntology',
                request_serializer=bakplane_dot_bakplane__pb2.ListOntologyRequest.SerializeToString,
                response_deserializer=bakplane_dot_bakplane__pb2.ListOntologyResponse.FromString,
                )
        self.ApplyExecutionEngine = channel.unary_unary(
                '/io.openaristos.OpenAristos/ApplyExecutionEngine',
                request_serializer=bakplane_dot_bakplane__pb2.ApplyExecutionEngineRequest.SerializeToString,
                response_deserializer=bakplane_dot_bakplane__pb2.ApplyExecutionEngineResponse.FromString,
                )
        self.ApplyWarehouse = channel.unary_unary(
                '/io.openaristos.OpenAristos/ApplyWarehouse',
                request_serializer=bakplane_dot_bakplane__pb2.ApplyWarehouseRequest.SerializeToString,
                response_deserializer=bakplane_dot_bakplane__pb2.ApplyWarehouseResponse.FromString,
                )
        self.RetractWarehouse = channel.unary_unary(
                '/io.openaristos.OpenAristos/RetractWarehouse',
                request_serializer=bakplane_dot_bakplane__pb2.RetractWarehouseRequest.SerializeToString,
                response_deserializer=bakplane_dot_bakplane__pb2.RetractWarehouseResponse.FromString,
                )
        self.ListWarehouse = channel.unary_unary(
                '/io.openaristos.OpenAristos/ListWarehouse',
                request_serializer=bakplane_dot_bakplane__pb2.ListWarehouseRequest.SerializeToString,
                response_deserializer=bakplane_dot_bakplane__pb2.ListWarehouseResponse.FromString,
                )
        self.EnableWarehouse = channel.unary_unary(
                '/io.openaristos.OpenAristos/EnableWarehouse',
                request_serializer=bakplane_dot_bakplane__pb2.EnableWarehouseRequest.SerializeToString,
                response_deserializer=bakplane_dot_bakplane__pb2.EnableWarehouseResponse.FromString,
                )
        self.DisableWarehouse = channel.unary_unary(
                '/io.openaristos.OpenAristos/DisableWarehouse',
                request_serializer=bakplane_dot_bakplane__pb2.DisableWarehouseRequest.SerializeToString,
                response_deserializer=bakplane_dot_bakplane__pb2.DisableWarehouseResponse.FromString,
                )
        self.ApplyMasteringEngine = channel.unary_unary(
                '/io.openaristos.OpenAristos/ApplyMasteringEngine',
                request_serializer=bakplane_dot_bakplane__pb2.ApplyMasteringEngineRequest.SerializeToString,
                response_deserializer=bakplane_dot_bakplane__pb2.ApplyMasteringEngineResponse.FromString,
                )
        self.CreateIngestionSession = channel.unary_unary(
                '/io.openaristos.OpenAristos/CreateIngestionSession',
                request_serializer=bakplane_dot_bakplane__pb2.CreateIngestionSessionRequest.SerializeToString,
                response_deserializer=bakplane_dot_bakplane__pb2.CreateIngestionSessionResponse.FromString,
                )
        self.ExecuteIngestionSession = channel.unary_unary(
                '/io.openaristos.OpenAristos/ExecuteIngestionSession',
                request_serializer=bakplane_dot_bakplane__pb2.ExecuteIngestionSessionRequest.SerializeToString,
                response_deserializer=bakplane_dot_bakplane__pb2.IngestionSessionStatusResponse.FromString,
                )
        self.GetIngestionSession = channel.unary_unary(
                '/io.openaristos.OpenAristos/GetIngestionSession',
                request_serializer=bakplane_dot_bakplane__pb2.GetIngestionSessionRequest.SerializeToString,
                response_deserializer=bakplane_dot_bakplane__pb2.IngestionSessionStatusResponse.FromString,
                )
        self.ResolveUniverse = channel.unary_stream(
                '/io.openaristos.OpenAristos/ResolveUniverse',
                request_serializer=bakplane_dot_bakplane__pb2.ResolveUniverseRequest.SerializeToString,
                response_deserializer=bakplane_dot_bakplane__pb2.MasterEntity.FromString,
                )
        self.MasterIngestionSession = channel.unary_unary(
                '/io.openaristos.OpenAristos/MasterIngestionSession',
                request_serializer=bakplane_dot_bakplane__pb2.MasterIngestionSessionRequest.SerializeToString,
                response_deserializer=bakplane_dot_bakplane__pb2.MasterIngestionSessionResponse.FromString,
                )
        self.PublishIngestionSessionResource = channel.unary_unary(
                '/io.openaristos.OpenAristos/PublishIngestionSessionResource',
                request_serializer=bakplane_dot_bakplane__pb2.PublishIngestionSessionResourceRequest.SerializeToString,
                response_deserializer=bakplane_dot_bakplane__pb2.PublishIngestionSessionResourceResponse.FromString,
                )
        self.PublishIngestionSessionResourceStatus = channel.unary_unary(
                '/io.openaristos.OpenAristos/PublishIngestionSessionResourceStatus',
                request_serializer=bakplane_dot_bakplane__pb2.PublishIngestionSessionResourceStatusRequest.SerializeToString,
                response_deserializer=bakplane_dot_bakplane__pb2.PublishIngestionSessionResourceStatusResponse.FromString,
                )


class OpenAristosServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ApplyAdapter(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetractAdapter(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAdapter(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EnableAdapter(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisableAdapter(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResolveResource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResolveResourceIntent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ApplyLandingZone(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetractLandingZone(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListLandingZone(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EnableLandingZone(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisableLandingZone(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ApplyOntology(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetractOntology(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListOntology(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ApplyExecutionEngine(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ApplyWarehouse(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetractWarehouse(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListWarehouse(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EnableWarehouse(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisableWarehouse(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ApplyMasteringEngine(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateIngestionSession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExecuteIngestionSession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetIngestionSession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResolveUniverse(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MasterIngestionSession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PublishIngestionSessionResource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PublishIngestionSessionResourceStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OpenAristosServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ApplyAdapter': grpc.unary_unary_rpc_method_handler(
                    servicer.ApplyAdapter,
                    request_deserializer=bakplane_dot_bakplane__pb2.ApplyAdapterRequest.FromString,
                    response_serializer=bakplane_dot_bakplane__pb2.ApplyAdapterResponse.SerializeToString,
            ),
            'RetractAdapter': grpc.unary_unary_rpc_method_handler(
                    servicer.RetractAdapter,
                    request_deserializer=bakplane_dot_bakplane__pb2.RetractAdapterRequest.FromString,
                    response_serializer=bakplane_dot_bakplane__pb2.RetractAdapterResponse.SerializeToString,
            ),
            'ListAdapter': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAdapter,
                    request_deserializer=bakplane_dot_bakplane__pb2.ListAdapterRequest.FromString,
                    response_serializer=bakplane_dot_bakplane__pb2.ListAdapterResponse.SerializeToString,
            ),
            'EnableAdapter': grpc.unary_unary_rpc_method_handler(
                    servicer.EnableAdapter,
                    request_deserializer=bakplane_dot_bakplane__pb2.EnableAdapterRequest.FromString,
                    response_serializer=bakplane_dot_bakplane__pb2.EnableAdapterResponse.SerializeToString,
            ),
            'DisableAdapter': grpc.unary_unary_rpc_method_handler(
                    servicer.DisableAdapter,
                    request_deserializer=bakplane_dot_bakplane__pb2.DisableAdapterRequest.FromString,
                    response_serializer=bakplane_dot_bakplane__pb2.DisableAdapterResponse.SerializeToString,
            ),
            'ResolveResource': grpc.unary_stream_rpc_method_handler(
                    servicer.ResolveResource,
                    request_deserializer=bakplane_dot_bakplane__pb2.ResolveResourceRequest.FromString,
                    response_serializer=bakplane_dot_bakplane__pb2.ResolveResourceResponse.SerializeToString,
            ),
            'ResolveResourceIntent': grpc.unary_unary_rpc_method_handler(
                    servicer.ResolveResourceIntent,
                    request_deserializer=bakplane_dot_bakplane__pb2.ResolveResourceRequest.FromString,
                    response_serializer=bakplane_dot_bakplane__pb2.ResolveResourceIntentResponse.SerializeToString,
            ),
            'ApplyLandingZone': grpc.unary_unary_rpc_method_handler(
                    servicer.ApplyLandingZone,
                    request_deserializer=bakplane_dot_bakplane__pb2.ApplyLandingZoneRequest.FromString,
                    response_serializer=bakplane_dot_bakplane__pb2.ApplyLandingZoneResponse.SerializeToString,
            ),
            'RetractLandingZone': grpc.unary_unary_rpc_method_handler(
                    servicer.RetractLandingZone,
                    request_deserializer=bakplane_dot_bakplane__pb2.RetractLandingZoneRequest.FromString,
                    response_serializer=bakplane_dot_bakplane__pb2.RetractLandingZoneResponse.SerializeToString,
            ),
            'ListLandingZone': grpc.unary_unary_rpc_method_handler(
                    servicer.ListLandingZone,
                    request_deserializer=bakplane_dot_bakplane__pb2.ListLandingZoneRequest.FromString,
                    response_serializer=bakplane_dot_bakplane__pb2.ListLandingZoneResponse.SerializeToString,
            ),
            'EnableLandingZone': grpc.unary_unary_rpc_method_handler(
                    servicer.EnableLandingZone,
                    request_deserializer=bakplane_dot_bakplane__pb2.EnableLandingZoneRequest.FromString,
                    response_serializer=bakplane_dot_bakplane__pb2.EnableLandingZoneResponse.SerializeToString,
            ),
            'DisableLandingZone': grpc.unary_unary_rpc_method_handler(
                    servicer.DisableLandingZone,
                    request_deserializer=bakplane_dot_bakplane__pb2.DisableLandingZoneRequest.FromString,
                    response_serializer=bakplane_dot_bakplane__pb2.DisableLandingZoneResponse.SerializeToString,
            ),
            'ApplyOntology': grpc.unary_unary_rpc_method_handler(
                    servicer.ApplyOntology,
                    request_deserializer=bakplane_dot_bakplane__pb2.ApplyOntologyRequest.FromString,
                    response_serializer=bakplane_dot_bakplane__pb2.ApplyOntologyResponse.SerializeToString,
            ),
            'RetractOntology': grpc.unary_unary_rpc_method_handler(
                    servicer.RetractOntology,
                    request_deserializer=bakplane_dot_bakplane__pb2.RetractOntologyRequest.FromString,
                    response_serializer=bakplane_dot_bakplane__pb2.RetractOntologyResponse.SerializeToString,
            ),
            'ListOntology': grpc.unary_unary_rpc_method_handler(
                    servicer.ListOntology,
                    request_deserializer=bakplane_dot_bakplane__pb2.ListOntologyRequest.FromString,
                    response_serializer=bakplane_dot_bakplane__pb2.ListOntologyResponse.SerializeToString,
            ),
            'ApplyExecutionEngine': grpc.unary_unary_rpc_method_handler(
                    servicer.ApplyExecutionEngine,
                    request_deserializer=bakplane_dot_bakplane__pb2.ApplyExecutionEngineRequest.FromString,
                    response_serializer=bakplane_dot_bakplane__pb2.ApplyExecutionEngineResponse.SerializeToString,
            ),
            'ApplyWarehouse': grpc.unary_unary_rpc_method_handler(
                    servicer.ApplyWarehouse,
                    request_deserializer=bakplane_dot_bakplane__pb2.ApplyWarehouseRequest.FromString,
                    response_serializer=bakplane_dot_bakplane__pb2.ApplyWarehouseResponse.SerializeToString,
            ),
            'RetractWarehouse': grpc.unary_unary_rpc_method_handler(
                    servicer.RetractWarehouse,
                    request_deserializer=bakplane_dot_bakplane__pb2.RetractWarehouseRequest.FromString,
                    response_serializer=bakplane_dot_bakplane__pb2.RetractWarehouseResponse.SerializeToString,
            ),
            'ListWarehouse': grpc.unary_unary_rpc_method_handler(
                    servicer.ListWarehouse,
                    request_deserializer=bakplane_dot_bakplane__pb2.ListWarehouseRequest.FromString,
                    response_serializer=bakplane_dot_bakplane__pb2.ListWarehouseResponse.SerializeToString,
            ),
            'EnableWarehouse': grpc.unary_unary_rpc_method_handler(
                    servicer.EnableWarehouse,
                    request_deserializer=bakplane_dot_bakplane__pb2.EnableWarehouseRequest.FromString,
                    response_serializer=bakplane_dot_bakplane__pb2.EnableWarehouseResponse.SerializeToString,
            ),
            'DisableWarehouse': grpc.unary_unary_rpc_method_handler(
                    servicer.DisableWarehouse,
                    request_deserializer=bakplane_dot_bakplane__pb2.DisableWarehouseRequest.FromString,
                    response_serializer=bakplane_dot_bakplane__pb2.DisableWarehouseResponse.SerializeToString,
            ),
            'ApplyMasteringEngine': grpc.unary_unary_rpc_method_handler(
                    servicer.ApplyMasteringEngine,
                    request_deserializer=bakplane_dot_bakplane__pb2.ApplyMasteringEngineRequest.FromString,
                    response_serializer=bakplane_dot_bakplane__pb2.ApplyMasteringEngineResponse.SerializeToString,
            ),
            'CreateIngestionSession': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateIngestionSession,
                    request_deserializer=bakplane_dot_bakplane__pb2.CreateIngestionSessionRequest.FromString,
                    response_serializer=bakplane_dot_bakplane__pb2.CreateIngestionSessionResponse.SerializeToString,
            ),
            'ExecuteIngestionSession': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecuteIngestionSession,
                    request_deserializer=bakplane_dot_bakplane__pb2.ExecuteIngestionSessionRequest.FromString,
                    response_serializer=bakplane_dot_bakplane__pb2.IngestionSessionStatusResponse.SerializeToString,
            ),
            'GetIngestionSession': grpc.unary_unary_rpc_method_handler(
                    servicer.GetIngestionSession,
                    request_deserializer=bakplane_dot_bakplane__pb2.GetIngestionSessionRequest.FromString,
                    response_serializer=bakplane_dot_bakplane__pb2.IngestionSessionStatusResponse.SerializeToString,
            ),
            'ResolveUniverse': grpc.unary_stream_rpc_method_handler(
                    servicer.ResolveUniverse,
                    request_deserializer=bakplane_dot_bakplane__pb2.ResolveUniverseRequest.FromString,
                    response_serializer=bakplane_dot_bakplane__pb2.MasterEntity.SerializeToString,
            ),
            'MasterIngestionSession': grpc.unary_unary_rpc_method_handler(
                    servicer.MasterIngestionSession,
                    request_deserializer=bakplane_dot_bakplane__pb2.MasterIngestionSessionRequest.FromString,
                    response_serializer=bakplane_dot_bakplane__pb2.MasterIngestionSessionResponse.SerializeToString,
            ),
            'PublishIngestionSessionResource': grpc.unary_unary_rpc_method_handler(
                    servicer.PublishIngestionSessionResource,
                    request_deserializer=bakplane_dot_bakplane__pb2.PublishIngestionSessionResourceRequest.FromString,
                    response_serializer=bakplane_dot_bakplane__pb2.PublishIngestionSessionResourceResponse.SerializeToString,
            ),
            'PublishIngestionSessionResourceStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.PublishIngestionSessionResourceStatus,
                    request_deserializer=bakplane_dot_bakplane__pb2.PublishIngestionSessionResourceStatusRequest.FromString,
                    response_serializer=bakplane_dot_bakplane__pb2.PublishIngestionSessionResourceStatusResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'io.openaristos.OpenAristos', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class OpenAristos(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ApplyAdapter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.openaristos.OpenAristos/ApplyAdapter',
            bakplane_dot_bakplane__pb2.ApplyAdapterRequest.SerializeToString,
            bakplane_dot_bakplane__pb2.ApplyAdapterResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetractAdapter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.openaristos.OpenAristos/RetractAdapter',
            bakplane_dot_bakplane__pb2.RetractAdapterRequest.SerializeToString,
            bakplane_dot_bakplane__pb2.RetractAdapterResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAdapter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.openaristos.OpenAristos/ListAdapter',
            bakplane_dot_bakplane__pb2.ListAdapterRequest.SerializeToString,
            bakplane_dot_bakplane__pb2.ListAdapterResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EnableAdapter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.openaristos.OpenAristos/EnableAdapter',
            bakplane_dot_bakplane__pb2.EnableAdapterRequest.SerializeToString,
            bakplane_dot_bakplane__pb2.EnableAdapterResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DisableAdapter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.openaristos.OpenAristos/DisableAdapter',
            bakplane_dot_bakplane__pb2.DisableAdapterRequest.SerializeToString,
            bakplane_dot_bakplane__pb2.DisableAdapterResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResolveResource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/io.openaristos.OpenAristos/ResolveResource',
            bakplane_dot_bakplane__pb2.ResolveResourceRequest.SerializeToString,
            bakplane_dot_bakplane__pb2.ResolveResourceResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResolveResourceIntent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.openaristos.OpenAristos/ResolveResourceIntent',
            bakplane_dot_bakplane__pb2.ResolveResourceRequest.SerializeToString,
            bakplane_dot_bakplane__pb2.ResolveResourceIntentResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ApplyLandingZone(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.openaristos.OpenAristos/ApplyLandingZone',
            bakplane_dot_bakplane__pb2.ApplyLandingZoneRequest.SerializeToString,
            bakplane_dot_bakplane__pb2.ApplyLandingZoneResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetractLandingZone(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.openaristos.OpenAristos/RetractLandingZone',
            bakplane_dot_bakplane__pb2.RetractLandingZoneRequest.SerializeToString,
            bakplane_dot_bakplane__pb2.RetractLandingZoneResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListLandingZone(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.openaristos.OpenAristos/ListLandingZone',
            bakplane_dot_bakplane__pb2.ListLandingZoneRequest.SerializeToString,
            bakplane_dot_bakplane__pb2.ListLandingZoneResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EnableLandingZone(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.openaristos.OpenAristos/EnableLandingZone',
            bakplane_dot_bakplane__pb2.EnableLandingZoneRequest.SerializeToString,
            bakplane_dot_bakplane__pb2.EnableLandingZoneResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DisableLandingZone(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.openaristos.OpenAristos/DisableLandingZone',
            bakplane_dot_bakplane__pb2.DisableLandingZoneRequest.SerializeToString,
            bakplane_dot_bakplane__pb2.DisableLandingZoneResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ApplyOntology(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.openaristos.OpenAristos/ApplyOntology',
            bakplane_dot_bakplane__pb2.ApplyOntologyRequest.SerializeToString,
            bakplane_dot_bakplane__pb2.ApplyOntologyResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetractOntology(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.openaristos.OpenAristos/RetractOntology',
            bakplane_dot_bakplane__pb2.RetractOntologyRequest.SerializeToString,
            bakplane_dot_bakplane__pb2.RetractOntologyResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListOntology(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.openaristos.OpenAristos/ListOntology',
            bakplane_dot_bakplane__pb2.ListOntologyRequest.SerializeToString,
            bakplane_dot_bakplane__pb2.ListOntologyResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ApplyExecutionEngine(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.openaristos.OpenAristos/ApplyExecutionEngine',
            bakplane_dot_bakplane__pb2.ApplyExecutionEngineRequest.SerializeToString,
            bakplane_dot_bakplane__pb2.ApplyExecutionEngineResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ApplyWarehouse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.openaristos.OpenAristos/ApplyWarehouse',
            bakplane_dot_bakplane__pb2.ApplyWarehouseRequest.SerializeToString,
            bakplane_dot_bakplane__pb2.ApplyWarehouseResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetractWarehouse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.openaristos.OpenAristos/RetractWarehouse',
            bakplane_dot_bakplane__pb2.RetractWarehouseRequest.SerializeToString,
            bakplane_dot_bakplane__pb2.RetractWarehouseResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListWarehouse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.openaristos.OpenAristos/ListWarehouse',
            bakplane_dot_bakplane__pb2.ListWarehouseRequest.SerializeToString,
            bakplane_dot_bakplane__pb2.ListWarehouseResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EnableWarehouse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.openaristos.OpenAristos/EnableWarehouse',
            bakplane_dot_bakplane__pb2.EnableWarehouseRequest.SerializeToString,
            bakplane_dot_bakplane__pb2.EnableWarehouseResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DisableWarehouse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.openaristos.OpenAristos/DisableWarehouse',
            bakplane_dot_bakplane__pb2.DisableWarehouseRequest.SerializeToString,
            bakplane_dot_bakplane__pb2.DisableWarehouseResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ApplyMasteringEngine(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.openaristos.OpenAristos/ApplyMasteringEngine',
            bakplane_dot_bakplane__pb2.ApplyMasteringEngineRequest.SerializeToString,
            bakplane_dot_bakplane__pb2.ApplyMasteringEngineResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateIngestionSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.openaristos.OpenAristos/CreateIngestionSession',
            bakplane_dot_bakplane__pb2.CreateIngestionSessionRequest.SerializeToString,
            bakplane_dot_bakplane__pb2.CreateIngestionSessionResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExecuteIngestionSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.openaristos.OpenAristos/ExecuteIngestionSession',
            bakplane_dot_bakplane__pb2.ExecuteIngestionSessionRequest.SerializeToString,
            bakplane_dot_bakplane__pb2.IngestionSessionStatusResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetIngestionSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.openaristos.OpenAristos/GetIngestionSession',
            bakplane_dot_bakplane__pb2.GetIngestionSessionRequest.SerializeToString,
            bakplane_dot_bakplane__pb2.IngestionSessionStatusResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResolveUniverse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/io.openaristos.OpenAristos/ResolveUniverse',
            bakplane_dot_bakplane__pb2.ResolveUniverseRequest.SerializeToString,
            bakplane_dot_bakplane__pb2.MasterEntity.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MasterIngestionSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.openaristos.OpenAristos/MasterIngestionSession',
            bakplane_dot_bakplane__pb2.MasterIngestionSessionRequest.SerializeToString,
            bakplane_dot_bakplane__pb2.MasterIngestionSessionResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PublishIngestionSessionResource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.openaristos.OpenAristos/PublishIngestionSessionResource',
            bakplane_dot_bakplane__pb2.PublishIngestionSessionResourceRequest.SerializeToString,
            bakplane_dot_bakplane__pb2.PublishIngestionSessionResourceResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PublishIngestionSessionResourceStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.openaristos.OpenAristos/PublishIngestionSessionResourceStatus',
            bakplane_dot_bakplane__pb2.PublishIngestionSessionResourceStatusRequest.SerializeToString,
            bakplane_dot_bakplane__pb2.PublishIngestionSessionResourceStatusResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
