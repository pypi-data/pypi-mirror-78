# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: bakplane/bakplane.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client

if typing.TYPE_CHECKING:
    import grpclib.server

import google.protobuf.timestamp_pb2
import bakplane.bakplane_pb2


class OpenAristosBase(abc.ABC):
    @abc.abstractmethod
    async def ApplyAdapter(
        self,
        stream: "grpclib.server.Stream[bakplane.bakplane_pb2.ApplyAdapterRequest, bakplane.bakplane_pb2.ApplyAdapterResponse]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def RetractAdapter(
        self,
        stream: "grpclib.server.Stream[bakplane.bakplane_pb2.RetractAdapterRequest, bakplane.bakplane_pb2.RetractAdapterResponse]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def ListAdapter(
        self,
        stream: "grpclib.server.Stream[bakplane.bakplane_pb2.ListAdapterRequest, bakplane.bakplane_pb2.ListAdapterResponse]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def EnableAdapter(
        self,
        stream: "grpclib.server.Stream[bakplane.bakplane_pb2.EnableAdapterRequest, bakplane.bakplane_pb2.EnableAdapterResponse]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def DisableAdapter(
        self,
        stream: "grpclib.server.Stream[bakplane.bakplane_pb2.DisableAdapterRequest, bakplane.bakplane_pb2.DisableAdapterResponse]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def ResolveResource(
        self,
        stream: "grpclib.server.Stream[bakplane.bakplane_pb2.ResolveResourceRequest, bakplane.bakplane_pb2.ResolveResourceResponse]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def ResolveResourceIntent(
        self,
        stream: "grpclib.server.Stream[bakplane.bakplane_pb2.ResolveResourceRequest, bakplane.bakplane_pb2.ResolveResourceIntentResponse]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def ApplyLandingZone(
        self,
        stream: "grpclib.server.Stream[bakplane.bakplane_pb2.ApplyLandingZoneRequest, bakplane.bakplane_pb2.ApplyLandingZoneResponse]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def RetractLandingZone(
        self,
        stream: "grpclib.server.Stream[bakplane.bakplane_pb2.RetractLandingZoneRequest, bakplane.bakplane_pb2.RetractLandingZoneResponse]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def ListLandingZone(
        self,
        stream: "grpclib.server.Stream[bakplane.bakplane_pb2.ListLandingZoneRequest, bakplane.bakplane_pb2.ListLandingZoneResponse]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def EnableLandingZone(
        self,
        stream: "grpclib.server.Stream[bakplane.bakplane_pb2.EnableLandingZoneRequest, bakplane.bakplane_pb2.EnableLandingZoneResponse]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def DisableLandingZone(
        self,
        stream: "grpclib.server.Stream[bakplane.bakplane_pb2.DisableLandingZoneRequest, bakplane.bakplane_pb2.DisableLandingZoneResponse]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def ApplyOntology(
        self,
        stream: "grpclib.server.Stream[bakplane.bakplane_pb2.ApplyOntologyRequest, bakplane.bakplane_pb2.ApplyOntologyResponse]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def RetractOntology(
        self,
        stream: "grpclib.server.Stream[bakplane.bakplane_pb2.RetractOntologyRequest, bakplane.bakplane_pb2.RetractOntologyResponse]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def ListOntology(
        self,
        stream: "grpclib.server.Stream[bakplane.bakplane_pb2.ListOntologyRequest, bakplane.bakplane_pb2.ListOntologyResponse]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def ApplyExecutionEngine(
        self,
        stream: "grpclib.server.Stream[bakplane.bakplane_pb2.ApplyExecutionEngineRequest, bakplane.bakplane_pb2.ApplyExecutionEngineResponse]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def ApplyWarehouse(
        self,
        stream: "grpclib.server.Stream[bakplane.bakplane_pb2.ApplyWarehouseRequest, bakplane.bakplane_pb2.ApplyWarehouseResponse]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def RetractWarehouse(
        self,
        stream: "grpclib.server.Stream[bakplane.bakplane_pb2.RetractWarehouseRequest, bakplane.bakplane_pb2.RetractWarehouseResponse]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def ListWarehouse(
        self,
        stream: "grpclib.server.Stream[bakplane.bakplane_pb2.ListWarehouseRequest, bakplane.bakplane_pb2.ListWarehouseResponse]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def EnableWarehouse(
        self,
        stream: "grpclib.server.Stream[bakplane.bakplane_pb2.EnableWarehouseRequest, bakplane.bakplane_pb2.EnableWarehouseResponse]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def DisableWarehouse(
        self,
        stream: "grpclib.server.Stream[bakplane.bakplane_pb2.DisableWarehouseRequest, bakplane.bakplane_pb2.DisableWarehouseResponse]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def ApplyMasteringEngine(
        self,
        stream: "grpclib.server.Stream[bakplane.bakplane_pb2.ApplyMasteringEngineRequest, bakplane.bakplane_pb2.ApplyMasteringEngineResponse]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def CreateIngestionSession(
        self,
        stream: "grpclib.server.Stream[bakplane.bakplane_pb2.CreateIngestionSessionRequest, bakplane.bakplane_pb2.CreateIngestionSessionResponse]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def ExecuteIngestionSession(
        self,
        stream: "grpclib.server.Stream[bakplane.bakplane_pb2.ExecuteIngestionSessionRequest, bakplane.bakplane_pb2.IngestionSessionStatusResponse]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def GetIngestionSession(
        self,
        stream: "grpclib.server.Stream[bakplane.bakplane_pb2.GetIngestionSessionRequest, bakplane.bakplane_pb2.IngestionSessionStatusResponse]",
    ) -> None:
        pass

    @abc.abstractmethod
    async def ResolveUniverse(
        self,
        stream: "grpclib.server.Stream[bakplane.bakplane_pb2.ResolveUniverseRequest, bakplane.bakplane_pb2.MasterEntity]",
    ) -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            "/io.openaristos.OpenAristos/ApplyAdapter": grpclib.const.Handler(
                self.ApplyAdapter,
                grpclib.const.Cardinality.UNARY_UNARY,
                bakplane.bakplane_pb2.ApplyAdapterRequest,
                bakplane.bakplane_pb2.ApplyAdapterResponse,
            ),
            "/io.openaristos.OpenAristos/RetractAdapter": grpclib.const.Handler(
                self.RetractAdapter,
                grpclib.const.Cardinality.UNARY_UNARY,
                bakplane.bakplane_pb2.RetractAdapterRequest,
                bakplane.bakplane_pb2.RetractAdapterResponse,
            ),
            "/io.openaristos.OpenAristos/ListAdapter": grpclib.const.Handler(
                self.ListAdapter,
                grpclib.const.Cardinality.UNARY_UNARY,
                bakplane.bakplane_pb2.ListAdapterRequest,
                bakplane.bakplane_pb2.ListAdapterResponse,
            ),
            "/io.openaristos.OpenAristos/EnableAdapter": grpclib.const.Handler(
                self.EnableAdapter,
                grpclib.const.Cardinality.UNARY_UNARY,
                bakplane.bakplane_pb2.EnableAdapterRequest,
                bakplane.bakplane_pb2.EnableAdapterResponse,
            ),
            "/io.openaristos.OpenAristos/DisableAdapter": grpclib.const.Handler(
                self.DisableAdapter,
                grpclib.const.Cardinality.UNARY_UNARY,
                bakplane.bakplane_pb2.DisableAdapterRequest,
                bakplane.bakplane_pb2.DisableAdapterResponse,
            ),
            "/io.openaristos.OpenAristos/ResolveResource": grpclib.const.Handler(
                self.ResolveResource,
                grpclib.const.Cardinality.UNARY_STREAM,
                bakplane.bakplane_pb2.ResolveResourceRequest,
                bakplane.bakplane_pb2.ResolveResourceResponse,
            ),
            "/io.openaristos.OpenAristos/ResolveResourceIntent": grpclib.const.Handler(
                self.ResolveResourceIntent,
                grpclib.const.Cardinality.UNARY_UNARY,
                bakplane.bakplane_pb2.ResolveResourceRequest,
                bakplane.bakplane_pb2.ResolveResourceIntentResponse,
            ),
            "/io.openaristos.OpenAristos/ApplyLandingZone": grpclib.const.Handler(
                self.ApplyLandingZone,
                grpclib.const.Cardinality.UNARY_UNARY,
                bakplane.bakplane_pb2.ApplyLandingZoneRequest,
                bakplane.bakplane_pb2.ApplyLandingZoneResponse,
            ),
            "/io.openaristos.OpenAristos/RetractLandingZone": grpclib.const.Handler(
                self.RetractLandingZone,
                grpclib.const.Cardinality.UNARY_UNARY,
                bakplane.bakplane_pb2.RetractLandingZoneRequest,
                bakplane.bakplane_pb2.RetractLandingZoneResponse,
            ),
            "/io.openaristos.OpenAristos/ListLandingZone": grpclib.const.Handler(
                self.ListLandingZone,
                grpclib.const.Cardinality.UNARY_UNARY,
                bakplane.bakplane_pb2.ListLandingZoneRequest,
                bakplane.bakplane_pb2.ListLandingZoneResponse,
            ),
            "/io.openaristos.OpenAristos/EnableLandingZone": grpclib.const.Handler(
                self.EnableLandingZone,
                grpclib.const.Cardinality.UNARY_UNARY,
                bakplane.bakplane_pb2.EnableLandingZoneRequest,
                bakplane.bakplane_pb2.EnableLandingZoneResponse,
            ),
            "/io.openaristos.OpenAristos/DisableLandingZone": grpclib.const.Handler(
                self.DisableLandingZone,
                grpclib.const.Cardinality.UNARY_UNARY,
                bakplane.bakplane_pb2.DisableLandingZoneRequest,
                bakplane.bakplane_pb2.DisableLandingZoneResponse,
            ),
            "/io.openaristos.OpenAristos/ApplyOntology": grpclib.const.Handler(
                self.ApplyOntology,
                grpclib.const.Cardinality.UNARY_UNARY,
                bakplane.bakplane_pb2.ApplyOntologyRequest,
                bakplane.bakplane_pb2.ApplyOntologyResponse,
            ),
            "/io.openaristos.OpenAristos/RetractOntology": grpclib.const.Handler(
                self.RetractOntology,
                grpclib.const.Cardinality.UNARY_UNARY,
                bakplane.bakplane_pb2.RetractOntologyRequest,
                bakplane.bakplane_pb2.RetractOntologyResponse,
            ),
            "/io.openaristos.OpenAristos/ListOntology": grpclib.const.Handler(
                self.ListOntology,
                grpclib.const.Cardinality.UNARY_UNARY,
                bakplane.bakplane_pb2.ListOntologyRequest,
                bakplane.bakplane_pb2.ListOntologyResponse,
            ),
            "/io.openaristos.OpenAristos/ApplyExecutionEngine": grpclib.const.Handler(
                self.ApplyExecutionEngine,
                grpclib.const.Cardinality.UNARY_UNARY,
                bakplane.bakplane_pb2.ApplyExecutionEngineRequest,
                bakplane.bakplane_pb2.ApplyExecutionEngineResponse,
            ),
            "/io.openaristos.OpenAristos/ApplyWarehouse": grpclib.const.Handler(
                self.ApplyWarehouse,
                grpclib.const.Cardinality.UNARY_UNARY,
                bakplane.bakplane_pb2.ApplyWarehouseRequest,
                bakplane.bakplane_pb2.ApplyWarehouseResponse,
            ),
            "/io.openaristos.OpenAristos/RetractWarehouse": grpclib.const.Handler(
                self.RetractWarehouse,
                grpclib.const.Cardinality.UNARY_UNARY,
                bakplane.bakplane_pb2.RetractWarehouseRequest,
                bakplane.bakplane_pb2.RetractWarehouseResponse,
            ),
            "/io.openaristos.OpenAristos/ListWarehouse": grpclib.const.Handler(
                self.ListWarehouse,
                grpclib.const.Cardinality.UNARY_UNARY,
                bakplane.bakplane_pb2.ListWarehouseRequest,
                bakplane.bakplane_pb2.ListWarehouseResponse,
            ),
            "/io.openaristos.OpenAristos/EnableWarehouse": grpclib.const.Handler(
                self.EnableWarehouse,
                grpclib.const.Cardinality.UNARY_UNARY,
                bakplane.bakplane_pb2.EnableWarehouseRequest,
                bakplane.bakplane_pb2.EnableWarehouseResponse,
            ),
            "/io.openaristos.OpenAristos/DisableWarehouse": grpclib.const.Handler(
                self.DisableWarehouse,
                grpclib.const.Cardinality.UNARY_UNARY,
                bakplane.bakplane_pb2.DisableWarehouseRequest,
                bakplane.bakplane_pb2.DisableWarehouseResponse,
            ),
            "/io.openaristos.OpenAristos/ApplyMasteringEngine": grpclib.const.Handler(
                self.ApplyMasteringEngine,
                grpclib.const.Cardinality.UNARY_UNARY,
                bakplane.bakplane_pb2.ApplyMasteringEngineRequest,
                bakplane.bakplane_pb2.ApplyMasteringEngineResponse,
            ),
            "/io.openaristos.OpenAristos/CreateIngestionSession": grpclib.const.Handler(
                self.CreateIngestionSession,
                grpclib.const.Cardinality.UNARY_UNARY,
                bakplane.bakplane_pb2.CreateIngestionSessionRequest,
                bakplane.bakplane_pb2.CreateIngestionSessionResponse,
            ),
            "/io.openaristos.OpenAristos/ExecuteIngestionSession": grpclib.const.Handler(
                self.ExecuteIngestionSession,
                grpclib.const.Cardinality.UNARY_UNARY,
                bakplane.bakplane_pb2.ExecuteIngestionSessionRequest,
                bakplane.bakplane_pb2.IngestionSessionStatusResponse,
            ),
            "/io.openaristos.OpenAristos/GetIngestionSession": grpclib.const.Handler(
                self.GetIngestionSession,
                grpclib.const.Cardinality.UNARY_UNARY,
                bakplane.bakplane_pb2.GetIngestionSessionRequest,
                bakplane.bakplane_pb2.IngestionSessionStatusResponse,
            ),
            "/io.openaristos.OpenAristos/ResolveUniverse": grpclib.const.Handler(
                self.ResolveUniverse,
                grpclib.const.Cardinality.UNARY_STREAM,
                bakplane.bakplane_pb2.ResolveUniverseRequest,
                bakplane.bakplane_pb2.MasterEntity,
            ),
        }


class OpenAristosStub:
    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.ApplyAdapter = grpclib.client.UnaryUnaryMethod(
            channel,
            "/io.openaristos.OpenAristos/ApplyAdapter",
            bakplane.bakplane_pb2.ApplyAdapterRequest,
            bakplane.bakplane_pb2.ApplyAdapterResponse,
        )
        self.RetractAdapter = grpclib.client.UnaryUnaryMethod(
            channel,
            "/io.openaristos.OpenAristos/RetractAdapter",
            bakplane.bakplane_pb2.RetractAdapterRequest,
            bakplane.bakplane_pb2.RetractAdapterResponse,
        )
        self.ListAdapter = grpclib.client.UnaryUnaryMethod(
            channel,
            "/io.openaristos.OpenAristos/ListAdapter",
            bakplane.bakplane_pb2.ListAdapterRequest,
            bakplane.bakplane_pb2.ListAdapterResponse,
        )
        self.EnableAdapter = grpclib.client.UnaryUnaryMethod(
            channel,
            "/io.openaristos.OpenAristos/EnableAdapter",
            bakplane.bakplane_pb2.EnableAdapterRequest,
            bakplane.bakplane_pb2.EnableAdapterResponse,
        )
        self.DisableAdapter = grpclib.client.UnaryUnaryMethod(
            channel,
            "/io.openaristos.OpenAristos/DisableAdapter",
            bakplane.bakplane_pb2.DisableAdapterRequest,
            bakplane.bakplane_pb2.DisableAdapterResponse,
        )
        self.ResolveResource = grpclib.client.UnaryStreamMethod(
            channel,
            "/io.openaristos.OpenAristos/ResolveResource",
            bakplane.bakplane_pb2.ResolveResourceRequest,
            bakplane.bakplane_pb2.ResolveResourceResponse,
        )
        self.ResolveResourceIntent = grpclib.client.UnaryUnaryMethod(
            channel,
            "/io.openaristos.OpenAristos/ResolveResourceIntent",
            bakplane.bakplane_pb2.ResolveResourceRequest,
            bakplane.bakplane_pb2.ResolveResourceIntentResponse,
        )
        self.ApplyLandingZone = grpclib.client.UnaryUnaryMethod(
            channel,
            "/io.openaristos.OpenAristos/ApplyLandingZone",
            bakplane.bakplane_pb2.ApplyLandingZoneRequest,
            bakplane.bakplane_pb2.ApplyLandingZoneResponse,
        )
        self.RetractLandingZone = grpclib.client.UnaryUnaryMethod(
            channel,
            "/io.openaristos.OpenAristos/RetractLandingZone",
            bakplane.bakplane_pb2.RetractLandingZoneRequest,
            bakplane.bakplane_pb2.RetractLandingZoneResponse,
        )
        self.ListLandingZone = grpclib.client.UnaryUnaryMethod(
            channel,
            "/io.openaristos.OpenAristos/ListLandingZone",
            bakplane.bakplane_pb2.ListLandingZoneRequest,
            bakplane.bakplane_pb2.ListLandingZoneResponse,
        )
        self.EnableLandingZone = grpclib.client.UnaryUnaryMethod(
            channel,
            "/io.openaristos.OpenAristos/EnableLandingZone",
            bakplane.bakplane_pb2.EnableLandingZoneRequest,
            bakplane.bakplane_pb2.EnableLandingZoneResponse,
        )
        self.DisableLandingZone = grpclib.client.UnaryUnaryMethod(
            channel,
            "/io.openaristos.OpenAristos/DisableLandingZone",
            bakplane.bakplane_pb2.DisableLandingZoneRequest,
            bakplane.bakplane_pb2.DisableLandingZoneResponse,
        )
        self.ApplyOntology = grpclib.client.UnaryUnaryMethod(
            channel,
            "/io.openaristos.OpenAristos/ApplyOntology",
            bakplane.bakplane_pb2.ApplyOntologyRequest,
            bakplane.bakplane_pb2.ApplyOntologyResponse,
        )
        self.RetractOntology = grpclib.client.UnaryUnaryMethod(
            channel,
            "/io.openaristos.OpenAristos/RetractOntology",
            bakplane.bakplane_pb2.RetractOntologyRequest,
            bakplane.bakplane_pb2.RetractOntologyResponse,
        )
        self.ListOntology = grpclib.client.UnaryUnaryMethod(
            channel,
            "/io.openaristos.OpenAristos/ListOntology",
            bakplane.bakplane_pb2.ListOntologyRequest,
            bakplane.bakplane_pb2.ListOntologyResponse,
        )
        self.ApplyExecutionEngine = grpclib.client.UnaryUnaryMethod(
            channel,
            "/io.openaristos.OpenAristos/ApplyExecutionEngine",
            bakplane.bakplane_pb2.ApplyExecutionEngineRequest,
            bakplane.bakplane_pb2.ApplyExecutionEngineResponse,
        )
        self.ApplyWarehouse = grpclib.client.UnaryUnaryMethod(
            channel,
            "/io.openaristos.OpenAristos/ApplyWarehouse",
            bakplane.bakplane_pb2.ApplyWarehouseRequest,
            bakplane.bakplane_pb2.ApplyWarehouseResponse,
        )
        self.RetractWarehouse = grpclib.client.UnaryUnaryMethod(
            channel,
            "/io.openaristos.OpenAristos/RetractWarehouse",
            bakplane.bakplane_pb2.RetractWarehouseRequest,
            bakplane.bakplane_pb2.RetractWarehouseResponse,
        )
        self.ListWarehouse = grpclib.client.UnaryUnaryMethod(
            channel,
            "/io.openaristos.OpenAristos/ListWarehouse",
            bakplane.bakplane_pb2.ListWarehouseRequest,
            bakplane.bakplane_pb2.ListWarehouseResponse,
        )
        self.EnableWarehouse = grpclib.client.UnaryUnaryMethod(
            channel,
            "/io.openaristos.OpenAristos/EnableWarehouse",
            bakplane.bakplane_pb2.EnableWarehouseRequest,
            bakplane.bakplane_pb2.EnableWarehouseResponse,
        )
        self.DisableWarehouse = grpclib.client.UnaryUnaryMethod(
            channel,
            "/io.openaristos.OpenAristos/DisableWarehouse",
            bakplane.bakplane_pb2.DisableWarehouseRequest,
            bakplane.bakplane_pb2.DisableWarehouseResponse,
        )
        self.ApplyMasteringEngine = grpclib.client.UnaryUnaryMethod(
            channel,
            "/io.openaristos.OpenAristos/ApplyMasteringEngine",
            bakplane.bakplane_pb2.ApplyMasteringEngineRequest,
            bakplane.bakplane_pb2.ApplyMasteringEngineResponse,
        )
        self.CreateIngestionSession = grpclib.client.UnaryUnaryMethod(
            channel,
            "/io.openaristos.OpenAristos/CreateIngestionSession",
            bakplane.bakplane_pb2.CreateIngestionSessionRequest,
            bakplane.bakplane_pb2.CreateIngestionSessionResponse,
        )
        self.ExecuteIngestionSession = grpclib.client.UnaryUnaryMethod(
            channel,
            "/io.openaristos.OpenAristos/ExecuteIngestionSession",
            bakplane.bakplane_pb2.ExecuteIngestionSessionRequest,
            bakplane.bakplane_pb2.IngestionSessionStatusResponse,
        )
        self.GetIngestionSession = grpclib.client.UnaryUnaryMethod(
            channel,
            "/io.openaristos.OpenAristos/GetIngestionSession",
            bakplane.bakplane_pb2.GetIngestionSessionRequest,
            bakplane.bakplane_pb2.IngestionSessionStatusResponse,
        )
        self.ResolveUniverse = grpclib.client.UnaryStreamMethod(
            channel,
            "/io.openaristos.OpenAristos/ResolveUniverse",
            bakplane.bakplane_pb2.ResolveUniverseRequest,
            bakplane.bakplane_pb2.MasterEntity,
        )
