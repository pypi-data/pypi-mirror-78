# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Dict, List, Mapping, Optional, Tuple, Union
from .. import _utilities, _tables
from . import outputs

__all__ = [
    'ServiceLogConfig',
    'ServiceVpcConfig',
    'GetFunctionsFunctionResult',
    'GetServicesServiceResult',
    'GetServicesServiceLogConfigResult',
    'GetServicesServiceVpcConfigResult',
    'GetTriggersTriggerResult',
    'GetZonesZoneResult',
]

@pulumi.output_type
class ServiceLogConfig(dict):
    def __init__(__self__, *,
                 logstore: str,
                 project: str):
        """
        :param str logstore: The log store name of Logs service.
        :param str project: The project name of Logs service.
        """
        pulumi.set(__self__, "logstore", logstore)
        pulumi.set(__self__, "project", project)

    @property
    @pulumi.getter
    def logstore(self) -> str:
        """
        The log store name of Logs service.
        """
        return pulumi.get(self, "logstore")

    @property
    @pulumi.getter
    def project(self) -> str:
        """
        The project name of Logs service.
        """
        return pulumi.get(self, "project")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ServiceVpcConfig(dict):
    def __init__(__self__, *,
                 security_group_id: str,
                 vswitch_ids: List[str],
                 vpc_id: Optional[str] = None):
        """
        :param str security_group_id: A security group ID associated with the FC service.
        :param List[str] vswitch_ids: A list of vswitch IDs associated with the FC service.
        """
        pulumi.set(__self__, "security_group_id", security_group_id)
        pulumi.set(__self__, "vswitch_ids", vswitch_ids)
        if vpc_id is not None:
            pulumi.set(__self__, "vpc_id", vpc_id)

    @property
    @pulumi.getter(name="securityGroupId")
    def security_group_id(self) -> str:
        """
        A security group ID associated with the FC service.
        """
        return pulumi.get(self, "security_group_id")

    @property
    @pulumi.getter(name="vswitchIds")
    def vswitch_ids(self) -> List[str]:
        """
        A list of vswitch IDs associated with the FC service.
        """
        return pulumi.get(self, "vswitch_ids")

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> Optional[str]:
        return pulumi.get(self, "vpc_id")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetFunctionsFunctionResult(dict):
    def __init__(__self__, *,
                 code_checksum: str,
                 code_size: float,
                 creation_time: str,
                 description: str,
                 environment_variables: Mapping[str, Any],
                 handler: str,
                 id: str,
                 last_modification_time: str,
                 memory_size: float,
                 name: str,
                 runtime: str,
                 timeout: float):
        """
        :param str code_checksum: Checksum (crc64) of the function code.
        :param float code_size: Function code size in bytes.
        :param str creation_time: Function creation time.
        :param str description: Function description.
        :param Mapping[str, Any] environment_variables: A map that defines environment variables for the function.
        :param str handler: Function [entry point](https://www.alibabacloud.com/help/doc-detail/62213.htm) in the code.
        :param str id: Function ID.
        :param str last_modification_time: Function last modification time.
        :param float memory_size: Amount of memory in MB the function can use at runtime.
        :param str name: Function name.
        :param str runtime: Function runtime. The list of possible values is [available here](https://www.alibabacloud.com/help/doc-detail/52077.htm).
        :param float timeout: Maximum amount of time the function can run in seconds.
        """
        pulumi.set(__self__, "code_checksum", code_checksum)
        pulumi.set(__self__, "code_size", code_size)
        pulumi.set(__self__, "creation_time", creation_time)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "environment_variables", environment_variables)
        pulumi.set(__self__, "handler", handler)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "last_modification_time", last_modification_time)
        pulumi.set(__self__, "memory_size", memory_size)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "runtime", runtime)
        pulumi.set(__self__, "timeout", timeout)

    @property
    @pulumi.getter(name="codeChecksum")
    def code_checksum(self) -> str:
        """
        Checksum (crc64) of the function code.
        """
        return pulumi.get(self, "code_checksum")

    @property
    @pulumi.getter(name="codeSize")
    def code_size(self) -> float:
        """
        Function code size in bytes.
        """
        return pulumi.get(self, "code_size")

    @property
    @pulumi.getter(name="creationTime")
    def creation_time(self) -> str:
        """
        Function creation time.
        """
        return pulumi.get(self, "creation_time")

    @property
    @pulumi.getter
    def description(self) -> str:
        """
        Function description.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="environmentVariables")
    def environment_variables(self) -> Mapping[str, Any]:
        """
        A map that defines environment variables for the function.
        """
        return pulumi.get(self, "environment_variables")

    @property
    @pulumi.getter
    def handler(self) -> str:
        """
        Function [entry point](https://www.alibabacloud.com/help/doc-detail/62213.htm) in the code.
        """
        return pulumi.get(self, "handler")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        Function ID.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="lastModificationTime")
    def last_modification_time(self) -> str:
        """
        Function last modification time.
        """
        return pulumi.get(self, "last_modification_time")

    @property
    @pulumi.getter(name="memorySize")
    def memory_size(self) -> float:
        """
        Amount of memory in MB the function can use at runtime.
        """
        return pulumi.get(self, "memory_size")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Function name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def runtime(self) -> str:
        """
        Function runtime. The list of possible values is [available here](https://www.alibabacloud.com/help/doc-detail/52077.htm).
        """
        return pulumi.get(self, "runtime")

    @property
    @pulumi.getter
    def timeout(self) -> float:
        """
        Maximum amount of time the function can run in seconds.
        """
        return pulumi.get(self, "timeout")


@pulumi.output_type
class GetServicesServiceResult(dict):
    def __init__(__self__, *,
                 creation_time: str,
                 description: str,
                 id: str,
                 internet_access: bool,
                 last_modification_time: str,
                 log_config: 'outputs.GetServicesServiceLogConfigResult',
                 name: str,
                 role: str,
                 vpc_config: 'outputs.GetServicesServiceVpcConfigResult'):
        """
        :param str creation_time: FC service creation time.
        :param str description: FC service description.
        :param str id: FC service ID.
        :param bool internet_access: Indicate whether the service can access to internet or not.
        :param str last_modification_time: FC service last modification time.
        :param 'GetServicesServiceLogConfigArgs' log_config: A list of one element containing information about the associated log store. It contains the following attributes:
        :param str name: FC service name.
        :param str role: FC service role ARN.
        :param 'GetServicesServiceVpcConfigArgs' vpc_config: A list of one element containing information about accessible VPC resources. It contains the following attributes:
        """
        pulumi.set(__self__, "creation_time", creation_time)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "internet_access", internet_access)
        pulumi.set(__self__, "last_modification_time", last_modification_time)
        pulumi.set(__self__, "log_config", log_config)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "role", role)
        pulumi.set(__self__, "vpc_config", vpc_config)

    @property
    @pulumi.getter(name="creationTime")
    def creation_time(self) -> str:
        """
        FC service creation time.
        """
        return pulumi.get(self, "creation_time")

    @property
    @pulumi.getter
    def description(self) -> str:
        """
        FC service description.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        FC service ID.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="internetAccess")
    def internet_access(self) -> bool:
        """
        Indicate whether the service can access to internet or not.
        """
        return pulumi.get(self, "internet_access")

    @property
    @pulumi.getter(name="lastModificationTime")
    def last_modification_time(self) -> str:
        """
        FC service last modification time.
        """
        return pulumi.get(self, "last_modification_time")

    @property
    @pulumi.getter(name="logConfig")
    def log_config(self) -> 'outputs.GetServicesServiceLogConfigResult':
        """
        A list of one element containing information about the associated log store. It contains the following attributes:
        """
        return pulumi.get(self, "log_config")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        FC service name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def role(self) -> str:
        """
        FC service role ARN.
        """
        return pulumi.get(self, "role")

    @property
    @pulumi.getter(name="vpcConfig")
    def vpc_config(self) -> 'outputs.GetServicesServiceVpcConfigResult':
        """
        A list of one element containing information about accessible VPC resources. It contains the following attributes:
        """
        return pulumi.get(self, "vpc_config")


@pulumi.output_type
class GetServicesServiceLogConfigResult(dict):
    def __init__(__self__, *,
                 logstore: str,
                 project: str):
        """
        :param str logstore: Log Service store name.
        :param str project: Log Service project name.
        """
        pulumi.set(__self__, "logstore", logstore)
        pulumi.set(__self__, "project", project)

    @property
    @pulumi.getter
    def logstore(self) -> str:
        """
        Log Service store name.
        """
        return pulumi.get(self, "logstore")

    @property
    @pulumi.getter
    def project(self) -> str:
        """
        Log Service project name.
        """
        return pulumi.get(self, "project")


@pulumi.output_type
class GetServicesServiceVpcConfigResult(dict):
    def __init__(__self__, *,
                 security_group_id: str,
                 vpc_id: str,
                 vswitch_ids: List[str]):
        """
        :param str security_group_id: Associated security group ID.
        :param str vpc_id: Associated VPC ID.
        :param List[str] vswitch_ids: Associated VSwitch IDs.
        """
        pulumi.set(__self__, "security_group_id", security_group_id)
        pulumi.set(__self__, "vpc_id", vpc_id)
        pulumi.set(__self__, "vswitch_ids", vswitch_ids)

    @property
    @pulumi.getter(name="securityGroupId")
    def security_group_id(self) -> str:
        """
        Associated security group ID.
        """
        return pulumi.get(self, "security_group_id")

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> str:
        """
        Associated VPC ID.
        """
        return pulumi.get(self, "vpc_id")

    @property
    @pulumi.getter(name="vswitchIds")
    def vswitch_ids(self) -> List[str]:
        """
        Associated VSwitch IDs.
        """
        return pulumi.get(self, "vswitch_ids")


@pulumi.output_type
class GetTriggersTriggerResult(dict):
    def __init__(__self__, *,
                 config: str,
                 creation_time: str,
                 id: str,
                 invocation_role: str,
                 last_modification_time: str,
                 name: str,
                 source_arn: str,
                 type: str):
        """
        :param str config: JSON-encoded trigger configuration. See [Configure triggers and events](https://www.alibabacloud.com/help/doc-detail/70140.htm) for more details.
        :param str creation_time: FC trigger creation time.
        :param str id: FC trigger ID.
        :param str invocation_role: RAM role arn attached to the Function Compute trigger. Role used by the event source to call the function. The value format is "acs:ram::$account-id:role/$role-name". See [Create a trigger](https://www.alibabacloud.com/help/doc-detail/53102.htm) for more details.
        :param str last_modification_time: FC trigger last modification time.
        :param str name: FC trigger name.
        :param str source_arn: Event source resource address. See [Create a trigger](https://www.alibabacloud.com/help/doc-detail/53102.htm) for more details.
        :param str type: Type of the trigger. Valid values: `oss`, `log`, `timer`, `http` and `mns_topic`.
        """
        pulumi.set(__self__, "config", config)
        pulumi.set(__self__, "creation_time", creation_time)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "invocation_role", invocation_role)
        pulumi.set(__self__, "last_modification_time", last_modification_time)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "source_arn", source_arn)
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def config(self) -> str:
        """
        JSON-encoded trigger configuration. See [Configure triggers and events](https://www.alibabacloud.com/help/doc-detail/70140.htm) for more details.
        """
        return pulumi.get(self, "config")

    @property
    @pulumi.getter(name="creationTime")
    def creation_time(self) -> str:
        """
        FC trigger creation time.
        """
        return pulumi.get(self, "creation_time")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        FC trigger ID.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="invocationRole")
    def invocation_role(self) -> str:
        """
        RAM role arn attached to the Function Compute trigger. Role used by the event source to call the function. The value format is "acs:ram::$account-id:role/$role-name". See [Create a trigger](https://www.alibabacloud.com/help/doc-detail/53102.htm) for more details.
        """
        return pulumi.get(self, "invocation_role")

    @property
    @pulumi.getter(name="lastModificationTime")
    def last_modification_time(self) -> str:
        """
        FC trigger last modification time.
        """
        return pulumi.get(self, "last_modification_time")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        FC trigger name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="sourceArn")
    def source_arn(self) -> str:
        """
        Event source resource address. See [Create a trigger](https://www.alibabacloud.com/help/doc-detail/53102.htm) for more details.
        """
        return pulumi.get(self, "source_arn")

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        Type of the trigger. Valid values: `oss`, `log`, `timer`, `http` and `mns_topic`.
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class GetZonesZoneResult(dict):
    def __init__(__self__, *,
                 id: str):
        """
        :param str id: ID of the zone.
        """
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        ID of the zone.
        """
        return pulumi.get(self, "id")


