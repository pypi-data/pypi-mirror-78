# tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
minversion = 3.10
envlist =
    style
    tests_start
    py{38,37,36}
    pytests_merge
    coverage_report
skip_missing_interpreters = True
isolated_build = True
usedevelop = False
download = False


[testenv]
# settings in this category apply to all other testenv, if not overwritten
depends = tests_start
deps = -r requirements/tests.txt
commands =
    {envpython} -m pytest \
      --cov --cov-append --cov-report='' \
      --junit-xml=reports/pytests/{envname}.xml -o junit_suite_name={envname} \
      {posargs}

[testenv:tests_start]
depends =
skip_install = True
deps = -r requirements/tests.txt
commands =
    {envpython} -m coverage erase
    {envpython} -c 'import shutil; shutil.rmtree("reports", True);'

[testenv:coverage_report]
depends =
    tests_start
    py{38,37,36}
skip_install = True
deps = -r requirements/tests.txt
commands =
    {envpython} -m coverage xml
    {envpython} -m coverage report

[testenv:pytests_merge]
depends =
    tests_start
    py{38,37,36}
skip_install = True
deps = -r requirements/tests.txt
commands =
    {envpython} \
    -c 'from glob import glob; \
        from os.path import join; \
        from junitparser import JUnitXml; \
        INPUTS = glob(join("reports", "pytests", "*.xml")); \
        OUTPUT = join("reports", "pytests.xml"); \
        result = sum((JUnitXml.fromfile(path) for path in INPUTS), JUnitXml()); \
        result.update_statistics(); \
        result.write(OUTPUT); \
    '

[testenv:style]
depends =
skip_install = True
deps = -r requirements/style.txt
commands =
    {envpython} -m flake8
    {envpython} -m mypy

[testenv:version]
depends =
skip_install = True
deps =
commands =
    {envpython} bin/test_version.py {env:NP_VERSION_EXPECTED}
