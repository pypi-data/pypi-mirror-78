# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import _utilities, _tables


class GetAuthoritiesSetResult:
    """
    A collection of values returned by getAuthoritiesSet.
    """
    def __init__(__self__, authorities=None, contract=None, id=None):
        if authorities and not isinstance(authorities, list):
            raise TypeError("Expected argument 'authorities' to be a list")
        __self__.authorities = authorities
        if contract and not isinstance(contract, str):
            raise TypeError("Expected argument 'contract' to be a str")
        __self__.contract = contract
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        __self__.id = id
        """
        The provider-assigned unique ID for this managed resource.
        """


class AwaitableGetAuthoritiesSetResult(GetAuthoritiesSetResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAuthoritiesSetResult(
            authorities=self.authorities,
            contract=self.contract,
            id=self.id)


def get_authorities_set(contract=None, opts=None):
    """
    Use `edgedns.getAuthoritiesSet` datasource to retrieve a contracts authorities set for use when creating new zones.

    ## Example Usage
    ### Basic usage:

    ```python
    import pulumi
    import pulumi_akamai as akamai

    example = akamai.edgedns.get_authorities_set(contract="ctr_xxxxx")
    ```


    :param str contract: â€” (Required) The contract ID.
    """
    __args__ = dict()
    __args__['contract'] = contract
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('akamai:edgedns/getAuthoritiesSet:getAuthoritiesSet', __args__, opts=opts).value

    return AwaitableGetAuthoritiesSetResult(
        authorities=__ret__.get('authorities'),
        contract=__ret__.get('contract'),
        id=__ret__.get('id'))
