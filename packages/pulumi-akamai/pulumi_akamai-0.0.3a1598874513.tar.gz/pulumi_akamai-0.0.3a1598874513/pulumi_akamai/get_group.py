# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import _utilities, _tables


class GetGroupResult:
    """
    A collection of values returned by getGroup.
    """
    def __init__(__self__, contract=None, id=None, name=None):
        if contract and not isinstance(contract, str):
            raise TypeError("Expected argument 'contract' to be a str")
        __self__.contract = contract
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        __self__.id = id
        """
        The provider-assigned unique ID for this managed resource.
        """
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        __self__.name = name


class AwaitableGetGroupResult(GetGroupResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetGroupResult(
            contract=self.contract,
            id=self.id,
            name=self.name)


def get_group(contract=None, name=None, opts=None):
    """
    Use `getGroup` data source to retrieve a group id.

    ## Example Usage


    :param str contract: — (Optional) The contract ID
    :param str name: — (Required) The group name.
    """
    __args__ = dict()
    __args__['contract'] = contract
    __args__['name'] = name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('akamai:index/getGroup:getGroup', __args__, opts=opts).value

    return AwaitableGetGroupResult(
        contract=__ret__.get('contract'),
        id=__ret__.get('id'),
        name=__ret__.get('name'))
