# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import _utilities, _tables


class Provider(pulumi.ProviderResource):
    def __init__(__self__, resource_name, opts=None, dns=None, dns_section=None, edgerc=None, gtm_section=None, gtms=None, papi_section=None, properties=None, property_section=None, __props__=None, __name__=None, __opts__=None):
        """
        The provider type for the akamai package. By default, resources use package-wide configuration
        settings, however an explicit `Provider` instance may be created and passed during resource
        construction to achieve fine-grained programmatic control over provider settings. See the
        [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.

        The **dns** object supports the following:

          * `access_token` (`pulumi.Input[str]`)
          * `client_secret` (`pulumi.Input[str]`)
          * `client_token` (`pulumi.Input[str]`)
          * `host` (`pulumi.Input[str]`)
          * `max_body` (`pulumi.Input[float]`)

        The **gtms** object supports the following:

          * `access_token` (`pulumi.Input[str]`)
          * `client_secret` (`pulumi.Input[str]`)
          * `client_token` (`pulumi.Input[str]`)
          * `host` (`pulumi.Input[str]`)
          * `max_body` (`pulumi.Input[float]`)

        The **properties** object supports the following:

          * `access_token` (`pulumi.Input[str]`)
          * `client_secret` (`pulumi.Input[str]`)
          * `client_token` (`pulumi.Input[str]`)
          * `host` (`pulumi.Input[str]`)
          * `max_body` (`pulumi.Input[float]`)
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['dns'] = pulumi.Output.from_input(dns).apply(json.dumps) if dns is not None else None
            __props__['dns_section'] = dns_section
            __props__['edgerc'] = edgerc
            __props__['gtm_section'] = gtm_section
            __props__['gtms'] = pulumi.Output.from_input(gtms).apply(json.dumps) if gtms is not None else None
            __props__['papi_section'] = papi_section
            __props__['properties'] = pulumi.Output.from_input(properties).apply(json.dumps) if properties is not None else None
            __props__['property_section'] = property_section
        super(Provider, __self__).__init__(
            'akamai',
            resource_name,
            __props__,
            opts)

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
