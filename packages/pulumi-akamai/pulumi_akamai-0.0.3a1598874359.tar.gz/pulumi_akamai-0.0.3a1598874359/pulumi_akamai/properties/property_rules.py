# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import _utilities, _tables


class PropertyRules(pulumi.CustomResource):
    json: pulumi.Output[str]
    """
    JSON Rule representation
    """
    rules: pulumi.Output[list]
    variables: pulumi.Output[str]
    def __init__(__self__, resource_name, opts=None, rules=None, variables=None, __props__=None, __name__=None, __opts__=None):
        """
        Create a PropertyRules resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.

        The **rules** object supports the following:

          * `behaviors` (`pulumi.Input[list]`)
            * `name` (`pulumi.Input[str]`)
            * `options` (`pulumi.Input[list]`)
              * `key` (`pulumi.Input[str]`)
              * `value` (`pulumi.Input[str]`)
              * `values` (`pulumi.Input[list]`)

          * `criteriaMatch` (`pulumi.Input[str]`)
          * `is_secure` (`pulumi.Input[bool]`)
          * `rules` (`pulumi.Input[list]`)
            * `behaviors` (`pulumi.Input[list]`)
              * `name` (`pulumi.Input[str]`)
              * `options` (`pulumi.Input[list]`)
                * `key` (`pulumi.Input[str]`)
                * `value` (`pulumi.Input[str]`)
                * `values` (`pulumi.Input[list]`)

            * `comment` (`pulumi.Input[str]`)
            * `criteriaMatch` (`pulumi.Input[str]`)
            * `criterias` (`pulumi.Input[list]`)
              * `name` (`pulumi.Input[str]`)
              * `options` (`pulumi.Input[list]`)
                * `key` (`pulumi.Input[str]`)
                * `value` (`pulumi.Input[str]`)
                * `values` (`pulumi.Input[list]`)

            * `name` (`pulumi.Input[str]`)
            * `rules` (`pulumi.Input[list]`)
              * `behaviors` (`pulumi.Input[list]`)
                * `name` (`pulumi.Input[str]`)
                * `options` (`pulumi.Input[list]`)
                  * `key` (`pulumi.Input[str]`)
                  * `value` (`pulumi.Input[str]`)
                  * `values` (`pulumi.Input[list]`)

              * `comment` (`pulumi.Input[str]`)
              * `criteriaMatch` (`pulumi.Input[str]`)
              * `criterias` (`pulumi.Input[list]`)
                * `name` (`pulumi.Input[str]`)
                * `options` (`pulumi.Input[list]`)
                  * `key` (`pulumi.Input[str]`)
                  * `value` (`pulumi.Input[str]`)
                  * `values` (`pulumi.Input[list]`)

              * `name` (`pulumi.Input[str]`)
              * `rules` (`pulumi.Input[list]`)
                * `behaviors` (`pulumi.Input[list]`)
                  * `name` (`pulumi.Input[str]`)
                  * `options` (`pulumi.Input[list]`)
                    * `key` (`pulumi.Input[str]`)
                    * `value` (`pulumi.Input[str]`)
                    * `values` (`pulumi.Input[list]`)

                * `comment` (`pulumi.Input[str]`)
                * `criteriaMatch` (`pulumi.Input[str]`)
                * `criterias` (`pulumi.Input[list]`)
                  * `name` (`pulumi.Input[str]`)
                  * `options` (`pulumi.Input[list]`)
                    * `key` (`pulumi.Input[str]`)
                    * `value` (`pulumi.Input[str]`)
                    * `values` (`pulumi.Input[list]`)

                * `name` (`pulumi.Input[str]`)
                * `rules` (`pulumi.Input[list]`)
                  * `behaviors` (`pulumi.Input[list]`)
                    * `name` (`pulumi.Input[str]`)
                    * `options` (`pulumi.Input[list]`)
                      * `key` (`pulumi.Input[str]`)
                      * `value` (`pulumi.Input[str]`)
                      * `values` (`pulumi.Input[list]`)

                  * `comment` (`pulumi.Input[str]`)
                  * `criteriaMatch` (`pulumi.Input[str]`)
                  * `criterias` (`pulumi.Input[list]`)
                    * `name` (`pulumi.Input[str]`)
                    * `options` (`pulumi.Input[list]`)
                      * `key` (`pulumi.Input[str]`)
                      * `value` (`pulumi.Input[str]`)
                      * `values` (`pulumi.Input[list]`)

                  * `name` (`pulumi.Input[str]`)

          * `variables` (`pulumi.Input[list]`)
            * `description` (`pulumi.Input[str]`)
            * `hidden` (`pulumi.Input[bool]`)
            * `name` (`pulumi.Input[str]`)
            * `sensitive` (`pulumi.Input[bool]`)
            * `value` (`pulumi.Input[str]`)
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['rules'] = rules
            __props__['variables'] = variables
            __props__['json'] = None
        super(PropertyRules, __self__).__init__(
            'akamai:properties/propertyRules:PropertyRules',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, json=None, rules=None, variables=None):
        """
        Get an existing PropertyRules resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] json: JSON Rule representation

        The **rules** object supports the following:

          * `behaviors` (`pulumi.Input[list]`)
            * `name` (`pulumi.Input[str]`)
            * `options` (`pulumi.Input[list]`)
              * `key` (`pulumi.Input[str]`)
              * `value` (`pulumi.Input[str]`)
              * `values` (`pulumi.Input[list]`)

          * `criteriaMatch` (`pulumi.Input[str]`)
          * `is_secure` (`pulumi.Input[bool]`)
          * `rules` (`pulumi.Input[list]`)
            * `behaviors` (`pulumi.Input[list]`)
              * `name` (`pulumi.Input[str]`)
              * `options` (`pulumi.Input[list]`)
                * `key` (`pulumi.Input[str]`)
                * `value` (`pulumi.Input[str]`)
                * `values` (`pulumi.Input[list]`)

            * `comment` (`pulumi.Input[str]`)
            * `criteriaMatch` (`pulumi.Input[str]`)
            * `criterias` (`pulumi.Input[list]`)
              * `name` (`pulumi.Input[str]`)
              * `options` (`pulumi.Input[list]`)
                * `key` (`pulumi.Input[str]`)
                * `value` (`pulumi.Input[str]`)
                * `values` (`pulumi.Input[list]`)

            * `name` (`pulumi.Input[str]`)
            * `rules` (`pulumi.Input[list]`)
              * `behaviors` (`pulumi.Input[list]`)
                * `name` (`pulumi.Input[str]`)
                * `options` (`pulumi.Input[list]`)
                  * `key` (`pulumi.Input[str]`)
                  * `value` (`pulumi.Input[str]`)
                  * `values` (`pulumi.Input[list]`)

              * `comment` (`pulumi.Input[str]`)
              * `criteriaMatch` (`pulumi.Input[str]`)
              * `criterias` (`pulumi.Input[list]`)
                * `name` (`pulumi.Input[str]`)
                * `options` (`pulumi.Input[list]`)
                  * `key` (`pulumi.Input[str]`)
                  * `value` (`pulumi.Input[str]`)
                  * `values` (`pulumi.Input[list]`)

              * `name` (`pulumi.Input[str]`)
              * `rules` (`pulumi.Input[list]`)
                * `behaviors` (`pulumi.Input[list]`)
                  * `name` (`pulumi.Input[str]`)
                  * `options` (`pulumi.Input[list]`)
                    * `key` (`pulumi.Input[str]`)
                    * `value` (`pulumi.Input[str]`)
                    * `values` (`pulumi.Input[list]`)

                * `comment` (`pulumi.Input[str]`)
                * `criteriaMatch` (`pulumi.Input[str]`)
                * `criterias` (`pulumi.Input[list]`)
                  * `name` (`pulumi.Input[str]`)
                  * `options` (`pulumi.Input[list]`)
                    * `key` (`pulumi.Input[str]`)
                    * `value` (`pulumi.Input[str]`)
                    * `values` (`pulumi.Input[list]`)

                * `name` (`pulumi.Input[str]`)
                * `rules` (`pulumi.Input[list]`)
                  * `behaviors` (`pulumi.Input[list]`)
                    * `name` (`pulumi.Input[str]`)
                    * `options` (`pulumi.Input[list]`)
                      * `key` (`pulumi.Input[str]`)
                      * `value` (`pulumi.Input[str]`)
                      * `values` (`pulumi.Input[list]`)

                  * `comment` (`pulumi.Input[str]`)
                  * `criteriaMatch` (`pulumi.Input[str]`)
                  * `criterias` (`pulumi.Input[list]`)
                    * `name` (`pulumi.Input[str]`)
                    * `options` (`pulumi.Input[list]`)
                      * `key` (`pulumi.Input[str]`)
                      * `value` (`pulumi.Input[str]`)
                      * `values` (`pulumi.Input[list]`)

                  * `name` (`pulumi.Input[str]`)

          * `variables` (`pulumi.Input[list]`)
            * `description` (`pulumi.Input[str]`)
            * `hidden` (`pulumi.Input[bool]`)
            * `name` (`pulumi.Input[str]`)
            * `sensitive` (`pulumi.Input[bool]`)
            * `value` (`pulumi.Input[str]`)
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["json"] = json
        __props__["rules"] = rules
        __props__["variables"] = variables
        return PropertyRules(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
