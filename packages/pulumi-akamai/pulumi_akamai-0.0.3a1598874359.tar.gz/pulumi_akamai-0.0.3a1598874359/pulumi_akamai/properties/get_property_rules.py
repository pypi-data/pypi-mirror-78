# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import _utilities, _tables


class GetPropertyRulesResult:
    """
    A collection of values returned by getPropertyRules.
    """
    def __init__(__self__, id=None, json=None, rules=None, variables=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        __self__.id = id
        """
        The provider-assigned unique ID for this managed resource.
        """
        if json and not isinstance(json, str):
            raise TypeError("Expected argument 'json' to be a str")
        __self__.json = json
        if rules and not isinstance(rules, list):
            raise TypeError("Expected argument 'rules' to be a list")
        __self__.rules = rules
        if variables and not isinstance(variables, str):
            raise TypeError("Expected argument 'variables' to be a str")
        __self__.variables = variables


class AwaitableGetPropertyRulesResult(GetPropertyRulesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetPropertyRulesResult(
            id=self.id,
            json=self.json,
            rules=self.rules,
            variables=self.variables)


def get_property_rules(rules=None, variables=None, opts=None):
    """
    The `properties.PropertyRules` data source allows you to configure a nested block of property rules, criteria, and behaviors. A property’s main functionality is encapsulated in its set of rules and rules are composed of the matches and the behavior that applies under those matches.

    ## Example Usage
    ### Basic usage:

    ```python
    import pulumi
    import pulumi_akamai as akamai

    example_property_rules = akamai.properties.get_property_rules(rules=[{
        "behaviors": [{
            "name": "downstreamCache",
            "option": [{
                "key": "behavior",
                "value": "TUNNEL_ORIGIN",
            }],
        }],
        "rules": [{
            "name": "Performance",
            "rule": [{
                "behavior": [{
                    "name": "adaptiveImageCompression",
                    "option": [
                        {
                            "key": "tier1MobileCompressionMethod",
                            "value": "COMPRESS",
                        },
                        {
                            "key": "tier1MobileCompressionValue",
                            "value": "80",
                        },
                        {
                            "key": "tier2MobileCompressionMethod",
                            "value": "COMPRESS",
                        },
                    ],
                }],
                "name": "JPEG Images",
            }],
        }],
    }])
    example_property = akamai.properties.Property("exampleProperty", rules=example_property_rules.json)
    ```



    The **rules** object supports the following:

      * `behaviors` (`list`) - — (Optional) One or more behaviors to apply to requests that match.
        * `name` (`str`) - — (Required) The name of the behavior.
        * `options` (`list`) - — (Optional) One or more options for the behavior.
          * `key` (`str`) - — (Required) The option name.
          * `value` (`str`) - — (Optional) A single value for the option.
          * `values` (`list`) - — (Optional) An array of values for the option.

      * `criteriaMatch` (`str`)
      * `is_secure` (`bool`) - — (Optional) Whether the property is a secure (Enhanced TLS) property or not (top-level only).
      * `rules` (`list`) - — (Optional) Child rules (may be nested five levels deep).
        * `behaviors` (`list`) - — (Optional) One or more behaviors to apply to requests that match.
          * `name` (`str`) - — (Required) The name of the behavior.
          * `options` (`list`) - — (Optional) One or more options for the behavior.
            * `key` (`str`) - — (Required) The option name.
            * `value` (`str`) - — (Optional) A single value for the option.
            * `values` (`list`) - — (Optional) An array of values for the option.

        * `comment` (`str`)
        * `criteriaMatch` (`str`)
        * `criterias` (`list`) - — (Optional) One or more criteria to match requests on.
          * `name` (`str`) - — (Required) The name of the behavior.
          * `options` (`list`) - — (Optional) One or more options for the behavior.
            * `key` (`str`) - — (Required) The option name.
            * `value` (`str`) - — (Optional) A single value for the option.
            * `values` (`list`) - — (Optional) An array of values for the option.

        * `name` (`str`) - — (Required) The name of the behavior.
        * `rules` (`list`) - — (Optional) Child rules (may be nested five levels deep).
          * `behaviors` (`list`) - — (Optional) One or more behaviors to apply to requests that match.
            * `name` (`str`) - — (Required) The name of the behavior.
            * `options` (`list`) - — (Optional) One or more options for the behavior.
              * `key` (`str`) - — (Required) The option name.
              * `value` (`str`) - — (Optional) A single value for the option.
              * `values` (`list`) - — (Optional) An array of values for the option.

          * `comment` (`str`)
          * `criteriaMatch` (`str`)
          * `criterias` (`list`) - — (Optional) One or more criteria to match requests on.
            * `name` (`str`) - — (Required) The name of the behavior.
            * `options` (`list`) - — (Optional) One or more options for the behavior.
              * `key` (`str`) - — (Required) The option name.
              * `value` (`str`) - — (Optional) A single value for the option.
              * `values` (`list`) - — (Optional) An array of values for the option.

          * `name` (`str`) - — (Required) The name of the behavior.
          * `rules` (`list`) - — (Optional) Child rules (may be nested five levels deep).
            * `behaviors` (`list`) - — (Optional) One or more behaviors to apply to requests that match.
              * `name` (`str`) - — (Required) The name of the behavior.
              * `options` (`list`) - — (Optional) One or more options for the behavior.
                * `key` (`str`) - — (Required) The option name.
                * `value` (`str`) - — (Optional) A single value for the option.
                * `values` (`list`) - — (Optional) An array of values for the option.

            * `comment` (`str`)
            * `criteriaMatch` (`str`)
            * `criterias` (`list`) - — (Optional) One or more criteria to match requests on.
              * `name` (`str`) - — (Required) The name of the behavior.
              * `options` (`list`) - — (Optional) One or more options for the behavior.
                * `key` (`str`) - — (Required) The option name.
                * `value` (`str`) - — (Optional) A single value for the option.
                * `values` (`list`) - — (Optional) An array of values for the option.

            * `name` (`str`) - — (Required) The name of the behavior.
            * `rules` (`list`) - — (Optional) Child rules (may be nested five levels deep).
              * `behaviors` (`list`) - — (Optional) One or more behaviors to apply to requests that match.
                * `name` (`str`) - — (Required) The name of the behavior.
                * `options` (`list`) - — (Optional) One or more options for the behavior.
                  * `key` (`str`) - — (Required) The option name.
                  * `value` (`str`) - — (Optional) A single value for the option.
                  * `values` (`list`) - — (Optional) An array of values for the option.

              * `comment` (`str`)
              * `criteriaMatch` (`str`)
              * `criterias` (`list`) - — (Optional) One or more criteria to match requests on.
                * `name` (`str`) - — (Required) The name of the behavior.
                * `options` (`list`) - — (Optional) One or more options for the behavior.
                  * `key` (`str`) - — (Required) The option name.
                  * `value` (`str`) - — (Optional) A single value for the option.
                  * `values` (`list`) - — (Optional) An array of values for the option.

              * `name` (`str`) - — (Required) The name of the behavior.

      * `variables` (`list`)
        * `description` (`str`)
        * `hidden` (`bool`)
        * `name` (`str`) - — (Required) The name of the behavior.
        * `sensitive` (`bool`)
        * `value` (`str`) - — (Optional) A single value for the option.
    """
    __args__ = dict()
    __args__['rules'] = rules
    __args__['variables'] = variables
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('akamai:properties/getPropertyRules:getPropertyRules', __args__, opts=opts).value

    return AwaitableGetPropertyRulesResult(
        id=__ret__.get('id'),
        json=__ret__.get('json'),
        rules=__ret__.get('rules'),
        variables=__ret__.get('variables'))
