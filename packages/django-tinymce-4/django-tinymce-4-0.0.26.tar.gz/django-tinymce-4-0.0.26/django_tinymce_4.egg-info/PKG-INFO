Metadata-Version: 1.1
Name: django-tinymce-4
Version: 0.0.26
Summary: Integrate TinyMCE 4 in Django projects
Home-page: https://github.com/ITCase-django/django-tinymce-4
Author: Petr Zelenin, Arkadiy Zamaraev, Nikita Shalakov
Author-email: po.zelenin@itcase.pro, arkadiy@bk.ru, ggift@mail.ru
License: MIT
Description: 
        django-tinymce-4
        ================
        .. image:: https://travis-ci.com/ITCase-django/django-tinymce-4.svg?branch=master
            :target: https://travis-ci.com/ITCase-django/django-tinymce-4
        
        Integrate `TinyMCE4`_ in `Django`_ projects with `Django Filebrowser`_
        
        Features
        ========
        
        * Support only `TinyMCE4`_.
        * Support `Django Filebrowser`_.
        
        Install
        =======
        
        .. code-block:: bash
        
          pip install django-tinymce-4
        
        
        Add applications to INSTALLED_APPS in settings.py for your project **(order is important)**:
        
        .. code-block:: python
        
          INSTALLED_APPS = (
              'tinymce_4',
              'grappelli',
              'filebrowser',
              'django.contrib.admin',
          )
        
        Add the `Django Filebrowser`_ site to your url-patterns (before any admin-urls):
        
        .. code-block:: python
        
            url(r'^grappelli/', include('grappelli.urls')),
            url(r'^admin/', include([
                url(r'^', include(admin.site.urls)),
                url(r'^filebrowser/', include(fb_site.urls)),
            ])),
        
        
        Usage
        =====
        
        .. code-block:: python
        
          from tinymce_4.fields import TinyMCEModelField
          from django.db import models
        
          class ModelFoo(models.Model):
              content = TinyMCEModelField('Foo content')
        
        Custom Settings
        ===============
        
        * `Base Settings`_: /tinymce_4/static/tinymce_4/settings/full/setings.js
        *  Menu: /tinymce_4/static/tinymce_4/settings/full/menu.js
        *  Plugins: /tinymce_4/static/tinymce_4/settings/full/plugins.js
        * `External plugins`_: /tinymce_4/static/tinymce_4/settings/full/external_plugins.js
        * `Templates`_: /tinymce_4/static/tinymce_4/settings/full/templates.js
        
        Demo
        ====
        
        .. code-block:: bash
        
          cd django-tinymce-4/example/
          pip install -r requirements.txt
          python manage.py runserver
        
        
        Contributing
        ============
        
        #. Create an issue to discuss about your idea
        #. Fork it
        #. Create your feature branch: **git checkout -b new-feature**
        #. Commit your changes: **git commit -am 'Add some feature'**
        #. Push to the branch: **git push origin new-feature**
        #. Create a new  **Pull Request**
        #. Profit!
        
        Setup environment
        -----------------
        
        **Install npm packages**
        
        .. code-block:: bash
        
          cd django-tinymce-4/
          npm install
        
        **Run example**
        
        .. code-block:: bash
        
          cd django-tinymce-4/example
          python manage.py runserver
        
        **Build css**
        
        .. code-block:: bash
        
          gulp css
        
        
        Branches
        --------
        
        * master - latest release branch
        * develop - development branch for new releases
        
        
        .. _Django Filebrowser: https://github.com/sehmaschine/django-filebrowser/
        .. _Django: http://djangoproject.com/
        .. _TinyMCE4: http://tinymce.com/
        .. _`Base Settings`: https://www.tinymce.com/docs/demo/full-featured/
        .. _`External plugins`: https://www.tinymce.com/docs/configure/integration-and-setup/#external_plugins
        .. _Templates: https://www.tinymce.com/docs/plugins/template/
        
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: JavaScript
Classifier: Framework :: Django
Classifier: Framework :: Django :: 1.9
Classifier: Framework :: Django :: 1.10
Classifier: Framework :: Django :: 1.11
Classifier: Topic :: Software Development :: Libraries :: Application Frameworks
Classifier: Topic :: Software Development :: Libraries :: Python Modules
